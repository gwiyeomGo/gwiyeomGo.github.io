{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-server-golang-2022-05-24-go-data-convert-pkg-mdx-e5d72055f58568f791e0.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/golang/2022-05-24-go-data-convert-pkg.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    h1: \"h1\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    h5: \"h5\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"fmt package\"), \"\\n\", React.createElement(_components.p, null, \"Golang(Go) fmt package 2022-02-13\"), \"\\n\", React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"go 코드를 사용하면서\\r\\n가장 자주 썼던 패키지는 \", React.createElement(_components.code, null, \"fmt\"), \"패키지 인거 같다.\"), \"\\n\", React.createElement(_components.p, null, \"코드를 작성하고 결과가 예상과 일치하는지 또는\\r\\n또는 데이터의 형태를 변환할때 사용했었다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"x := 123\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"fmt.Printf(\\\"%b\\\\n\\\",x) //integer => binary\"), \"\\r\\n//1111011\\r\\n\", React.createElement(_components.code, null, \"fmt.Printf(\\\"%o\\\\n\\\",x)//8진법\"), \"\\r\\n//173\\r\\n\", React.createElement(_components.code, null, \"fmt.Printf(\\\"%d\\\\n\\\",x)//bytes 16진수\"), \"\\r\\n//123\"), \"\\n\", React.createElement(_components.h3, null, \"strconv package\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"strconv.FormatUint(uint64(u), 10)\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"var n uint = 123\"), \" 를 문자열로 변환\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"strconv.FormatUint(uint64(u), 10)\")), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"strconv.ParseInt\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"string to int64\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"id, _ := strconv.ParseInt(str, 10, 64)\")), \"\\n\"), \"\\n\", React.createElement(_components.h5, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/57187889/how-to-convert-uint-type-into-string-type-in-golang\"\n  }, \"https://stackoverflow.com/questions/57187889/how-to-convert-uint-type-into-string-type-in-golang\")), \"\\n\", React.createElement(_components.h3, null, \"strings package\"), \"\\n\", React.createElement(_components.p, null, \"Golang(Go) golang strings 패키지 기록\\r\\ndate: 2021-08-05\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"strings.Replace\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"strings.Replace(\\\"2022-06-17\\\"\\\",\\\"-\\\", \\\"\\\")\"), \"를 통해 \\\"-\\\" 를 제거함\"), \"\\n\", React.createElement(_components.li, null, \"어드민 화면에서 서비스로 조회 데이터를 요청합니다.이떄 프론트에서 \", React.createElement(_components.code, null, \"Query Parameter\"), \" 으로 기간 데이터 \\\"2022-06-17\\\" 를 보냅니다.\\r\\n\", React.createElement(_components.code, null, \"/users?queryFrom=\\\"2022-06-01\\\"&&queryTo=\\\"2022-06-17\\\"\"), \"이렇게 보내진 내용은 서비스코드에서 \", React.createElement(_components.code, null, \"ctx.Bind\"), \"를 통해 값을 받고\\r\\nmysql 로 조회할 때 \\\"-\\\" 때문에 조회되지 않는 문제가 있어서 \", React.createElement(_components.code, null, \"strings.Replace \"), \"를 통해 변경했다.\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"strings.Trim\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"strings.Trim(\\\"test test\\\", \\\" \\\")\")), \"\\n\", React.createElement(_components.li, null, \"공백을 제거할 떄 사용\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"strings.Fields()\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"s := strings.Fields(\\\"a b\\\")\"), \" \", React.createElement(_components.code, null, \"s[1]\"), \" 은 a\"), \"\\n\", React.createElement(_components.li, null, \"공백을 기준으로 문자열을 문자열 슬라이스로 저장\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"strings.Join(roles, \\\",\\\")\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"roles 은 []string 인데 ,를 통해 배열을 , 로 구분하는 string 으로 만들어 준다\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"func Join(element []string, sep string) string \")), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"strings.NewReader(requestBody)\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"테스트케이스에서 requestBody := \", React.createElement(_components.code, null, \"{\\\"code\\\": \\\"1\\\"}\"), \" 를 NewRequest 의 매개변수 로 쓸  수 있도록  *Reader 로  변경해준다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"req := httptest.NewRequest(echo.POST, \\\"/api/test\\\", strings.NewReader(requestBody))\")), \"\\n\"), \"\\n\", React.createElement(_components.h5, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.socketloop.com/tutorials/golang-remove-dashes-or-any-character-from-string\"\n  }, \"https://www.socketloop.com/tutorials/golang-remove-dashes-or-any-character-from-string\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"http://pyrasis.com/book/GoForTheReallyImpatient/Unit46/02\"\n  }, \"http://pyrasis.com/book/GoForTheReallyImpatient/Unit46/02\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/20234104/how-to-format-current-time-using-a-yyyy/dhhmmss-format\"\n  }, \"How to format current time using a yyyyMMddHHmmss format ?\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://jeonghwan-kim.github.io/dev/2019/01/14/go-time.html\"\n  }, \"time pkg 정리\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/32140980/get-the-first-and-last-day-of-a-year-from-a-timestamp\"\n  }, \"https://stackoverflow.com/questions/32140980/get-the-first-and-last-day-of-a-year-from-a-timestamp\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/server/golang/2022-05-24-go-data-convert-pkg.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","h1","code","blockquote","ul","li","h5","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}