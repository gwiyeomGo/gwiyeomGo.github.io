{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-etc-2022-11-02-etc-grpc-mdx-e9085226f5d6bd4c62d7.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/etc/2022-11-02-etc-grpc.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"grpc 가 뭐죠? Remote Procedure Call (RPC) framework\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"gRPC is a modern open source high performance Remote Procedure Call (RPC) framework that can run in any environment\\r\\nhttps://grpc.io/\\n\")), \"\\n\", React.createElement(_components.h1, null, \"grpc 특징\"), \"\\n\", React.createElement(_components.p, null, \"원격 프로시저 호출\\r\\n마이크로서비스\\r\\n=> 구글에서 rpc 를 잘 쓸 수 있도록 한 것\\r\\nhttp 가 너무 느려서쓴다\\r\\nremote 프로시저 콜\\r\\n서로 인터페이스 규약을 정해놓고\\r\\n어떤 것이 자신을 불렀는지 남길 수 있음=> grpc 사용\"), \"\\n\", React.createElement(_components.h1, null, \"grpc 와 http API 를 비교\"), \"\\n\", React.createElement(_components.p, null, \"http 프로토콜\\r\\nrest  api 는\"), \"\\n\", React.createElement(_components.p, null, \"grpc 가 http 2 를써서 1.1 보다 좋아진 점은\\r\\ngrpc 가 양방향통신이 가능\\r\\ngrpc 는 byte 기반\"), \"\\n\", React.createElement(_components.p, null, \"postman 의 grpc 요청 기능\\r\\ngo 버전도 올리자\"), \"\\n\", React.createElement(_components.p, null, \"go 로 원격 메서드 실행을 원한다면 특정 언어에 얽매이지 않도록\\r\\ngrpc 와 같은 표준 프로토콜을 사용\"), \"\\n\", React.createElement(_components.p, null, \"rest full 하게 쓰고 있는데...\"), \"\\n\", React.createElement(_components.p, null, \"마이크로 서비스간에 통신 퍼포먼스를 생각하면\\r\\nrpc remote prosiger call\\r\\n을 쓰다가\"), \"\\n\", React.createElement(_components.p, null, \"http\"), \"\\n\", React.createElement(_components.h1, null, \"tls 프로토콜\"), \"\\n\", React.createElement(_components.p, null, \"protocal 규약\"), \"\\n\", React.createElement(_components.p, null, \"network layor\\r\\nosi 7 계층\"), \"\\n\", React.createElement(_components.p, null, \"tls 프로토콜\\r\\ngrpc가 tls 로 통신한다\\r\\n그래서 눈으로 보이지 않음\\r\\ntls 방식으로 변환해서 간다\\r\\ngrpc 저수준의 방식\\r\\n성능이 보장된 형태\"), \"\\n\", React.createElement(_components.p, null, \"json대신 protocol buffers (Protobuf)\\r\\nhttp 2 를 쓴다\\r\\nssl security => tls 기반에서 보안\"), \"\\n\", React.createElement(_components.p, null, \"비동기로 작동?\"), \"\\n\", React.createElement(_components.p, null, \"unary\\r\\n=> 단방향으로\"), \"\\n\", React.createElement(_components.p, null, \"serverStreaming\"), \"\\n\", React.createElement(_components.p, null, \"여러번 스트리밍으로 보낸다\"), \"\\n\", React.createElement(_components.p, null, \"client 스트리밍\"), \"\\n\", React.createElement(_components.p, null, \"bi-directional Streaming\"), \"\\n\", React.createElement(_components.p, null, \"스트림으로 보내면 스트림으로 받음\"), \"\\n\", React.createElement(_components.p, null, \"protocal buffers\"), \"\\n\", React.createElement(_components.p, null, \"의 장점은 서로 다른 언어끼리 grpc 로 통신하면서 사용할 수 있다\"), \"\\n\", React.createElement(_components.p, null, \"언어 독립적이고 확장성있다\"), \"\\n\", React.createElement(_components.p, null, \"프로토컬퍼퍼의 Message,Service  두가지를 규약해 놓으면 통신할 수 있다\"), \"\\n\", React.createElement(_components.h1, null, \"왜? 쓸까요?\"), \"\\n\", React.createElement(_components.p, null, \"마이크로 서비스 connection\\r\\n스트리밍할 수 있음\\r\\n멀티 랭기지 할 수 있다\"), \"\\n\", React.createElement(_components.p, null, \"front 에서 동영상을 주고받을 때 realtime streaming 할 수 있다\\r\\n\", React.createElement(_components.code, null, \"go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest\"), \"\\r\\n\", React.createElement(_components.code, null, \"go install github.com/golang/protobuf/protoc-gen-go@latest\"), \"\\r\\n깔고 프로토 버프를 깔아보자\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"go install google.golang.org/protobuf/cmd/protoc-gen-go\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative ./v0/gwiyeomgo/user.proto\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://chacha95.github.io/2020-06-15-gRPC1/\"\n  }, \"https://chacha95.github.io/2020-06-15-gRPC1/\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://devjin-blog.com/golang-grpc-server-1/\"\n  }, \"https://devjin-blog.com/golang-grpc-server-1/\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://grpc.io/docs/protoc-installation/\"\n  }, \"https://grpc.io/docs/protoc-installation/\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://medium.com/naver-cloud-platform/nbp-%EA%B8%B0%EC%88%A0-%EA%B2%BD%ED%97%98-%EC%8B%9C%EB%8C%80%EC%9D%98-%ED%9D%90%EB%A6%84-grpc-%EA%B9%8A%EA%B2%8C-%ED%8C%8C%EA%B3%A0%EB%93%A4%EA%B8%B0-1-39e97cb3460\"\n  }, \"https://medium.com/naver-cloud-platform/nbp-%EA%B8%B0%EC%88%A0-%EA%B2%BD%ED%97%98-%EC%8B%9C%EB%8C%80%EC%9D%98-%ED%9D%90%EB%A6%84-grpc-%EA%B9%8A%EA%B2%8C-%ED%8C%8C%EA%B3%A0%EB%93%A4%EA%B8%B0-1-39e97cb3460\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/etc/2022-11-02-etc-grpc.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","pre","code","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}