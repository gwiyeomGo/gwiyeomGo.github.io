{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-client-react-2021-07-30-react-how-to-get-search-params-mdx-3c63589d932d436e755b.js","mappings":"iNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,WAAY,aACZC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBb,EAAMc,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBd,EAAYG,GAAI,KAAM,MAAO,KAAMW,EAAAA,cAAoBd,EAAYI,WAAY,KAAM,KAAMU,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,8JAA+J,MAAO,KAAMS,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,eAAgB,KAAMS,EAAAA,cAAoBd,EAAYG,GAAI,KAAM,eAAgB,KAAMW,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,+LAAgM,KAAMS,EAAAA,cAAoBd,EAAYG,GAAI,KAAM,SAAU,KAAMW,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,eAAgB,KAAMS,EAAAA,cAAoBd,EAAYM,IAAK,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,CAC36BQ,UAAW,uBACV,6ZAA8Z,KAAMD,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,uCAAwC,KAAMS,EAAAA,cAAoBd,EAAYM,IAAK,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,CAC7kBQ,UAAW,uBACV,oYAAuY,KAAMD,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,wBAAyB,KAAMS,EAAAA,cAAoBd,EAAYM,IAAK,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,CACviBQ,UAAW,uBACV,2HAA4H,KAAMD,EAAAA,cAAoBd,EAAYK,EAAG,KAAMS,EAAAA,cAAoBd,EAAYQ,GAAI,KAAMM,EAAAA,cAAoBd,EAAYS,EAAG,CACzPO,KAAM,8FACL,SAAU,KAAMF,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,8DAA+D,KAAMS,EAAAA,cAAoBd,EAAYM,IAAK,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,CAChNQ,UAAW,uBACV,kIAAmI,KAAMD,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,qBAAsBS,EAAAA,cAAoBd,EAAYU,IAAK,KAAM,KAAMI,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,UAAW,MAAO,KAAMO,EAAAA,cAAoBd,EAAYM,IAAK,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,qEAAsE,KAAMO,EAAAA,cAAoBd,EAAYG,GAAI,KAAM,sBAAuB,KAAMW,EAAAA,cAAoBd,EAAYK,EAAG,KAAMS,EAAAA,cAAoBd,EAAYS,EAAG,CACpnBO,KAAM,gJACL,iJAAkJ,KAAMF,EAAAA,cAAoBd,EAAYW,GAAI,KAAM,YAAa,KAAMG,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,iBAAkB,KAAMS,EAAAA,cAAoBd,EAAYK,EAAG,KAAMS,EAAAA,cAAoBd,EAAYS,EAAG,CACnWO,KAAM,iEACL,OACL,CAKA,MAJA,SAAoBjB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGU,EAAAA,EAAAA,MAAsBb,EAAMc,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWnB,EAAOe,EAAAA,cAAoBhB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UC9Be,SAASoB,EAAiBpB,GACvC,OAAOe,EAAAA,cAAoBM,EAAAA,EAAerB,EAAOe,EAAAA,cAAoBO,EAAqBtB,GAC5F,CAHAqB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/react/2021-07-30-react-howToGetSearchParams.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    em: \"em\",\n    a: \"a\",\n    br: \"br\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"관리자가 게시판에서 특정 날짜를 조회하고 (30개에 데이터 존재)2page로 이동했다.\\r\\n2page에서 게시글 번호 18번의 상세 보기를 클릭하고 화면 이동을 했다 (url이 변경됨)\\r\\n이때 상세페이지에서 뒤로가기 버튼을 클릭했을 때 이전 검색기록이 남아있었으면 좋겠다\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"라는 요청을 받았다.\"), \"\\n\", React.createElement(_components.h3, null, \"기존 코드 구현 내용\"), \"\\n\", React.createElement(_components.p, null, \"1.useeffect 실행시 load() (page:1,pageSize:10)\\r\\n2.페이지 네이션을 클릭했을 때 load(page,pageSize,searchData)\\r\\n3.검색조건을 입력하고 조회버튼을 클릭했을 때 load(page,pageSize,searchData)\\r\\n4.상세페이지로 이동 해을 때 새로운 url로 이동\"), \"\\n\", React.createElement(_components.h3, null, \"개선 방법\"), \"\\n\", React.createElement(_components.p, null, \"0.화면 load()\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"  useEffect(() => {\\r\\n    let urlSearchParams = new URLSearchParams(window.location.search);\\r\\n    if (urlSearchParams) {\\r\\n      let params = Object.fromEntries(\\r\\n        new URLSearchParams(window.location.search)\\r\\n      );\\r\\n      load(params.page, PAGE_SIZE, params);\\r\\n    } else {\\r\\n      load(PAGE, PAGE_SIZE);\\r\\n    }\\r\\n\\r\\n    if (!stores) {\\r\\n      loadStore();\\r\\n    }\\r\\n  }, []);\\n\")), \"\\n\", React.createElement(_components.p, null, \"1.페이지 네이션 클릭시 url에 querystring으로 추가\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \" searchData &&\\r\\n          Object.keys(searchData).filter((key) => {\\r\\n            if (!searchData[key]) {\\r\\n              delete searchData[key];\\r\\n            }\\r\\n          });\\r\\n        history.push({\\r\\n          search:\\r\\n            \\\"?\\\" + new URLSearchParams({ ...searchData, page: page }).toString(),\\r\\n        });\\r\\n        //searchData = 검색조건을 key와 value로 이루어진 객체\\n\")), \"\\n\", React.createElement(_components.p, null, \"2.상세페이지 이동 (새로운 url)\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \" <Link to={`/test/${id}/view`}>\\r\\n                  <Button icon={<ZoomInOutlined />} />\\r\\n                </Link>\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript\"\n  }, \"tip\"))), \"\\n\", React.createElement(_components.p, null, \"similarly for the Link component or the Redirect component\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let path ={\\r\\n      pathname: '/test',\\r\\n      search: '?query=abc',\\r\\n    }\\r\\n    <Link to={path}> My Link </Link>\\r\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"3.browser에 뒤로가기 버튼\", React.createElement(_components.br), \"\\n\", \"4.\", React.createElement(_components.code, null, \"목록으로이동\"), \"버튼\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"    <Button onClick={() => {history.go(-1); }}> 목록으로 </Button>\\n\")), \"\\n\", React.createElement(_components.h3, null, \"javascript history\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://velog.io/@poburi/useHistory-useLocation%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B0%92%EC%A0%84%EB%8B%AC\"\n  }, \"https://velog.io/@poburi/useHistory-useLocation%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B0%92%EC%A0%84%EB%8B%AC\")), \"\\n\", React.createElement(_components.h1, null, \"20230327\"), \"\\n\", React.createElement(_components.p, null, \"검색컴포넌트를 만들어보자\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://codesandbox.io/s/searchbutton-e1heyo?file=/src/App.js\"\n  }, \"예제\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/client/react/2021-07-30-react-howToGetSearchParams.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","blockquote","p","pre","code","em","a","br","h1","_provideComponents","components","React","className","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}