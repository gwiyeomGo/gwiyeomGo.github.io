"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[5591],{7341:function(e,t,n){n.r(t),n.d(t,{Head:function(){return c.F},default:function(){return i}});var r=n(7294),l=n(1151);function a(e){const t=Object.assign({h1:"h1",p:"p",hr:"hr",a:"a",pre:"pre",code:"code",img:"img",ul:"ul",li:"li",ol:"ol",h3:"h3",blockquote:"blockquote"},(0,l.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.h1,null,"배경"),"\n",r.createElement(t.p,null,"오픈소르를 참여하는데 처음에 할당받은 이슈는 XSS 공격 을 막는 이슈였다.\r\n처음에 착각해서 ㅎㅎ CORS 를 준비했고\r\n내가잘못 준비했다는 사실을 공유하고 XSS 공격에 대해 설명받고\r\n테스트 하는 방법을 알게되었다.\r\n그래서 XSS 공격에 대해 이해하고 막는 방법,테스트 하는 방법을 정리하려고 한다"),"\n",r.createElement(t.hr),"\n",r.createElement(t.p,null,"1.",r.createElement(t.a,{href:"https://owasp.org/www-community/attacks/xss/"},"XSS")," 공격이 무엇이고 예시를 알아보자"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"Cross-Site Scripting (XSS) attacks are a type of injection,`\r\nin which malicious(악의 있는) scripts are injected into otherwise benign and trusted websites. `\r\nXSS 공격은 악의 있는 스크립트를 그렇지않은 온화하고 믿을 수 있는 웹사이트들에 주입하는 유형이다\r\n\r\nmalicious script can access any cookies, session tokens,\r\nor other sensitive information retained by the browser and used with that site\r\n스크립트가 신뢰할 수 있는 소스에서 온 것으로 생각하기 때문에 악성 스크립트는 쿠키, 세션 토큰 또는\r\n브라우저에 보관되어 해당 사이트에서 사용되는 기타 중요한 정보에 액세스할 수 있습니다.\n")),"\n",r.createElement(t.hr),"\n",r.createElement(t.p,null,"2.XSS 의 다양한 유형이 존재한다."),"\n",r.createElement(t.img,{src:"https://owasp.org/www-community/assets/images/Server-XSS_vs_Client-XSS_Chart.png",alt:"xss type"}),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"Reflected(반사형) XSS 공격 :","\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"사용자 입력이 즉시 반환되어 응답이 실행될 때 스크립트를 페이지에 삽입하여 실행"),"\n",r.createElement(t.li,null,"URL 주소에 함께 작성된 악성 스크립트가 일단 서버에 전달\r\nex) 특정 스크립트를 input 에 입력시 쿠키값 반환\r\nex) 리다이렉트 시키는 스크립트를 입력해 공격자의 호스트로 접속하게 만든다"),"\n"),"\n"),"\n",r.createElement(t.li,null,"Stored(저장형) XSS 공격:","\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"악성 스크립트가 서버측에 저장되어 요청할 때마다 저장된 스크립트가 실행"),"\n"),"\n"),"\n",r.createElement(t.li,null,"DOM Based (돔 베이스) XSS 공격:","\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"JavaScript 코드로 DOM 객체를 제어시켜 실행\r\nex) 주소 입력창에서 URL 에 해시에 심은 악성 스크립트가 실행 ( 네트워크에서 서버에게 별도 요청은 없음)"),"\n"),"\n"),"\n"),"\n",r.createElement(t.hr),"\n",r.createElement(t.ol,{start:"3"},"\n",r.createElement(t.li,null,"서버에서는 XSS 공격을 어떻게 막지?\r\n서버에서는 반사형 XSS 공격과, 저장형 XSS 공격 에 취약합니다.\r\n모든 변수가 유효성 검사를 거친 다음 이스케이프되거나 새니타이징되도록 하는 것","\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.a,{href:"https://github.com/microcosm-cc/bluemonday"},"bluemonday")," is a HTML sanitizer(살균제?) implemented in Go."),"\n",r.createElement(t.li,null,r.createElement(t.a,{href:"https://github.com/dvwright/xss-mw"},"Xss Middleware")),"\n"),"\n"),"\n"),"\n",r.createElement(t.h3,null,"그럼 서버에서 내가 작업해야 할 부분은 뭐지?"),"\n",r.createElement(t.blockquote,null,"\n",r.createElement(t.p,null,"완료목표 : Xss Middleware 처럼 bluemonday 를 사용해서 미들웨어를 만들고 테스트케이스를 통과시킨다"),"\n"),"\n",r.createElement(t.hr),"\n",r.createElement(t.p,null,"4.react 에서 XSS 공격은 어떻게 막지?\r\n",r.createElement(t.a,{href:"https://stackoverflow.com/questions/33644499/what-does-it-mean-when-they-say-react-is-xss-protected"},"https://stackoverflow.com/questions/33644499/what-does-it-mean-when-they-say-react-is-xss-protected")),"\n",r.createElement(t.hr),"\n",r.createElement(t.h1,null,"참고"),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://junhyunny.github.io/information/security/spring-mvc/reflected-cross-site-scripting/"},"https://junhyunny.github.io/information/security/spring-mvc/reflected-cross-site-scripting/"),"\r\n",r.createElement(t.a,{href:"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"},"OWASP Cheat Sheet Series Cross Site Scripting Prevention")),"\n",r.createElement(t.p,null,"실습\r\n",r.createElement(t.a,{href:"https://facelight.tistory.com/110"},"https://facelight.tistory.com/110"),"\r\n",r.createElement(t.a,{href:"https://g-idler.tistory.com/2"},"https://g-idler.tistory.com/2"),"\r\n",r.createElement(t.a,{href:"https://mystria.github.io/archivers/xss-filter-on-spring-boot"},"https://mystria.github.io/archivers/xss-filter-on-spring-boot")),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"http://coashanee5.blogspot.com/2018/07/kali-linux-dvwa-with-xampp.html"},"http://coashanee5.blogspot.com/2018/07/kali-linux-dvwa-with-xampp.html")))}var s=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?r.createElement(t,e,r.createElement(a,e)):a(e)},c=n(8804);function i(e){return r.createElement(c.Z,e,r.createElement(s,e))}c.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-etc-2023-02-17-etc-xss-mdx-ef05d1de37f63da90712.js.map