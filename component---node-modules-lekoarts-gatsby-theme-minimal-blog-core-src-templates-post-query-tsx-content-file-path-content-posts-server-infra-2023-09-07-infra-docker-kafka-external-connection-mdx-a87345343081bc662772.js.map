{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-infra-2023-09-07-infra-docker-kafka-external-connection-mdx-a87345343081bc662772.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,+EAAgF,KAAMQ,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,4CAA6C,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,kCAAmC,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,gGAAiG,KAAMQ,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,6BAA8B,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,mCAAoC,+CAAgD,KAAMM,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,kDAAmD,KAAMS,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAMI,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,wBAAyB,0DAA2D,MAAO,KAAMM,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,6EAA8E,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYS,EAAG,CAC/4CI,KAAM,4MACL,oDAAqD,KAAMD,EAAAA,cAAoBZ,EAAYS,EAAG,CAC/FI,KAAM,qCACL,qCAAsC,KAAMD,EAAAA,cAAoBZ,EAAYS,EAAG,CAChFI,KAAM,qCACL,qCAAsC,KAAMD,EAAAA,cAAoBZ,EAAYS,EAAG,CAChFI,KAAM,iCACL,iCAAkC,KAAMD,EAAAA,cAAoBZ,EAAYS,EAAG,CAC5EI,KAAM,qCACL,qCAAsC,KAAMD,EAAAA,cAAoBZ,EAAYS,EAAG,CAChFI,KAAM,wCACL,wCAAyC,KAAMD,EAAAA,cAAoBZ,EAAYS,EAAG,CACnFI,KAAM,mDACL,oDACL,CAKA,MAJA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWhB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UC5Be,SAASiB,EAAiBjB,GACvC,OAAOa,EAAAA,cAAoBK,EAAAA,EAAelB,EAAOa,EAAAA,cAAoBM,EAAqBnB,GAC5F,CAHAkB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/infra/2023-09-07-infra-docker-kafka-external-connection.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"내 mac 에서 도컬를 실행하고 카프카 컨테이너를 실행했다\\n옆사람이 pc 에서 내 카프카 컨테이너에 토픽을 생성하고 메세지를 받고싶다\"), \"\\n\", React.createElement(_components.h1, null, \"mac 에서 특정 host 에 kafka cluster dns 셋팅 방법\"), \"\\n\", React.createElement(_components.p, null, \"가상의 호스트 이름 : kafka.example.com\"), \"\\n\", React.createElement(_components.p, null, \"1.호스트 파일(/etc/hosts) 편집\\nMac에서 호스트 이름을 DNS로 해석하려면 먼저 /etc/hosts 파일에 해당 호스트 이름과 IP 주소의 매핑을 추가\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"sudo nano /etc/hosts\\n\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"192.168.1.100 kafka.example.com\"), \"내용을 추가\\n(nano) 저장: Ctrl + O , 나가기: Ctrl + X\"), \"\\n\", React.createElement(_components.h1, null, \"Kafka 클라이언트 설정 파일(server.properties)에 외부호스트 설정\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"advertised.listeners\"), \" Kafka 브로커가 클라이언트에게 알려주는 브로커의 주소입니다. 주로 외부에서 접근 가능한 주소\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"advertised.listeners=PLAINTEXT://kafka.example.com:9092 //브로커의 주소 지정\\n\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://hanamon.kr/dns%EB%9E%80-%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%84%A4%EC%9E%84-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B0%9C%EB%85%90%EB%B6%80%ED%84%B0-%EC%9E%91%EB%8F%99-%EB%B0%A9%EC%8B%9D%EA%B9%8C%EC%A7%80/\"\n  }, \"https://hanamon.kr/dns란-도메인-네임-시스템-개념부터-작동-방식까지/\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://blog.voidmainvoid.net/327\"\n  }, \"https://blog.voidmainvoid.net/327\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://blog.voidmainvoid.net/500\"\n  }, \"https://blog.voidmainvoid.net/500\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://mycup.tistory.com/428\"\n  }, \"https://mycup.tistory.com/428\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://shinwusub.tistory.com/133\"\n  }, \"https://shinwusub.tistory.com/133\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://deep-dive-dev.tistory.com/42\"\n  }, \"https://deep-dive-dev.tistory.com/42\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://devocean.sk.com/vlog/TechDay/03_se4.pdf\"\n  }, \"https://devocean.sk.com/vlog/TechDay/03_se4.pdf\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/infra/2023-09-07-infra-docker-kafka-external-connection.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","pre","code","ul","li","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}