"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[1699],{1039:function(e,n,t){t.r(n),t.d(n,{Head:function(){return o.F},default:function(){return u}});var l=t(7294),r=t(1151);function a(e){const n=Object.assign({h2:"h2",p:"p",h1:"h1",h3:"h3",pre:"pre",code:"code",a:"a",ol:"ol",li:"li",ul:"ul"},(0,r.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.h2),"\n",l.createElement(n.p,null,"struct 는 go 에서 class 와 가장 비슷하다"),"\n",l.createElement(n.h1,null,"go 는 대소문자로 정보 은익?"),"\n",l.createElement(n.p,null,"go는 식별자의 첫 번째 문자가 대문자인지 소문자인지에 따라 public과 private 를 구분한다.\r\n마찬가지로 구조체의 필드도 대문자로 시작하는 필드는 패키지 외부에서 접근할 수 있고\r\n소문자로 시작하는 필드는 패키지 내부에서만 접근할 수 있다"),"\n",l.createElement(n.h1,null,"omitempty"),"\n",l.createElement(n.h3,null,"배경"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,'type MemberInfo struct {\r\nID            int64     json:"ID" `\r\nName          string    json:"title"`\r\nAddress       string    json:"address,omitempty"`\r\n}\n')),"\n",l.createElement(n.p,null,"golang 을 사용하면 위 코드와 같이 struct 를 만들어서\r\n요청의 body 의 json 값을 받거나\r\n응답을 보내기전 dto 로 값을 채워 보낸다."),"\n",l.createElement(n.p,null,"예를들어\r\n회원의 등록된  주소(address)가 없다면\r\n프론트에서 받은 응답 json 에 key 값이 안보이길 원한다."),"\n",l.createElement(n.h3,null,"omitempty 적용 비교 ,json 등등..."),"\n",l.createElement(n.p,null,"보통 프론트에서 받는 응답값을 보면"),"\n",l.createElement(n.p,null,"1.omitempty 표시 안했을 떄"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,'{ID :1,name:"coco",address:""}\n')),"\n",l.createElement(n.p,null,"1.omitempty 표시 했을 떄"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,'{ID :1,name:"coco"}\n')),"\n",l.createElement(n.h1,null,l.createElement(n.a,{href:"https://echo.labstack.com/guide/binding/"},"echo Struct Tag Binding")),"\n",l.createElement(n.h1,null,"배경"),"\n",l.createElement(n.p,null,"2022/11/17\r\n그런데 field 의 타입을 json 으로 쓴 경우 request body 를 bind 한다고 생각하기 때문에\r\nbody 값이 없어서 required tag 로 에러가 발생했다.\r\n",l.createElement(n.code,null,"Key: 'verification.Name' Error:Field validation for 'Name' failed on the 'required' tag")),"\n",l.createElement(n.p,null,"기존에 1.16 버전 사용시 ctx.Bind 를 했을 때 field 의 타입을 json 으로 써도 통과가 되었는데 더 엄격하게 변경된거 같다"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"Data Sources\r\nEcho supports the following tags specifying data sources:\r\n\r\nquery - query parameter\r\nparam - path parameter (also called route)\r\nheader - header parameter\r\njson - request body. Uses builtin Go json package for unmarshalling.\r\nxml - request body. Uses builtin Go xml package for unmarshalling.\r\nform - form data. Values are taken from query and request body. Uses Go standard library form parsing.\n")),"\n",l.createElement(n.h3,null,"json 사용 경험"),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,"파일 업로드 기능이 필요"),"\n",l.createElement(n.li,null,"파일을 S3 에 저장하고 url을 받고 있음"),"\n",l.createElement(n.li,null,"client 에서 service로 여러개의 파일을 보내야 하는 상황"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,'{data:"https://test",data2:"https://test2"}\n')),"\n",l.createElement(n.ol,{start:"4"},"\n",l.createElement(n.li,null,"client 에서 service로 json 데이터를 전송"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,'{\r\n  files:{data:"https://test",data2:"https://test2"}\r\n}\n')),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"(echo contex 를 사용할 경우) 서비스 에서는 어떻게 json 형태를 인식할까?"),"\n"),"\n",l.createElement(n.p,null,"go에서는 encoding/json 패키지를 사용해서 JSON 인코딩을 합니다."),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Data struct filed 에 json.RawMessage 타입을 지정합니다."),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,'type Data struct {\r\n  files             json.RawMessage     `query:"files\'"`\r\n}\n')),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"echo.Context  ",l.createElement(n.code,null,"c.Bind(&Data)")," 를 사용하면 Data struct 에 bind 됩니다."),"\n"),"\n",l.createElement(n.h1,null,"crypto test"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://wookiist.dev/127"},"참고")))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?l.createElement(n,e,l.createElement(a,e)):a(e)},o=t(8804);function u(e){return l.createElement(o.Z,e,l.createElement(c,e))}o.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-golang-2022-02-13-go-struct-filed-tag-mdx-01ae0d4e288906f27e86.js.map