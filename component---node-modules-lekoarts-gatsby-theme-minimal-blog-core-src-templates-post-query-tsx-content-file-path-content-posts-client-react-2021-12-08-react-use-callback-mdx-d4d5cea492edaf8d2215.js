"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[197],{6545:function(e,n,t){t.r(n),t.d(n,{Head:function(){return u.F},default:function(){return o}});var l=t(7294),a=t(1151);function c(e){const n=Object.assign({h1:"h1",p:"p",pre:"pre",code:"code"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.h1,null,"배경"),"\n",l.createElement(n.p,null,"현재 페이지 단위로 function 을 만들고 해당 페이지에 접속했을 때 최초 데이터를 조회하는 코드를 사용한다"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"\n  const load = useCallback(() => {\n    Service.getStatuses({\n      page: 1,\n      pageSize: 50\n    }).then((res) => SetStatus(res.data));\n  }, []);\n\n  useEffect(() => {\n    load();\n  }, [load]);\n\n")),"\n",l.createElement(n.p,null,"그런데 callback 은 왜 사용된건지 모르겠다."),"\n",l.createElement(n.p,null,"useCallback 은 특정 함수를 새로 만들지 않고 재사용하고 싶을때 사용합니다.\n리액트 개발을 하실 때, useCallback, useMemo, React.memo 는 컴포넌트의 성능을 실제로 개선할수있는 상황에서만 하세요."),"\n",l.createElement(n.p,null,"예를 들어서, User 컴포넌트에 b 와 button 에 onClick 으로 설정해준 함수들은, 해당 함수들을 useCallback 으로 재사용한다고 해서 리렌더링을 막을 수 있는것은 아니므로, 굳이 그렇게 할 필요 없습니다"))}var r=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?l.createElement(n,e,l.createElement(c,e)):c(e)},u=t(8804);function o(e){return l.createElement(u.Z,e,l.createElement(r,e))}u.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-react-2021-12-08-react-use-callback-mdx-d4d5cea492edaf8d2215.js.map