{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-react-2024-04-23-react-msw-mdx-ad12e7ac6ba3a65fee5b.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,KAAM,OACNC,IAAK,MACLC,WAAY,aACZC,EAAG,IACHC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBd,EAAMe,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBf,EAAYG,GAAI,KAAM,WAAY,KAAMY,EAAAA,cAAoBf,EAAYI,EAAG,KAAM,wIAAyI,KAAMW,EAAAA,cAAoBf,EAAYG,GAAI,KAAM,MAAO,KAAMY,EAAAA,cAAoBf,EAAYK,GAAI,KAAM,KAAMU,EAAAA,cAAoBf,EAAYM,GAAI,KAAMS,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,gBAAiB,2CAAgD,KAAMQ,EAAAA,cAAoBf,EAAYM,GAAI,KAAM,wCAAyC,MAAO,KAAMS,EAAAA,cAAoBf,EAAYQ,IAAK,KAAMO,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,sDAA6D,KAAMQ,EAAAA,cAAoBf,EAAYK,GAAI,KAAM,KAAMU,EAAAA,cAAoBf,EAAYM,GAAI,KAAMS,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,yBAA0B,QAASQ,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,wBAAyB,wBAAyB,MAAO,KAAMQ,EAAAA,cAAoBf,EAAYS,WAAY,KAAM,KAAMM,EAAAA,cAAoBf,EAAYI,EAAG,KAAM,gCAAiCW,EAAAA,cAAoBf,EAAYU,EAAG,CAC1tCM,KAAM,gDACL,gBAAiB,wBAAyB,MAAO,KAAMD,EAAAA,cAAoBf,EAAYW,GAAI,KAAMI,EAAAA,cAAoBf,EAAYU,EAAG,CACrIM,KAAM,iDACL,4BAA6B,KAAMD,EAAAA,cAAoBf,EAAYI,EAAG,KAAM,oDAAqDW,EAAAA,cAAoBf,EAAYU,EAAG,CACrKM,KAAM,+CACL,uCAAwC,iDAAkD,KAAMD,EAAAA,cAAoBf,EAAYI,EAAG,KAAM,8DAA+D,KAAMW,EAAAA,cAAoBf,EAAYY,GAAI,KAAM,SAAU,KAAMG,EAAAA,cAAoBf,EAAYQ,IAAK,KAAMO,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,yGAA0G,KAAMQ,EAAAA,cAAoBf,EAAYI,EAAG,KAAMW,EAAAA,cAAoBf,EAAYU,EAAG,CAC5hBM,KAAM,iDACL,iDAAkD,qCAAsC,KAAMD,EAAAA,cAAoBf,EAAYY,GAAI,KAAM,MAAO,KAAMG,EAAAA,cAAoBf,EAAYI,EAAG,KAAMW,EAAAA,cAAoBf,EAAYU,EAAG,CAClOM,KAAM,mHACL,oHACL,CAKA,MAJA,SAAoBjB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGW,EAAAA,EAAAA,MAAsBd,EAAMe,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWnB,EAAOgB,EAAAA,cAAoBjB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UC3Be,SAASoB,EAAiBpB,GACvC,OAAOgB,EAAAA,cAAoBK,EAAAA,EAAerB,EAAOgB,EAAAA,cAAoBM,EAAqBtB,GAC5F,CAHAqB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/react/2024-04-23-react-msw.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    blockquote: \"blockquote\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"msw 뭐지?\"), \"\\n\", React.createElement(_components.p, null, \"(Mock Service Worker)\\n가짜 서버를 제공하는 라이브러리\\n브라우저에서는 요청이 네트워크로 보내지기 전에 브라우저 내부에서 요청을 가로채고,\\n이를 처리하는 동작을 통해 요청을 캐치하여 요청을 처리하거나 가짜 응답을 반환\"), \"\\n\", React.createElement(_components.h1, null, \"설치\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"npm i -D msw\"), \" 으로 패키지를 다운받는다. (추천 버전 \\\"msw\\\": \\\"1.2.1\\\" )\"), \"\\n\", React.createElement(_components.li, null, \"pacakge.json 에 workerDirectory 위치 지정\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \" \\\"msw\\\": {\\n    \\\"workerDirectory\\\": \\\"public\\\"\\n  }\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"npx msw init ./public\"), \" 실행시 \", React.createElement(_components.code, null, \"mockServiceWorker.js\"), \" 가 public 하위에 생성됩니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"실제로 테스트 하고 싶다면 다음 글을 추천한다!!\\n\", React.createElement(_components.a, {\n    href: \"https://www.daleseo.com/mock-service-worker/\"\n  }, \"테스트 서버 생성 예시\"), \" 를 따라하면 쉽게 이해할 수 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, React.createElement(_components.a, {\n    href: \"https://github.com/mswjs/msw/discussions/1368\"\n  }, \"How to mock OAuth flow?\")), \"\\n\", React.createElement(_components.p, null, \"MSW는 fetch 요청을 가로챕니다.\\n따라서 브라우저에서 인증 흐름을 시작하기 위해 \", React.createElement(_components.a, {\n    href: \"https://github.com/oauth/authorize%EB%A5%BC\"\n  }, \"https://github.com/oauth/authorize를\"), \" 열 때 탐색 요청을 가로채지 못합니다.\\n보통 이러한 부분은 목업하지 않습니다.\"), \"\\n\", React.createElement(_components.p, null, \"브라우저 흐름의 경우 전체 과정을 건너뛰고 서비스의 인증 엔드포인트(GET /user 등)만 목업등 시도\"), \"\\n\", React.createElement(_components.h3, null, \"참고 에러\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"I was having the same problem and noticed that the .all() method was removed from headers-polyfill\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/mswjs/msw/discussions/1884\"\n  }, \"https://github.com/mswjs/msw/discussions/1884\"), \"\\nnpm i headers-polyfill@3.2.5 -D\"), \"\\n\", React.createElement(_components.h3, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://codesandbox.io/p/sandbox/mock-service-worker-ftujl4?file=%2Fsrc%2Fmocks%2Fworker.js%3A5%2C1&from-embed=\"\n  }, \"https://codesandbox.io/p/sandbox/mock-service-worker-ftujl4?file=%2Fsrc%2Fmocks%2Fworker.js%3A5%2C1&from-embed=\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/etc/gwiyeomgo.github.io/content/posts/client/react/2024-04-23-react-msw.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","ul","li","code","pre","blockquote","a","h2","h3","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}