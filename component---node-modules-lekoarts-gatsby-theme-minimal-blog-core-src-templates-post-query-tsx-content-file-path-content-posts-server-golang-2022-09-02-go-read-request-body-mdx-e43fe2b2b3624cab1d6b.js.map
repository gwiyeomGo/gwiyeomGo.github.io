{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-golang-2022-09-02-go-read-request-body-mdx-e43fe2b2b3624cab1d6b.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,wCAAyC,KAAMS,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,WAAY,KAAMQ,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,kGAAmG,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,yKAA0K,KAAMS,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,aAAc,KAAMQ,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,2CAA4C,KAAMS,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,uBAAwB,KAAMQ,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,uNAAwN,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,4JAA6J,KAAMS,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,QAAS,KAAMO,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,6EAA8E,KAAMS,EAAAA,cAAoBZ,EAAYM,IAAK,KAAMM,EAAAA,cAAoBZ,EAAYO,KAAM,KAAM,0hBAA+hB,KAAMK,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,qCAAsC,KAAMS,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,8BAA+B,KAAMQ,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,wJAAyJ,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,gIAAiI,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,gGAAiG,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,SAAU,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,mIAAoI,KAAMS,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,eAAgBS,EAAAA,cAAoBZ,EAAYS,EAAG,CAC/jGI,KAAM,4DACL,4DAA6D,OAAQD,EAAAA,cAAoBZ,EAAYS,EAAG,CACzGI,KAAM,sCACL,sCAAuC,oBAAqBD,EAAAA,cAAoBZ,EAAYS,EAAG,CAChGI,KAAM,iCACL,kCAAmC,KAAMD,EAAAA,cAAoBZ,EAAYM,IAAK,KAAMM,EAAAA,cAAoBZ,EAAYO,KAAM,KAAM,sNAAuN,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,YAAa,KAAMI,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,iCAAkCS,EAAAA,cAAoBZ,EAAYS,EAAG,CACzgBI,KAAM,kFACL,mFAAoF,KAAMD,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,UAAWS,EAAAA,cAAoBZ,EAAYS,EAAG,CAClLI,KAAM,iEACL,iEAAkE,OAAQD,EAAAA,cAAoBZ,EAAYS,EAAG,CAC9GI,KAAM,kFACL,kFAAmF,OAAQD,EAAAA,cAAoBZ,EAAYS,EAAG,CAC/HI,KAAM,0FACL,2FACL,CAKA,MAJA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWhB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UC5Be,SAASiB,EAAiBjB,GACvC,OAAOa,EAAAA,cAAoBK,EAAAA,EAAelB,EAAOa,EAAAA,cAAoBM,EAAqBnB,GAC5F,CAHAkB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/golang/2022-09-02-go-read-requestBody.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"body 값이 어느 상황에 출력되지 않는지 문제 찾아보고 수정하기\"), \"\\n\", React.createElement(_components.h1, null, \"발견한 문제는\"), \"\\n\", React.createElement(_components.p, null, \"고사에렌에 401에러가 발생시 body 값이 출력됨\\r\\n고사에렌에 500에러가 발생시 body 값이 출력 X\\r\\n고사에렌에 400에러가 발생시 body 값이 출력 X\"), \"\\n\", React.createElement(_components.p, null, \"post api 를 호출했을 때 401 에러의 경우 body 가 출력된다.\\r\\n토큰이 만료된 상태에서 등록시 토큰이 만료되서 에러 발생 => 개발오류로 보냄\\r\\n401 에러가 나면 => 개발오류에 body 값이 출력된 post 오류 업무가 존재함\\r\\nbody 는 제대로 읽혀서 보내지고 있음\"), \"\\n\", React.createElement(_components.h1, null, \"내가 원하는 것은\"), \"\\n\", React.createElement(_components.p, null, \"400,500 상태 코드의 에러 발생시 body 값이 출력되었으면 한다\"), \"\\n\", React.createElement(_components.h1, null, \"두 경우를 디버깅하면서 알게된 점은\"), \"\\n\", React.createElement(_components.p, null, \"400번의 경우 CustomHTTPErrorHandler 를 오기 전\\r\\nCreateDatabaseContext 미들웨어를 들리고\\r\\nCreateDatabaseContext 미들웨어 에서 request 의 Body 의 N 이 0이 된다\\r\\n이 상황을 거친 request Body 를 readAll 하면 EOF 라는 에러가 발생한다\\r\\n=> req.Body 를 읽을수 없다\"), \"\\n\", React.createElement(_components.p, null, \"401번의 경우 CustomHTTPErrorHandler 를 오기 전 CreateDatabaseContext를 들리지 않음\\r\\nCreateDatabaseContext를 에서 next 를 들리면\\r\\nsawEOF = true 로 바뀜\\r\\nreq.Body 를 읽을 수 없다\"), \"\\n\", React.createElement(_components.h3, null, \"idea\"), \"\\n\", React.createElement(_components.p, null, \"*req 가 사라지기 전에 body 값을 context 에 넣는다\\r\\n*req 가 사라지기 전에 body 값을 log 에 넣는다?\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"//400,500 에러 시 body 를 알 수 없어서 body 를 Context 에 추가하는 코드\\r\\nvar bodyBytes []byte\\r\\nif req.Body != nil {\\r\\n\\tbodyBytes, _ = ioutil.ReadAll(req.Body)\\r\\n}\\r\\n// Restore the io.ReadCloser to its original state\\r\\nreq.Body = ioutil.NopCloser(bytes.NewBuffer(bodyBytes))\\r\\nctx = context.WithValue(ctx, config.ContextRequestBody, string(bodyBytes))\\r\\nc.SetRequest(req.WithContext(ctx))\\r\\n\\r\\n\\r\\nbody := req.Context().Value(config.ContextRequestBody)\\r\\nstr := fmt.Sprintf(\\\"%v\\\", body)\\r\\n\\r\\n\\r\\nContextRequestBody= \\\"REQUEST_BODY\\\"\\r\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"context 에는 db성보와 userclaim 만 저장한다\"), \"\\n\", React.createElement(_components.h1, null, \"여기에 body 값을 넣는것은 옳은 것 일까요?\"), \"\\n\", React.createElement(_components.p, null, \"context 를 번역하면 문맥,흐름으로\\r\\n웹과 서버의 통신을 하는데에 필요한 데이터나 값을 이 context안에 넣고 필요할때 뽑아 쓰는 형식\\r\\n이 컨텍스트에 하나의 웹 요청이 처리되는 동안\\r\\n유지해야 할 값을 담아놓고\\r\\n필요한 곳에서 사용하면 된다\"), \"\\n\", React.createElement(_components.p, null, \"시도1\\r\\n고사이렌이 실행되는 과정에서 err 가 났고\\r\\nrequest 를 내가 예상할 수 없는 장소에서 사용할 수 있으니\\r\\nbody 값을 읽는 코드 다음에\\r\\nbody 값을 다시 넣어주는 코드도 추가해 보기로함\"), \"\\n\", React.createElement(_components.p, null, \"확인은 어떻게?\\r\\ndev 에 코드를 추가 배포 후 dev 에서 400번 에러를 발생시킴\\r\\ndev 에 코드를 추가 배포 후 dev 에서 500번 에러를 발생시킴\"), \"\\n\", React.createElement(_components.p, null, \"=> 실패\"), \"\\n\", React.createElement(_components.p, null, \"시도 2\\r\\n400번의 경우 CustomHTTPErrorHandler 를 오기 전\\r\\nCreateDatabaseContext 미들웨어를 들리고\\r\\nnext(c) 를 거치면 reqeust.Body 를 읽을 수 없도록 제한한다\"), \"\\n\", React.createElement(_components.h2, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, \"*Context\\r\\n\", React.createElement(_components.a, {\n    href: \"https://jaehue.github.io/post/how-to-use-golang-context/\"\n  }, \"https://jaehue.github.io/post/how-to-use-golang-context/\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://myungsworld.tistory.com/13\"\n  }, \"https://myungsworld.tistory.com/13\"), \"\\r\\n*body 읽는법\\r\\n\", React.createElement(_components.a, {\n    href: \"https://jusths.tistory.com/65\"\n  }, \"https://jusths.tistory.com/65\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"buf := make([]byte, req.ContentLength)\\r\\nif _, err := io.ReadFull(req.Body, buf); err == io.EOF {\\r\\n\\tfmt.Println( io.ErrUnexpectedEOF)\\r\\n} else if err != nil {\\r\\n\\tfmt.Println( io.ErrUnexpectedEOF)\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"20230313\"), \"\\n\", React.createElement(_components.p, null, \"defer req.Body.Close() 닫아?\\r\\n\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/42525499/where-to-put-defer-req-body-close\"\n  }, \"https://stackoverflow.com/questions/42525499/where-to-put-defer-req-body-close\")), \"\\n\", React.createElement(_components.p, null, \"*기타\\r\\n\", React.createElement(_components.a, {\n    href: \"https://mingrammer.com/translation-go-walkthrough-io-package/\"\n  }, \"https://mingrammer.com/translation-go-walkthrough-io-package/\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://www.geeksforgeeks.org/io-limitreader-function-in-golang-with-examples/\"\n  }, \"https://www.geeksforgeeks.org/io-limitreader-function-in-golang-with-examples/\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://velog.io/@yeonjoo7/go%EC%96%B8%EC%96%B4%EC%9D%98-io%ED%8C%A8%ED%82%A4%EC%A7%80\"\n  }, \"https://velog.io/@yeonjoo7/go%EC%96%B8%EC%96%B4%EC%9D%98-io%ED%8C%A8%ED%82%A4%EC%A7%80\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/react/gwiyeomgo.github.io/content/posts/server/golang/2022-09-02-go-read-requestBody.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","h3","pre","code","h2","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}