"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[6036],{6472:function(e,n,l){l.r(n),l.d(n,{Head:function(){return a.F},default:function(){return o}});var t=l(7294),r=l(1151);function c(e){const n=Object.assign({h3:"h3",ul:"ul",li:"li",code:"code",pre:"pre",p:"p",a:"a"},(0,r.ah)(),e.components);return t.createElement(t.Fragment,null,t.createElement(n.h3,null,"스코프"),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"javascript 에서 스코프는 범위 입니다.\r\n즉 변수에 접근할 수 있는 범위"),"\n",t.createElement(n.li,null,"전역 스코프와 로컬 스코프 로 2개 타입이 있습니다."),"\n",t.createElement(n.li,null,"전역 스코프는 말 그대로 어느 곳에서든 해당 변수에 접근 가능"),"\n",t.createElement(n.li,null,"지역 스코프는 함수 스코프, 블록 스코프 등 있다."),"\n"),"\n",t.createElement(n.h3,null,"변수"),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"변수는 변하는 수 입니다."),"\n",t.createElement(n.li,null,t.createElement(n.code,null,"let"),"  키워드를 써서 정의합니다."),"\n",t.createElement(n.li,null,"let 은 block 단위의 스코프를 갖습니다."),"\n"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"let str='hello';\r\n{\r\n  let str='world';\r\n  console.log(str); //(A)\r\n}\r\nconsole.log(str); //(B)\r\n\n")),"\n",t.createElement(n.h3,null,"상수"),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,t.createElement(n.code,null,"const")," 키워드를 써서 정의"),"\n",t.createElement(n.li,null,"상수는 한번 선언하면 바꿀 수 없다"),"\n",t.createElement(n.li,null,"함수를 변수에 할당해 선언 할 때는 const 를 써서 쓴다"),"\n"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"const print = (a) => {console.log(a)}\r\nprint(a);\r\n\n")),"\n",t.createElement(n.h3,null,"함수"),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"함수는 한번 정의되면 여러 번 호출 할 수 있다"),"\n",t.createElement(n.li,null,"함수는 매개변수를 통해 인자를 받는다"),"\n",t.createElement(n.li,null,"함수는 return 사용해서 반환한다"),"\n",t.createElement(n.li,null,"function 키워드를 써서 함수를 정의하지만\r\nES6 부터는 화살표함수가 도입되어 키워드 없이 정의 가능하다"),"\n",t.createElement(n.li,null,"함수에 이름은 필수가 아니다"),"\n",t.createElement(n.li,null,"함수를 선언하면 함수를 선언할 때마다 새로운 스코프를 생성하게 됩니다."),"\n"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"var a = 1; // 전역 스코프\r\nfunction test() { // 지역(함수) 스코프\r\n var a = 2;\r\n console.log(a);\r\n}\r\ntest();  ---(A)\r\nconsole.log(a); ---(B)\r\n\n")),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"let number =1;\r\nfunction print(){\r\n\tlet number = 10;\r\n\ttest(number);\r\n}\r\nfunction test(number){\r\n\tconsole.log(number)\r\n}\r\n\r\nprint(); ---\x3e (A)\r\ntest(number); ---\x3e (B)\r\n\n")),"\n",t.createElement(n.h3,null,"클로저"),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"어휘적(lexcial) 환경(스코프) => 변하지 않는 특정한 어휘적 환경"),"\n"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,'let name = "a"\r\n\r\nfunction outerFn() {\r\n  let name = "b"\r\n  function innerFn () {\r\n    return name;\r\n  }\r\n}\r\n\n')),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"outerFn 함수 밖에서 name 변수가 새로 선언되어도 변하지 않는다.\r\n어휘적(lexcial) 환경은 바로 이것이다."),"\n"),"\n",t.createElement(n.h3,null,"클로저 사용법"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"// 1.중첩함수\r\nfunction outerFn() {\r\n  let x = 10;\r\n  return function innerFn(y) { // innerFn 함수는 클로저다.\r\n    return x = x + y;\r\n  }\r\n}\r\nlet a = outerFn(); // 외부함수 호출은 한번만. 이제 a 변수는 innerFn 함수를 참조한다.\r\na(5);  -(A) 15 \r\na(5);  -(B) 20\r\na(5);  -(C) 25\r\n\n")),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"특징1. 외부함수 실행이 끝나도 외부 함수 내 변수를 사용할 수 있다.\r\n(내부함수가 외부함수의 변수에 접근 할 수 있다)"),"\n"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"// 2. 전역에 선언한 변수를 박스 안에서 함수로 정의하고 전역에서 호출\r\nlet globalFunc;\r\n{\r\n  let x = 10;\r\n  globalFunc = function(y) { // globalFunc 함수는 클로저다.\r\n    return x = x + y;\r\n  }\r\n}\r\nglobalFunc(5);  - A\r\nglobalFunc(5);  - B\r\nglobalFunc(5);  - C\r\n\n")),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"특징2. 함수 내부 변수에 접근을 제한한다. 객체 내부에 직접 접근 못함 = 캡슐화"),"\n"),"\n",t.createElement(n.p,null,t.createElement(n.a,{href:"https://hanamon.kr/javascript-%ED%81%B4%EB%A1%9C%EC%A0%80/"},"클로저 출처"),t.createElement(n.a,{href:"https://velog.io/@taero30/Closure-%ED%81%B4%EB%A1%9C%EC%A0%80-%EA%B0%9C%EB%85%90"},"클로저2 출처")))}var u=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?t.createElement(n,e,t.createElement(c,e)):c(e)},a=l(8804);function o(e){return t.createElement(a.Z,e,t.createElement(u,e))}a.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-client-javascript-2022-06-12-javscript-closure-mdx-1e304adc227039d3423f.js.map