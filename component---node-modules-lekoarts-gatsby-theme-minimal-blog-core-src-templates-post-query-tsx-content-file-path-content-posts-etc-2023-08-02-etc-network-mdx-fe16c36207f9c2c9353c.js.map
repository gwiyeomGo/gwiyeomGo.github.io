{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-etc-2023-08-02-etc-network-mdx-fe16c36207f9c2c9353c.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/etc/2023-08-02-etc-network.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.pre, null, React.createElement(_components.code, null, \"tcp ip\\n\\n2층 이더넷\\nmac 어드레스는 램카드\\n램카드 3개 있음 => mac 어드레스 3개\\n\\n3층 인터넷 프로토콜 ip 주소 -> host 식별\\n\\n\\n4층 tcp,udp -> 식별자 port 번호  => 프로세스 네트워크서비스 인터페이스 등등..식별\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"dod\"), \"\\n\", React.createElement(_components.p, null, \"app\\nhost to host\\ninterntet\\nnetwork acess\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"host ? 네트쿼크에 연결된 컴퓨터\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"end point    네트워크 이용 주체 (단말) =>  client,server,peer(p2p통)\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"switch : 네트워크 그 자체를 이루는 host (인프라스트럭처) => router,ips,tab agreation switch\"), \"\\n\", React.createElement(_components.p, null, \"컴퓨터인데 네트워크에 연결된 컴퓨터 = host\\n호스트 인네 네트워크 자체 호스트(인프라)= 스위치\\n(그 인프라) 이용주체 = 엔드포인트(단말기)\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"스위치가 하는 일\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"네트워크 => 고속도로\\n교차로 선택의 근거 => 이정표\"), \"\\n\", React.createElement(_components.p, null, \"교차로 자체가 스위치!\\n인터페이스를 선택하는 것 = 스위칭 = 경로선택\\n이떄 ip 주소로 스위칭을 했다면 l3 스위칭\"), \"\\n\", React.createElement(_components.p, null, \"자동차 = 단위 = 패킷 (인터넷을 돌아다니다 스위치를 만나는데 이때 l3 스위치 가 라우터 = 교차)\\n라우터마다 이정표가 있는데 이것이 ₩라우팅 테이블₩\"), \"\\n\", React.createElement(_components.p, null, \"멕주소로 스위치하면 l2 스위칭\\n포트번호로 스위치하면 l4 스위칭\"), \"\\n\", React.createElement(_components.p, null, \"매트릭 값 = 비용\\n비용이 낮은 쪽으로 이동을 함\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"nic + l2 frame + lan card + mac\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"nic = 네트워크 인터페이스 카드  = lan 카드\\nnic 은 하드웨어이며 mac 주소를 갖음\"), \"\\n\", React.createElement(_components.p, null, \"컴퓨터하나가 여러개를 갖을 수 있다\"), \"\\n\", React.createElement(_components.p, null, \"l2 유통 단위(데이터) frame\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"l2 Access switch\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"|\\npc --|\\n|___ ...distribution스위치( Access switch 위한 스위치) _____ [R(라우터)]\\n|\\npc --|\\n\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"LAN 과 WAN 의 경계 그리고 Broadcast (방송)(효율 떨어뜨) , unicast\\n브로드케스트 최소로 해야햐\\n브로드케스트 = 범위\\n브로드케스트 주소가 존재한다\\nmac 어드레스가 49비트가 모두 1 로 된 경우 브로드케스트\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"lan 에서 보내는 데이터의 단위는 frame\\nframe 에 해더에 주소가 있음 =>\"), \"\\n\", React.createElement(_components.p, null, \"l2 까지는 물리적\\n로지컬 네트워크는 => 논리적 (실체 없음) vitual 가상..\"), \"\\n\", React.createElement(_components.p, null, \"cpu 를 소프트웨어로 machine\\n소프트웨어 가상이니 virtual  machine\"), \"\\n\", React.createElement(_components.p, null, \"네트워크 가장 작은 범위 lan\\n인터넷 = wan => 논리적인 네트워크\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"ipv4\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ip 는 호스트의 식별자\"), \"\\n\", React.createElement(_components.p, null, \"ipconfig = 네트워크 id + host id\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"l3 ip packet 으로 외워\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"패킷 = 단위 데이터\"), \"\\n\", React.createElement(_components.p, null, \"header 와 payload 로 나뉜다\"), \"\\n\", React.createElement(_components.p, null, \"(중요)최대크기 MTU  => 1500 bytes\"), \"\\n\", React.createElement(_components.p, null, \"패킷 등 와이어샤크로 볼 수 있음\"), \"\\n\", React.createElement(_components.p, null, \"네트워크에 돌아다니는 패킷을 분석할 수 있고 망의 효율을 개선 할 때 쓴다 (와이어샤크)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"encapsulation vs decapsulation\\n러시아 전통 목각 인형인 마트료시카 인형...\\n패킷하면 이 단어가 따라다님..\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"l2 frame \", React.createElement(_components.code, null, \"[l2 header|payload[l3 header|payload[l4 | payload ]]]\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"패킷의 생성, 전달,소멸\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"보내는사람,받는사람 :프로세스\\n책 : 정보\\n택배 : 패킷\\n택배기사 : 게이트웨이\\n택배기사님 모아서 택배 분류 : 라우팅\\n현관 : 인터페이스\\n송장의 목적지 주소(집) :  host\\n송장의 이름 : port 번호\"), \"\\n\", React.createElement(_components.p, null, \"소켓? 파일의 일종\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"계층별 데이터 단위\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"크롬브라우저가 인터넷으로 정보를 보내려면 socket 을 사용\\n이때 데이터의 단위를 살펴보면\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"[socket : 스트림] (시작은 있지만 끝은 정의할 수 없음,연속적으로 이어진 크기를 알 수 없는 정)\\n\\n과정에서 스트림이라는 연속적인 데이터를 <맥시멈 세그먼트 사이즈 mss> 로 분해\\n-----\\n[tcp: 세그먼트]\\n[ip : 패킷] mtu\\n-----\\n[l1~l2 : 프레임]\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"파리에서 에펠탑을 택배로 보내려면 어떻게?\\n인터넷에서느 패킷(mtu) 정보 공유...\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"버퍼..\"), \"\\n\", React.createElement(_components.p, null, \"택배차 : frame\"), \"\\n\", React.createElement(_components.p, null, \"ack ?  애크날리지먼트\\nack 가 갈때 여유공간에 크기도 같이 감\"), \"\\n\", React.createElement(_components.p, null, \"tcp/ip\\n네트워크는 생각보다 불안정해 장애가 발생한다\\n1.loss (유실) 등 발생\\n2. re trans misision (동시 발송..)\\n3.ack 중복..\\n4. out of order... 순서가 잘못된 경우..\\n5. zero window\\n윈도우사이즈 = 여유공간의 크기\\n네트워크의 송수신 속도가 공간을 처리하는 속도보다 빠른 경우..\\n이 경우 endpoint 에서 application 이 문제 (cpu .. 100 등..)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"ipv4 header\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"mtu :1500 bytes\"), \"\\n\", React.createElement(_components.p, null, \"체크썸?\"), \"\\n\", React.createElement(_components.p, null, \"단편화?\"), \"\\n\", React.createElement(_components.p, null, \"와이어샤크..?? 16진수 표기법에 익숙해야 사용할 수 있다\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"subnet mask , cidr\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ip 주소는 네트워크 id 와 호스트 id 로 나뉨..\"), \"\\n\", React.createElement(_components.p, null, \"subnet mask 를 기준으로 자른다\"), \"\\n\", React.createElement(_components.p, null, \"비트단위로 and 연산해서 자른다 => mask 연산을 수행헤서 네트워크 id 가 같다면 우리 쪽으로 오는 것으로 판단\"), \"\\n\", React.createElement(_components.p, null, \"최근에는 net mask 개념이 바뀌어서\\n클래스리스개념 등장 cidr(classless inter-domain routing)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"broadcast ip 주소\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"mac 주소는 48비트 구조..\\nhost ip 부분을 모두 1로 채우면 방송주소..\"), \"\\n\", React.createElement(_components.p, null, \"목적지아이피주소?\\n목적지아이피주소에 브로드케스트 ip 주소명 여러 곧으로 퍼짐\"), \"\\n\", React.createElement(_components.p, null, \"전체한테 다 보내겠다\\nvs 멀티케스트.. (전체한테 전달하지만 그룹핑해서 보냄)\"), \"\\n\", React.createElement(_components.p, null, \"브로드케스트는 자주하면 효율이 떨어진다\\n브로드케스트 도달범이를 일정 범위에서 통제해애 한다\"), \"\\n\", React.createElement(_components.p, null, \"네트워크에서 쓸 수 없는 ip 주소\\n...\\n0,255 는 못씀.. 쓸 수 있는 host 254\\n하나더 빼면 게이트 웨이 1번을 주니까..\\n등등\"), \"\\n\", React.createElement(_components.p, null, \"250 개 정도 주소 자원\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"hoat\\n자신을 가리키는 ip 주소\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"127.0.0.1\"), \"\\n\", React.createElement(_components.p, null, \"내가 나한테 접근하는 경우도 있음...\"), \"\\n\", React.createElement(_components.p, null, \"이 주체는 process 가 인터넷을 쓰는거고\\n컴퓨터내 여러 프로세스가 있어서\\n소캣을 이용해서 각각 프로세스 간에 통신이 필요한 경우가 있다....\"), \"\\n\", React.createElement(_components.p, null, \"loopback adress 가 나 자신을 가리킨다\"), \"\\n\", React.createElement(_components.p, null, \"ipc\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"라우터 vs l3 switch\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ttl\"), \"\\n\", React.createElement(_components.p, null, \"패킷이 목적지 도달 실패시...목적지 못찾을때\\n해당 패킷을 제거가 필요..\\n제거 안하면 많아짐\"), \"\\n\", React.createElement(_components.p, null, \"이를 제어하는 것이 ttl\"), \"\\n\", React.createElement(_components.p, null, \"홉단위로..\"), \"\\n\", React.createElement(_components.p, null, \"안그래도 작은 패킷을 더 작게 :단편화\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"3-way handshake\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"client 가 server에 연결을 하려고 할때\"), \"\\n\", React.createElement(_components.p, null, \"단순연결 관리 목적 세그먼트 존재\"), \"\\n\", React.createElement(_components.p, null, \"client 에서 생성한 sequencenumber 교환\\n+\\n정책 교환 (mss 를 맥시멈세그먼트사이즈를 알려줌)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"4-way handshake\\ntcp 연결 종료 과정\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"fin+ack - ack - fin+ack - ack\\n[time wait]\"), \"\\n\", React.createElement(_components.p, null, \"tcp 의 상태 변화\"), \"\\n\", React.createElement(_components.p, null, \"socket client 가 먼저 닫음\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"tcp header 형식\\nsequencenumber\\nwindow size\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"upp heeader 형식\\n멀티미디어 전송에 최적화되어있음\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"HTTP/3?\\n\", React.createElement(_components.a, {\n    href: \"https://medium.com/monday-9-pm/%EC%B4%88%EB%B3%B4%EA%B0%9C%EB%B0%9C%EC%9E%90-http3-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0-98da26749cb9\"\n  }, \"https://medium.com/monday-9-pm/%EC%B4%88%EB%B3%B4%EA%B0%9C%EB%B0%9C%EC%9E%90-http3-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0-98da26749cb9\")), \"\\n\", React.createElement(_components.p, null, \"연결은 보안성이 없다\\n연결은 착각\"), \"\\n\", React.createElement(_components.p, null, \"연결은 신뢰할 수 없다\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"dns\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"domain name service\"), \"\\n\", React.createElement(_components.p, null, \"네이버 ip 주소를 알 수 있는 데이터베이스 (분산 구조형 데이터베이스)\"), \"\\n\", React.createElement(_components.p, null, \"host name (ex www)\\ndomain name (ex naver.com) => ipv4 주소를 찾은 dns\\ndns 주소는 isp 에서 알려주는 주소\\n내가쓰는 주소에서 가까운 dns 주소를 사용하는 것이 효율적\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://seogilang.tistory.com/1375\"\n  }, \"https://seogilang.tistory.com/1375\")), \"\\n\", React.createElement(_components.p, null, \"pc 마다 dns cache 를 갖고 있음\\n\", React.createElement(_components.a, {\n    href: \"https://blog.naver.com/winzone/220796091045\"\n  }, \"https://blog.naver.com/winzone/220796091045\")), \"\\n\", React.createElement(_components.p, null, \"dns 가 거짓말을 한다면?? -> 보안 ??\\ndns 가 해킹당하면 큰일 그래서 강역한 보안이 적용되어 있음\\n1.25 인터넷 대란\"), \"\\n\", React.createElement(_components.p, null, \"rootdns\"), \"\\n\", React.createElement(_components.p, null, \"dns 를 위한 dns\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"web\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"html = 문서\\nhttp 프로토콜은 기본적으로 html 문서를 실어 옮기기 위해 탄생\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"url ,uri\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"http\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"http 는 statusless 이다\"), \"\\n\", React.createElement(_components.p, null, \"개발시 설계 원칙\\n1.ui/ data /제어를 분리시켜\\n2. 유지보수\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"was (Web application server)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"3 tier?\\n\", React.createElement(_components.a, {\n    href: \"https://dbknowledge.tistory.com/78\"\n  }, \"https://dbknowledge.tistory.com/78\")), \"\\n\", React.createElement(_components.p, null, \"db 응답시간이 시스템 품질을 측정하는데 중대한 역할을 하게되어\\n집중적으로 db 응답시간과 was 의 상태를 관리하는것이 apm 이 있다 (Scatter)\"), \"\\n\", React.createElement(_components.p, null, \"소프트웨어와 하드웨어의 차이\\n로지컬(버츄얼) vs 피지컬\"), \"\\n\", React.createElement(_components.p, null, \"user mode application 에 java 기반 버츄얼 cpu 소프트웨어 만듬= jvm 만들어씀..\\nsublet 형태의 java application server\"), \"\\n\", React.createElement(_components.p, null, \"framework =>  Container 생성과 등록을 관리 해주는 Spring\"), \"\\n\", React.createElement(_components.p, null, \"서버에서 html 을 만들어서 보냈었는데...\\nclient 환경이 다양해짐 (아이패드.. 등 각 환경마다 다 만들어야 했음)\"), \"\\n\", React.createElement(_components.p, null, \"ui 와 데이터를 분리하지는 시도\"), \"\\n\", React.createElement(_components.p, null, \"응답에는 순수하게 자료만 날라오도록 변경함\\nxml,json\"), \"\\n\", React.createElement(_components.p, null, \"자바스크립트 기반에 클라이언트 서버가 실행되어 받은 데이터로 html 을 생성 (was 에)\\nreact.js,vue.js\"), \"\\n\", React.createElement(_components.p, null, \"ips 보안장치\\nssl 처리 담당 기능이 있다면 ( http => https )\"), \"\\n\", React.createElement(_components.p, null, \"사용자의 입력속에 sql 있음 =>sql injection... 등등..\"), \"\\n\", React.createElement(_components.p, null, \"쿠키는 key value 형태다..\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/etc/2023-08-02-etc-network.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","pre","code","p","ul","li","ol","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}