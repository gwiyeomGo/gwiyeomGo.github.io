{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-server-golang-2022-02-09-go-module-mdx-265dd812654be7a8d1a7.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/golang/2022-02-09-go-module.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"go module 은 뭐지?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \" Is like package.json for Go!\")), \"\\n\", React.createElement(_components.p, null, \"모듈 시스템이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"* Golang 버전 1.11 부터 적용\\r\\n* Golang 버전 1.16 기본 사양\\r\\n* Golang 버전 1.17 `GOPATH` 배제,모듈만 지원\\n\")), \"\\n\", React.createElement(_components.h1, null, \"기존 방식\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"go env\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"GOPATH\"), \"에 지정된 경로에 src 폴더에 프로젝트를 생성해야 했다.\\r\\n\", React.createElement(_components.code, null, \"GOPATH\"), \"를 수정하는 작업을 해야 했음\"), \"\\n\", React.createElement(_components.h1, null, \"변경된 내용\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"GOPATH\"), \"에 프로젝트를 반드시 생성할 필요가 없다.\"), \"\\n\", React.createElement(_components.h1, null, \"프로젝트 모듈을 생성\"), \"\\n\", React.createElement(_components.p, null, \"원하는 위치에 test 폴더를 생성한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"mkdir test\\r\\ncd test\\n\")), \"\\n\", React.createElement(_components.p, null, \"모듈을 생성하는 명령어\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"go mod init github.com/gwiyeomgo/test\\r\\n//go mode init {github.com}/{userName}/{test}\\r\\n\\r\\nls\\r\\n// 폴더 안에 목록을 보면 go.mod 모듈 파일이 생성된다.\\n\")), \"\\n\", React.createElement(_components.h1, null, \"test 프로젝트의 go.mod 파일 내부\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"module github.com/gwiyeomgo/test\\r\\n\\r\\ngo 1.17\\n\")), \"\\n\", React.createElement(_components.h1, null, \"test 프로젝트 github 에 올리기\"), \"\\n\", React.createElement(_components.p, null, \"1.main.go 파일 생성\\r\\n2.github 의 개인 repository 생성합니다.\"), \"\\n\", React.createElement(_components.h1, null, \"module 꺼내 쓰기\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://dev-yakuza.posstree.com/ko/golang/module/\"\n  }, \"참조 1\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://www.vompressor.com/go-mod/\"\n  }, \"참조 2\")), \"\\n\", React.createElement(_components.h1, null, \"go에서 받아온 코드들을 보기좋게 정리하는 방법\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"cd go\\r\\ncd src\\r\\n도메인별로 분류를 해서 저장\\r\\nex) github.com\\r\\n\\r\\nmkdir username\\r\\ncd username\\r\\n\\r\\ngithub repository이름\\n\")), \"\\n\", React.createElement(_components.h1, null, \"go.mod\"), \"\\n\", React.createElement(_components.p, null, \"go 1.11 버전부터 모듈 시스템 도입\\r\\n모듈의 장점은 프로젝트를 변경 할 때 마다 \", React.createElement(_components.code, null, \"GOPATH\"), \"를 수정하는 작업이 필요 없다\\r\\n즉 \", React.createElement(_components.code, null, \"GOPATH/src\"), \" 디렉토리 바깥에 프로젝트 디렉트로리를 만들 수 있음\\r\\n(출처:\", React.createElement(_components.a, {\n    href: \"https://ingeec.tistory.com/106\"\n  }, \"https://ingeec.tistory.com/106\"), \")\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"mkdir project\\r\\ncd project\\r\\ngo mod init github.com/username/project <-독립적인 프로젝트 경로를 생성하기위해\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/server/golang/2022-02-09-go-module.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","code","pre","a","_provideComponents","components","React","className","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}