{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-react-2022-04-15-react-file-download-mdx-974e61fcdad2d12cd7e1.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/client/react/2022-04-15-react-fileDownload.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\",\n    h3: \"h3\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"1.어드민에서 화면에 목록을 다운받고 싶은 요구 발생\"), \"\\n\", React.createElement(_components.h1, null, \"작업내용\"), \"\\n\", React.createElement(_components.p, null, \"파일 다운로드\"), \"\\n\", React.createElement(_components.h1, null, \"방법1\"), \"\\n\", React.createElement(_components.p, null, \"현재 저의 코드에서는 react-csv 컴포넌트를 import 받아서 사용합니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import { CSVLink } from \\\"react-csv\\\";\\n\\nheaders = [\\n  { label: \\\"First Name\\\", key: \\\"firstname\\\" },\\n  { label: \\\"Last Name\\\", key: \\\"lastname\\\" },\\n  { label: \\\"Email\\\", key: \\\"email\\\" }\\n];\\n\\ndata = [\\n  { firstname: \\\"Ahmed\\\", lastname: \\\"Tomi\\\", email: \\\"ah@smthing.co.com\\\" },\\n  { firstname: \\\"Raed\\\", lastname: \\\"Labes\\\", email: \\\"rl@smthing.co.com\\\" },\\n  { firstname: \\\"Yezzi\\\", lastname: \\\"Min l3b\\\", email: \\\"ymin@cocococo.com\\\" }\\n];\\n\\n<CSVLink\\n  data={data}\\n  filename={\\\"my-file.csv\\\"}\\n  headers={headers}\\n>\\n  Download me\\n</CSVLink>;\\n\")), \"\\n\", React.createElement(_components.p, null, \"출처 : \", React.createElement(_components.a, {\n    href: \"https://www.npmjs.com/package/react-csv\"\n  }, \"https://www.npmjs.com/package/react-csv\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"CSVLink 를 사용해서 [] 형태 데이터를 그대로 다운 받을 수 있었다.\"), \"\\n\", React.createElement(_components.li, null, \"그런데 기획쪽의 요청은 한글 name을 추가를 요청했다.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"//2개 [] 을 [{},{}]로 변환\\nexport const makeCsvHeaders = (headerValues,dataKeys) => {\\n  let fileHeader = new Array(dataKeys.length)\\n  dataKeys.length > 0 && dataKeys.forEach((key,index) =>\\n      fileHeader[index] ={\\n        key:key,\\n        label: headerValues[index]\\n      });\\n  return fileHeader\\n}\\n\")), \"\\n\", React.createElement(_components.h3, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.npmjs.com/package/react-csv\"\n  }, \"https://www.npmjs.com/package/react-csv\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"CSVLink 라이브러리로 엑셀 파일을 만들면  0 이 사라지는 문제\"), \"\\n\", React.createElement(_components.p, null, \"enforce the decimal format for csv\"), \"\\n\", React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"CSVLink 라이브러리를 사용해서 csv 파일 다운로드 기능을 개발했다\\n문제는 data의 값이 0 으로 시작하면 엑셀파일 실행시 0 이지워지는 문제가 있었다\\nex) \", React.createElement(_components.code, null, \"후대번호 010-****-**** 의 경우 10-****-**** 으로 보임\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://ecsupport.cafe24.com/article/%EC%87%BC%ED%95%91%EB%AA%B0-tip/101/1089/?page=8\"\n  }, \"https://ecsupport.cafe24.com/article/%EC%87%BC%ED%95%91%EB%AA%B0-tip/101/1089/?page=8\")), \"\\n\", React.createElement(_components.p, null, \"010**** 형태는 숫자로 엑셀이 숫자라 판단해서 맨앞에 0을 지웠다\\n엑셀에서 0이보이면서 문자로 바꿔주기 위해 =\\\" \\\" 를 추가하는 작업을 진행했었습니다.\"), \"\\n\", React.createElement(_components.h3, null, \"해결방법\"), \"\\n\", React.createElement(_components.p, null, \"data 에 obj 를 돌\\n\", React.createElement(_components.code, null, \"=\\\"\\\"${value}\\\"\\\"\"), \" 로 바꿔줌\"), \"\\n\", React.createElement(_components.p, null, \"#문제2\\n해당 엑셀파일은 우체국 택배 예약 사이트에 업로드할 엑셀에 사용자가 복사에서\"), \"\\n\", React.createElement(_components.p, null, \"휴대번호 => ex) 010-3480-4314\\n우편번호  => ex) 58654 앞에 특정 문자를 넣어   (58654)\"), \"\\n\", React.createElement(_components.p, null, \"지금 작업할 수 있는 방법은\\n위 두 예시처럼 특정 문자를 넣어서\\n문자 형태로 변경해야 합니다.\\n\", React.createElement(_components.code, null, \"010-3480-4314 \"), \" , \", React.createElement(_components.code, null, \"(58654) \"), \" 형태로 변경하면 괜찮을까요?\"), \"\\n\", React.createElement(_components.h3, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/65008344/enforce-the-decimal-format-for-csv\"\n  }, \"https://stackoverflow.com/questions/65008344/enforce-the-decimal-format-for-csv\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.daleseo.com/css-buttons/\"\n  }, \"https://www.daleseo.com/css-buttons/\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/53504924/reactjs-download-csv-file-on-button-click\"\n  }, \"https://stackoverflow.com/questions/53504924/reactjs-download-csv-file-on-button-click\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://encredible.tistory.com/entry/react-csv%EC%97%90%EC%84%9C-onClick-%EC%8B%9C%EC%A0%90%EC%97%90-async%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EB%B0%9B%EC%95%84-%EC%98%A4%EB%8A%94-%EB%B0%A9%EB%B2%95\"\n  }, \"https://encredible.tistory.com/entry/react-csv%EC%97%90%EC%84%9C-onClick-%EC%8B%9C%EC%A0%90%EC%97%90-async%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EB%B0%9B%EC%95%84-%EC%98%A4%EB%8A%94-%EB%B0%A9%EB%B2%95\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://www.geeksforgeeks.org/how-to-add-a-pressed-effect-on-button-click-in-css/\"\n  }, \"https://www.geeksforgeeks.org/how-to-add-a-pressed-effect-on-button-click-in-css/\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/client/react/2022-04-15-react-fileDownload.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","pre","code","a","ol","li","h3","hr","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}