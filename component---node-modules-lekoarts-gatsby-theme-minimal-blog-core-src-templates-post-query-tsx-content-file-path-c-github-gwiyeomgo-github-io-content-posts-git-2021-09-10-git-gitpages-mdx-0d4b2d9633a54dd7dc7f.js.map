{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-git-2021-09-10-git-gitpages-mdx-0d4b2d9633a54dd7dc7f.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBV,EAAYG,GAAI,KAAM,MAAO,KAAMO,EAAAA,cAAoBV,EAAYI,EAAG,KAAM,kPAAmP,KAAMM,EAAAA,cAAoBV,EAAYK,GAAI,KAAM,MAAO,KAAMK,EAAAA,cAAoBV,EAAYI,EAAG,KAAM,kHAAmH,KAAMM,EAAAA,cAAoBV,EAAYK,GAAI,KAAM,UAAW,KAAMK,EAAAA,cAAoBV,EAAYI,EAAG,KAAM,0HAA2H,KAAMM,EAAAA,cAAoBV,EAAYK,GAAI,KAAM,sBAAuB,KAAMK,EAAAA,cAAoBV,EAAYM,IAAK,KAAMI,EAAAA,cAAoBV,EAAYO,KAAM,KAAM,uaACx+B,CAKA,MAJA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWb,EAAOW,EAAAA,cAAoBZ,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCZe,SAASc,EAAiBd,GACvC,OAAOW,EAAAA,cAAoBI,EAAAA,EAAef,EAAOW,EAAAA,cAAoBK,EAAqBhB,GAC5F,CAHAe,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/git/2021-09-10-git-gitpages.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"jekell을 사용해서 gitblog를 만들었다.\\r\\n그런데 디자인도 마음에 안들고 변경하고 싶다는 생각이 들었지만\\r\\nruby 언어도 모르고 어떻게 구성된건지 알 수 없었다.\\r\\n그래서 react와 material ui를 사용해서 쉽게 블로그 형태를 만들었다.\\r\\n몇일동안 만들면서 배포해보고 싶다는 욕구가 느껴졌고\\r\\n여러 블로그의 글을 보면서 명령어를 입력했다\\r\\n그리고 다양한 오류를 거쳐서 배포를 완료했다.\"), \"\\n\", React.createElement(_components.h1, null, \"문제\"), \"\\n\", React.createElement(_components.p, null, \"문제는 배포를 하고나니 git repository에 파일이\\r\\n더이상 수정할 수 없는 형태로 변경되어 있었다.\\r\\n자세하게 공부안하고 올린 내가 바보다 ㅎㅎㅎ\\r\\n다행인건 압축파일을 갖고 있다\"), \"\\n\", React.createElement(_components.h1, null, \"앞으로 계획\"), \"\\n\", React.createElement(_components.p, null, \"1.프라이빗 레파지토리에 계속 포스트는 쓴다\\r\\n2.압축된 파일을 새로운 레파지토리에 업로드한다.\\r\\n3.새 레파지토리를 fork나 복제해서 새로운 repository를 만들고 복제된 파일을 배포해보려고 한다\"), \"\\n\", React.createElement(_components.h1, null, \"gh-pages에 관해서 공부하기\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ git config --global user.name \\\"Your Name\\\"\\r\\n$ git config --global user.email you@example.com\\r\\n\\r\\n npx create-react-app gwiyeom-github-pages\\r\\n\\r\\n cd gwiyeom-github-pages\\r\\n\\r\\necho \\\"# gwiyeom-github-pages\\\" >> README/\\r\\ngit init\\r\\ngit add README/\\r\\ngit commit -m \\\"first commit\\\"\\r\\ngit branch -M main\\r\\ngit remote add origin https://github.com/gwiyeomgo/gwiyeom-github-pages.git\\r\\ngit push -u origin main\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/git/2021-09-10-git-gitpages.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","h1","pre","code","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}