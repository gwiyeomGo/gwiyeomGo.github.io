{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2024-03-18-mysql-lock-mdx-34cd9e65e35df63159bb.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2024-03-18-mysql-lock.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    blockquote: \"blockquote\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"개발 환경에서 update 를 시도하다가 id 를 지정하는 코드가 빠져있어서 특정 table 데이터를 update 되었다\\n50만건이 넘는 데이터라서 db lock 이 발생했다.\\nlock 이 발생했을때 kill 등 방법을 알았다면\\n전체 데이터가 업데이트 되지 않았을텐데...\\n반성하며 상황을 정리하고 해결 법도 알아보려고 한다\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"update all 코드 실행\"), \"\\n\", React.createElement(_components.li, null, \"다른 api 조회 -> 응답값 503\"), \"\\n\", React.createElement(_components.li, null, \"log 에 lock 됨 확인\"), \"\\n\", React.createElement(_components.li, null, \"다른 api 돌아옴 -> 전체적으로 느려진거 같으면서.. 어떤 영향이 있는지 모르겠다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Lock 은 뭐지?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"락은 데이터베이스에서 동시성을 제어하기 위해 사용되는 메커니즘\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Lock 을 어떻게 처리?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"락을 발생시킨 쿼리를 취소시킨다\\nLOCK을 발생시키는 쿼리를 종료하면 해당 트랜잭션은 롤백되어 이전 상태로 되돌아간다\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"만약 락이 너무 오랫동안 지속되거나 해결하기 어려운 경우에는 MySQL 서버를 재시작하여 모든 락을 해제\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"lock 된 프로세스 취소 시키지?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"mysql 프로세스 리스트 보고\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"SHOW FULL PROCESSLIST;\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"프로세스 죽이기\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"kil 2771444\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"2771444 는 프로세스 id\"), \"\\n\", React.createElement(_components.h1, null, \"mysql 프로세스 리스트를 어떻게 봐야헤? Command 뭐야?\"), \"\\n\", React.createElement(_components.p, null, \"Sleep :현재 MySQL 서버에 연결되어 있지만 아무 작업도 수행하고 있지 않는 세션\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"동시에 많은 사용자가 데이터베이스에 접근하는 경우 Command = Sleep 인 경우를 제외하고 조회\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"SELECT * FROM information_schema.processlist WHERE command != 'Sleep';\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Connection Pooling (커넥션 풀)은 뭐야?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://sarc.io/index.php/mariadb/1154-sleep-session\"\n  }, \"https://sarc.io/index.php/mariadb/1154-sleep-session\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://blog.naver.com/fantom80/40055830246\"\n  }, \"https://blog.naver.com/fantom80/40055830246\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://johngrib.github.io/wiki/database/processlist/\"\n  }, \"https://johngrib.github.io/wiki/database/processlist/\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/etc/gwiyeomgo.github.io/content/posts/server/database/mysql/2024-03-18-mysql-lock.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","ol","li","ul","blockquote","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}