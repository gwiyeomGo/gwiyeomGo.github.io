"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[9982],{3785:function(e,t,n){n.r(t),n.d(t,{Head:function(){return l.F},default:function(){return c}});var r=n(7294),a=n(1151);function o(e){const t=Object.assign({p:"p",h1:"h1",code:"code",a:"a",pre:"pre"},(0,a.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.p,null,"다중으로 보내는 API 그룹"),"\n",r.createElement(t.h1,null,"배경"),"\n",r.createElement(t.p,null,"어드민 회원 상세에서 이력 관련된 API 를 7개 부른다\r\n코드를 짧게 줄이는 방법을 찾아보니 ",r.createElement(t.code,null,"Promise.all"),"을 사용한 코드가 있엇다"),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time"},"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time")),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"React.useEffect(()=>{\r\nPromise.all([\r\n    fetch('https://jsonplaceholder.typicode.com/posts'),\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n]).then(function (responses) {\r\n    // Get a JSON object from each of the responses\r\n    return Promise.all(responses.map(function (response) {\r\n        return response.json();\r\n    }));\r\n}).then(function (data) {\r\n    // Log the data to the console\r\n    // You would do something with both sets of data here\r\n    console.log(data);\r\n}).catch(function (error) {\r\n    // if there's an error, log it\r\n    console.log(error);\r\n});\r\n},[])\n")),"\n",r.createElement(t.p,null,"실제로는 아래 처럼 적용했다"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,'import React, { useEffect, useState } from "react";\r\nimport axios from "axios";\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState({\r\n    test1: [],\r\n    test2: []\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    // root/public/test.json\r\n    try {\r\n      const [test1, test2] = await Promise.all([\r\n        axios.get("/test1.json"),\r\n        axios.get("/test2.json")\r\n      ]);\r\n\r\n      Object.keys(test1.data).length > 0 &&\r\n        setData((pre) => ({\r\n          ...pre,\r\n          test1: test1.data\r\n        }));\r\n\r\n      Object.keys(test2.data).length > 0 &&\r\n        setData((pre) => ({\r\n          ...pre,\r\n          test2: test2.data\r\n        }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(data).length > 0 &&\r\n        data.test1.length > 0 &&\r\n        console.log(data.test1)}\r\n    </>\r\n  );\r\n};\r\nexport default App;\n')),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://codesandbox.io/s/datagetex-v621x2"},"예제")),"\n",r.createElement(t.h1,null,"참고"),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"),"\r\n",r.createElement(t.a,{href:"https://www.andreadiotallevi.com/blog/how-to-handle-multiple-set-state-calls-on-the-same-object-in-react"},"https://www.andreadiotallevi.com/blog/how-to-handle-multiple-set-state-calls-on-the-same-object-in-react"),"\r\n",r.createElement(t.a,{href:"https://joshua1988.github.io/web-development/javascript/js-async-await/"},"https://joshua1988.github.io/web-development/javascript/js-async-await/"),"\r\n",r.createElement(t.a,{href:"https://stackoverflow.com/questions/44182951/axios-chaining-multiple-api-requests"},"https://stackoverflow.com/questions/44182951/axios-chaining-multiple-api-requests"),"\r\n",r.createElement(t.a,{href:"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time"},"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time")))}var s=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?r.createElement(t,e,r.createElement(o,e)):o(e)},l=n(8804);function c(e){return r.createElement(l.Z,e,r.createElement(s,e))}l.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-javascript-2023-05-30-javascript-multiple-api-calls-mdx-d16caf0ef32a9b38eab7.js.map