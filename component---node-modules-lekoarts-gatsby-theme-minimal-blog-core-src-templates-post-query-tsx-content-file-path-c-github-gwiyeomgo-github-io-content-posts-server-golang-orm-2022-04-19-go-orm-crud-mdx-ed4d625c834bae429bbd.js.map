{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-server-golang-orm-2022-04-19-go-orm-crud-mdx-ed4d625c834bae429bbd.js","mappings":"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","sources":["webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://gwiyeom-blog/./content/posts/server/golang/orm/2022-04-19-go-orm-CRUD.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/seo.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    a: \"a\",\n    strong: \"strong\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"CRUD\"), \"\\n\", React.createElement(_components.h3, null, \"1. xorm 에서 CRUD 하기\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"type User struct {\\r\\n    Id int64 `xorm:\\\"id pk autoincr\\\" ` //pk\\r\\n    Name string\\r\\n\\t\\tAge int64\\r\\n    Created time.Time `xorm:\\\"created\\\"` //Created tag will automatically inserted current time when you insert one record\\r\\n    Updated time.Time `xorm:\\\"updated\\\"`\\r\\n\\t\\tDeletedAt time.Time `xorm:\\\"deleted\\\"` //Deleted will not really remove one record from table but only tag as deleted via current time.\\r\\n}\\r\\n\\r\\ntype Detail struct {\\r\\n    Id int64\\r\\n    UserId int64 `xorm:\\\"index\\\"` // index는 column name\\r\\n}\\r\\n\\r\\ntype UserDetail struct {\\r\\n    User   `xorm:\\\"extends\\\"`\\r\\n    Detail `xorm:\\\"extends\\\"` //Detail struct\\r\\n}\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Create\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"var user User \")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"engine.Insert(&user)// INSERT user (created...) VALUES (?...)\")), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Find ,Get\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Update\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"affected, err := engine.ID(1).Update(&user)// UPDATE user SET ... Where id = ?\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"AllCols , Cols\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Saved 상태,Registed 상태가 존재\"), \"\\n\", React.createElement(_components.li, null, \"Saved 상태의 수정 프로세스\", \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"수정할 값만 body로 요청\"), \"\\n\", React.createElement(_components.li, null, \"값 bind 후 유효성 검사 => require 값을 피하기위해 상태가 Saved 일경우 Validate 안하도록 조건 추가\"), \"\\n\", React.createElement(_components.li, null, \"신청 id 로 내용을 조회  => db에 기록된 신청 상태가 Registered면 에러가 나도록 변경\"), \"\\n\", React.createElement(_components.li, null, \"Saved 면 update 하도록 씀\\r\\n=> xorm update\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"if cols == \\\"*\\\" {\\r\\n    builder = builder.AllCols()\\r\\n} else if len(cols) > 0 {\\r\\n    builder = builder.Cols(cols)\\r\\n}\\r\\n\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Delete\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"engine.ID(1).Delete(&user)// UPDATE user SET ..., deleted_at = ? WHERE id = ?\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"engine.ID(1).Unscoped().Delete(&user)// Then this record will be really deleted\")), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"2. gorm 에서 CRUD 하기\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"type User struct {\\r\\n  ID   int64  `gorm:\\\"primary_key\\\"` //pk\\r\\n\\tName  string `gorm:\\\"not null\\\"`\\r\\n  Age  int64  `gorm:\\\"default:18\\\"` //default tag로 기본값 지정\\r\\n\\tActive bool\\r\\n\\tDeletedAt soft_delete.DeletedAt //delete flag로 초까지 ,gorm.DeletedAt 분까지\\r\\n}\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Create\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"user := User{Name: \\\"test\\\", Age: 18, }\\r\\nresult := db.Create(&user)\\r\\ndb.Select(\\\"Name\\\", \\\"Age\\\", \\\"CreatedAt\\\").Create(&user)\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"db.Select(\\\"Name\\\", \\\"Age\\\", \\\"CreatedAt\\\").Create(&user)// INSERT INTO \"), \"users\", React.createElement(_components.code, null, \" (\"), \"name\", React.createElement(_components.code, null, \",\"), \"age\", React.createElement(_components.code, null, \",\"), \"created_at\", React.createElement(_components.code, null, \") VALUES (\\\"jinzhu\\\", 18, \\\"2020-07-04 11:05:21.775\\\")\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"UPDATE\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"user.Age = 100\\r\\ndb.Save(&user)// UPDATE users SET name='test', age=100,  updated_at = '2013-11-17 21:34:10' WHERE id=111\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"user.Id =1\"), \"\\r\\n\", React.createElement(_components.code, null, \"db.Model(&user).Where(\\\"active = ?\\\", true).Update(\\\"name\\\", \\\"hello\\\")// UPDATE users SET name='hello', updated_at='2013-11-17 21:34:10' WHERE id=1 AND active=true\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Delete\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"db.Delete(&User{}, 1)// DELETE FROM users WHERE id = 1;//Delete with primary key GORM allows to delete objects using primary key\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Delete Flag\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"UPDATE users SET deleted_at = /* current unix second */ WHERE ID = 1;\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"soft_delete는 뭐지?\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://gorm.io/ko_KR/docs/many_to_many.html\"\n  }, React.createElement(_components.strong, null, \"Many To Many\"))), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"//Member has and belong to many roles, `member_roles`는 join table 이다\\r\\ntype MemberEntity struct {\\r\\n\\t...\\r\\n\\tRoles          []rbac.RoleEntity `gorm:\\\"many2many:member_roles;\\\"` //두 모델 사이에 조인 테이블을 추가\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h1, null, \"How to insert multiple data at once\"), \"\\n\", React.createElement(_components.p, null, \"배경\\r\\n특정 구독자에게 한번에 메세지를 보내고\\r\\n보낸 기록을 남기기위해\\r\\n구독자 정보를 db 에 남기는 작업이 필요했다\\r\\n한번에 10명 이상의 사용자에게 전송이 예상되기때문에 한번에 insert 를 하는 방법을 찾아봤다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"//xorm\\r\\nif rowsAffected, err := common.GetDB(ctx).InsertMulti(recipients); err != nil {\\r\\n    return errors.Wrap(err, \\\"\\\")\\r\\n} else if rowsAffected == 0 {\\r\\n    return errors.New(\\\" \\\"등록에 실패하였습니다.\\\")\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h3, null, \"출처\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://gobook.io/read/gitea.com/xorm/manual-en-US/chapter-07/1.deleted.html\"\n  }, \"delete 설명\"), React.createElement(_components.a, {\n    href: \"https://gobook.io/read/gitea.com/xorm/manual-en-US/chapter-02/4.columns.html\"\n  }, \"field tag\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://www.popit.kr/golang-xorm-%ED%8E%B8%EB%A6%AC%ED%95%9C-%EA%B8%B0%EB%8A%A5-%EC%86%8C%EA%B0%9C/\"\n  }, \"Golang xORM 편리한 기능 소개 | Popit\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://gorm.io/docs/update.html\"\n  }, \"gorm예시\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://gorm.io/docs/delete.html#Delete-Flag\"\n  }, \"delete예시\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/21108084/how-to-insert-multiple-data-at-once\"\n  }, \"How to insert multiple data at once\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/server/golang/orm/2022-04-19-go-orm-CRUD.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","Seo","description","excerpt","image","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","styles","_t$styles","to","replaceSlashes","name","_createMdxContent","_components","Object","assign","h3","pre","code","blockquote","p","ul","li","ol","strong","h1","_provideComponents","components","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}