"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[5150],{5607:function(e,t,n){n.r(t),n.d(t,{Head:function(){return p.F},default:function(){return a}});var r=n(7294),c=n(1151);function l(e){const t=Object.assign({h1:"h1",p:"p",h2:"h2",code:"code",pre:"pre"},(0,c.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.h1,null,"배경"),"\n",r.createElement(t.p,null,"지금 사용하는 시스템은 회원의 정보를 관리합니다.\ndb에 저장할때는 암호화된 정보로 저장합니다.\n암호화된 정보를 복호화 하기 위해서는 key 값이 존재하며\n개발환경에 따라서 암호화 키가 다릅니다.\n주로 핸드폰 번호를 관리할때 사용했었습니다."),"\n",r.createElement(t.h2,null,"코드"),"\n",r.createElement(t.p,null,r.createElement(t.code,null,'common.GetDecrypt("암호화된 값")'),"\n",r.createElement(t.code,null,'common.GetEncrypt("암호화할 값")')),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"func GetDecrypt(text string) string {\n\tkey := config.Encrypt.EncryptKey\n\treturn Decrypt(key, text)\n}\n\nfunc SetEncrypt(text string) string {\n\tkey := config.Encrypt.EncryptKey\n\treturn Encrypt(key, text)\n}\n\nfunc Encrypt(key, text string) string {\n\tblock, err := aes.NewCipher([]byte(key))\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tplaintext := []byte(text)\n\tcfb := cipher.NewCFBEncrypter(block, iv)\n\tciphertext := make([]byte, len(plaintext))\n\tcfb.XORKeyStream(ciphertext, plaintext)\n\treturn encodeBase64(ciphertext)\n}\n\nfunc Decrypt(key, text string) string {\n\tblock, err := aes.NewCipher([]byte(key))\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tciphertext := decodeBase64(text)\n\tcfb := cipher.NewCFBEncrypter(block, iv)\n\tplaintext := make([]byte, len(ciphertext))\n\tcfb.XORKeyStream(plaintext, ciphertext)\n\treturn string(plaintext)\n}\n")))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,c.ah)(),e.components);return t?r.createElement(t,e,r.createElement(l,e)):l(e)},p=n(8804);function a(e){return r.createElement(p.Z,e,r.createElement(i,e))}p.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-golang-2022-04-05-go-encrypt-decrypt-mdx-9bd4f5f013406dcfbca6.js.map