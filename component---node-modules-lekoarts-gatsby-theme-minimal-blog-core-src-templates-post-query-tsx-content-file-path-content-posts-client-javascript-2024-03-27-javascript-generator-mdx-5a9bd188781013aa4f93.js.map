{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-javascript-2024-03-27-javascript-generator-mdx-5a9bd188781013aa4f93.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,KAAM,OACNC,IAAK,MACLC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,SAAU,KAAMS,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,KAAMQ,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,2BAA4B,KAAMO,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,oCAAqC,KAAMO,EAAAA,cAAoBZ,EAAYK,GAAI,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,aAAc,oBAAqB,KAAMM,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,gBAAiB,MAAO,KAAMO,EAAAA,cAAoBZ,EAAYO,IAAK,KAAMK,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,kVAAmV,KAAMM,EAAAA,cAAoBZ,EAAYQ,EAAG,KAAM,0CAA2C,KAAMI,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,KAAMQ,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,sBAAuB,MAAO,KAAMO,EAAAA,cAAoBZ,EAAYO,IAAK,KAAMK,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,yEAA0E,KAAMM,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,KAAMQ,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,oBAAqB,MAAO,KAAMO,EAAAA,cAAoBZ,EAAYO,IAAK,KAAMK,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,+DAAgE,KAAMM,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,cAAe,KAAMS,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,KAAMQ,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,cAAe,MAAO,KAAMO,EAAAA,cAAoBZ,EAAYO,IAAK,KAAMK,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,oNAAqN,KAAMM,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,KAAMQ,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,WAAY,MAAO,KAAMO,EAAAA,cAAoBZ,EAAYO,IAAK,KAAMK,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,yoBAA4oB,KAAMM,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,2BAA4B,KAAMS,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYQ,EAAG,KAAMI,EAAAA,cAAoBZ,EAAYS,EAAG,CAC3lGI,KAAM,yCACL,0CACL,CAKA,MAJA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWhB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UChBe,SAASiB,EAAiBjB,GACvC,OAAOa,EAAAA,cAAoBK,EAAAA,EAAelB,EAAOa,EAAAA,cAAoBM,EAAqBnB,GAC5F,CAHAkB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/javascript/2024-03-27-javascript-generator.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"제너레이터\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"ex6 새 문법을 사용한 일종의 이터레이터\"), \"\\n\", React.createElement(_components.li, null, \"순회할 때 값이 데이터 구조가 아니라 계산 결과일 때 유용\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"function*\"), \" function 에 * 붙음\"), \"\\n\", React.createElement(_components.li, null, \"ex6 yield 등장\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"function* generateSequence() {\\n  yield 1;\\n  yield 2;\\n  return 3;\\n}\\nlet generator = generateSequence();\\nlet one = generator.next(); //1\\nlet two = generator.next(); //2\\nconsole.log(JSON.stringify(two)); // {value: 2, done: false}\\nlet three = generator.next();\\nconsole.log(JSON.stringify(three)); // {value: 3, done: true}\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"-> 제너레이터가 종료되어 마지막 요소에 done: true 로 반환\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"전달 받은 값을 순회하는 이터러블\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"for(let value of generator) {\\n  console.log(value); // 1, 2, 3\\n}\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"전개 구문(...) 사용 가능\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"let sequence = [0, ...generateSequence()]; // 0, 1, 2, 3\\n\")), \"\\n\", React.createElement(_components.h1, null, \"언제 쓰면 좋을까?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"비동기 코드를 처리\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"//비동기 작업을 순차적으로 처리\\nfunction* fetchData() {\\n  try {\\n    const data1 = yield fetchDataFromAPI1();\\n    const data2 = yield fetchDataFromAPI2();\\n    // 데이터 처리 로직\\n  } catch (error) {\\n    // 에러 처리\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"반복적인 작업\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"function* validatePassword(password) {\\n  yield password.length >= 8; //최소 8자 이상\\n  yield /[!@#$%^&*()_+\\\\-=[\\\\]{};':\\\"\\\\\\\\|,.<>/?]+/.test(password); //특수문자 1개 이상 포함\\n  yield /\\\\d/.test(password); // 숫자 1개 이상 포함\\n  yield /[A-Z]/.test(password); // 대문자 1개 이상 포함\\n  yield /[a-z]/.test(password); // 소문자 1개 이상 포함\\n}\\n\\nconst checkPassword = (password) => {\\n  const validator = validatePassword(password);\\n  for (const valid of validator) {\\n    if (!valid) {\\n      return false; // 하나라도 조건에 맞지 않으면 false 반환\\n    }\\n  }\\n  return true; // 모든 조건을 만족하면 true 반환\\n};\\n\\nconst password = \\\"////4Aaa\\\";\\nconsole.log(checkPassword(password)); // true\\n\\n\")), \"\\n\", React.createElement(_components.h1, null, \"제너레이터는 이터러블 ! 이터러블이 뭔데?\"), \"\\n\", React.createElement(_components.h1, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://ko.javascript.info/generators\"\n  }, \"https://ko.javascript.info/generators\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/client/javascript/2024-03-27-javascript-generator.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","ul","li","code","pre","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}