"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[6036],{3809:function(e,n,t){t.d(n,{Z:function(){return i}});var l=t(7294);function r(e,n){return r=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e},r(e,n)}var c=function(e){var n,t;function c(){return e.apply(this,arguments)||this}t=e,(n=c).prototype=Object.create(t.prototype),n.prototype.constructor=n,r(n,t);var a=c.prototype;return a.componentDidMount=function(){this._updateIframeContent()},a.componentDidUpdate=function(e,n){this._updateIframeContent()},a._defineUrl=function(){var e=this.props,n=e.id,t=e.file;return"https://gist.github.com/"+n+".js"+(t?"?file="+t:"")},a._updateIframeContent=function(){var e=this.props,n=e.id,t=e.file,l=this.iframeNode,r=l.document;l.contentDocument?r=l.contentDocument:l.contentWindow&&(r=l.contentWindow.document);var c='<html><head><base target="_parent"><style>*{font-size:12px;}</style></head><body '+("onload=\"parent.document.getElementById('"+(t?"gist-"+n+"-"+t:"gist-"+n)+"').style.height=document.body.scrollHeight + 'px'\"")+">"+('<script type="text/javascript" src="'+this._defineUrl()+'"><\/script>')+"</body></html>";r.open(),r.writeln(c),r.close()},a.render=function(){var e=this,n=this.props,t=n.id,r=n.file;return l.createElement("iframe",{ref:function(n){e.iframeNode=n},width:"100%",frameBorder:0,id:r?"gist-"+t+"-"+r:"gist-"+t})},c}(l.PureComponent),a=c;var i=function(e){let{id:n,file:t}=e;return l.createElement(a,{id:n,file:t})}},6472:function(e,n,t){t.r(n),t.d(n,{Head:function(){return u.F},default:function(){return o}});var l=t(7294),r=t(1151),c=t(3809);function a(e){const n=Object.assign({h3:"h3",ul:"ul",li:"li",code:"code",p:"p",a:"a"},(0,r.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.h3,null,"스코프"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"javascript 에서 스코프는 범위 입니다.\r\n즉 변수에 접근할 수 있는 범위"),"\n",l.createElement(n.li,null,"전역 스코프와 로컬 스코프 로 2개 타입이 있습니다."),"\n",l.createElement(n.li,null,"전역 스코프는 말 그대로 어느 곳에서든 해당 변수에 접근 가능"),"\n",l.createElement(n.li,null,"지역 스코프는 함수 스코프, 블록 스코프 등 있다."),"\n"),"\n",l.createElement(n.h3,null,"변수"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"변수는 변하는 수 입니다."),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"let"),"  키워드를 써서 정의합니다."),"\n",l.createElement(n.li,null,"let 은 block 단위의 스코프를 갖습니다."),"\n"),"\n",l.createElement(c.Z,{id:"77e2c895153dfc2aa25aa79dfb3979b0",file:"2022-06-12-javscript-closure_0.js"}),"\n",l.createElement(n.h3,null,"상수"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.code,null,"const")," 키워드를 써서 정의"),"\n",l.createElement(n.li,null,"상수는 한번 선언하면 바꿀 수 없다"),"\n",l.createElement(n.li,null,"함수를 변수에 할당해 선언 할 때는 const 를 써서 쓴다"),"\n"),"\n",l.createElement(c.Z,{id:"77e2c895153dfc2aa25aa79dfb3979b0",file:"2022-06-12-javscript-closure_1.js"}),"\n",l.createElement(n.h3,null,"함수"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"함수는 한번 정의되면 여러 번 호출 할 수 있다"),"\n",l.createElement(n.li,null,"함수는 매개변수를 통해 인자를 받는다"),"\n",l.createElement(n.li,null,"함수는 return 사용해서 반환한다"),"\n",l.createElement(n.li,null,"function 키워드를 써서 함수를 정의하지만\r\nES6 부터는 화살표함수가 도입되어 키워드 없이 정의 가능하다"),"\n",l.createElement(n.li,null,"함수에 이름은 필수가 아니다"),"\n",l.createElement(n.li,null,"함수를 선언하면 함수를 선언할 때마다 새로운 스코프를 생성하게 됩니다."),"\n"),"\n",l.createElement(c.Z,{id:"77e2c895153dfc2aa25aa79dfb3979b0",file:"2022-06-12-javscript-closure_2.js"}),"\n",l.createElement(n.h3,null,"클로저"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"어휘적(lexcial) 환경(스코프) => 변하지 않는 특정한 어휘적 환경"),"\n"),"\n",l.createElement(c.Z,{id:"77e2c895153dfc2aa25aa79dfb3979b0",file:"2022-06-12-javscript-closure_3.js"}),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"outerFn 함수 밖에서 name 변수가 새로 선언되어도 변하지 않는다.\r\n어휘적(lexcial) 환경은 바로 이것이다."),"\n"),"\n",l.createElement(n.h3,null,"클로저 사용법"),"\n",l.createElement(c.Z,{id:"77e2c895153dfc2aa25aa79dfb3979b0",file:"2022-06-12-javscript-closure_4.js"}),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"특징1. 외부함수 실행이 끝나도 외부 함수 내 변수를 사용할 수 있다.\r\n(내부함수가 외부함수의 변수에 접근 할 수 있다)"),"\n"),"\n",l.createElement(c.Z,{id:"77e2c895153dfc2aa25aa79dfb3979b0",file:"2022-06-12-javscript-closure_5.js"}),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"특징2. 함수 내부 변수에 접근을 제한한다. 객체 내부에 직접 접근 못함 = 캡슐화"),"\n"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://hanamon.kr/javascript-%ED%81%B4%EB%A1%9C%EC%A0%80/"},"클로저 출처"),l.createElement(n.a,{href:"https://velog.io/@taero30/Closure-%ED%81%B4%EB%A1%9C%EC%A0%80-%EA%B0%9C%EB%85%90"},"클로저2 출처")))}var i=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?l.createElement(n,e,l.createElement(a,e)):a(e)},u=t(8804);function o(e){return l.createElement(u.Z,e,l.createElement(i,e))}u.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-client-javascript-2022-06-12-javscript-closure-mdx-4cb4b690e87dab49f61c.js.map