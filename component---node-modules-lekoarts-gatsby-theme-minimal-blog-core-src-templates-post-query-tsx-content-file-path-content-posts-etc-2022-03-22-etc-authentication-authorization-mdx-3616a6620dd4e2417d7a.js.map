{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-etc-2022-03-22-etc-authentication-authorization-mdx-3616a6620dd4e2417d7a.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/etc/2022-03-22-etc-authentication-authorization.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    ol: \"ol\",\n    h3: \"h3\",\n    blockquote: \"blockquote\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"1.AAA architecture\"), \"\\n\", React.createElement(_components.p, null, \"AAA(Authorization, Authentication, and Accounting)아키텍처는\\n인증(Authentication), 인가(Authorization),\\n그리고 회계(Accounting)와 관련된 개념을 포함하는 보안 아키텍처입니다\"), \"\\n\", React.createElement(_components.p, null, \"위키: \", React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/Authentication_protocol\"\n  }, \"https://en.wikipedia.org/wiki/Authentication_protocol\")), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/Authentication\"\n  }, \"1.authentication (인증)\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"인증 : 사용자의 신원을 확인하는 행동\\nex) 회원가입,로그인\\nex) 대리 운전사가 내 자동차의 키를 받아서 잠시 일시적으로 자동차를 운전할 수 있는 권한이 있음\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Authentication is \\n is the act of proving an assertion, such as the identity (신원)\\n  of a computer system user.\\n   (컴퓨터 시스템 사용자의 신원과 같은 주장을 증명하는 행위)\\n\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"유저가 로그인 시도\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"login 뭐야? 로그인은 사용자의 인증(Authentication)과 관련된 과정이며 자신의 신원을 확인하고 인증하는 과정\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"서버상에 일치하는 유저 정보를 찾는다\"), \"\\n\", React.createElement(_components.li, null, \"찾았다면 인증(authentication)확인의 표시로 (세션 or 토큰)을 빌급/전달\"), \"\\n\", React.createElement(_components.li, null, \"웹 브라우저 (세션 or 토큰) 관리하고\"), \"\\n\", React.createElement(_components.li, null, \"새롭게 서버로 요청을 보낼 때 인가(authorization)하기 위해 세션/토큰을 함께 보낸다.\\n\", React.createElement(_components.a, {\n    href: \"https://fierycoding.tistory.com/69\"\n  }, \"출처\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Authentication(인증)에는 다양한 인증 방식이 있으며,\\n이러한 방식들을 구현하기 위해 다양한 프로토콜이 사용됩니다\"), \"\\n\", React.createElement(_components.h3, null, \"대표적인 인증 방식\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"HTTP 기반 인증\"), \"\\n\", React.createElement(_components.li, null, \"토큰 기반 인증\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"jwt (json web token) 토큰 기반 인증\\n인증을 위한 토큰\\n토큰 사용자인증을 위한 정보를 서명한 것\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"JSON Web Token  is a proposed Internet standard for creating data with optional signature and/or optional encryption whose payload holds JSON that asserts some number of claims.\\nThe tokens are signed either using a private secret or a public/private key.\\n//https://en.wikipedia.org/wiki/JSON_Web_Token\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"jwt 인코딩/디코딩?\\njwt.io 사이트에서도 jwt 토큰을 디코딩한 결과를 알수 잇다.\\n이처럼 지금 사이트는 서베에서 디코딩해서 토큰안에 정보를 얻음\\ncookie의 사용을 제거\\n토큰 등의 정보를 cookie로 저장하면,\\ndomain 기반으로 불필요한 cookie가 전달되어 예상치 못한 오류를 야기할 수 있다.\\n이런 경우 cookie 대신 HTML5 spec에 있는 Web Storage(Session/Local storage)를 사용하는 것이 더 일반적4\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Bearer 인증 방식\\nHTTP 프로토콜을 사용하여 인증 처리를 하면서도 OAuth 프로토콜을 사용하는 인증 방식을 구현한다.\\nBearer 인증은 HTTP 요청 헤더에 (\\\"Authorization\\\" 헤더) \\\"Bearer\\\"라는 문자열이 포함된 액세스 토큰을 서버에 전달(HTTP 프로토콜을 이용)\\nOAuth 프로토콜은 클라이언트가 인증되고 액세스 토큰을 얻는 데에 사용되며, Bearer 인증은 이를 구현하는 하나의 방식\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"OAuth\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"OAuth 1.0\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://opentutorials.org/course/3405\"\n  }, \"OAuth 2.0\"), \" => 베어러 토큰을 사용하여 인증\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/Authorization\"\n  }, \"2. authorization (인가 방식)\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"인가하다(대상이 옳음을 소상하게 밝혀 인정하다.)\"), \"\\n\", React.createElement(_components.li, null, \"권한 여부 확인\"), \"\\n\", React.createElement(_components.li, null, \"인증(Authentication) 된 사용자는 인가(Authorization)를 통해 특정 리소스에 대한 접근 권한을 부여받고, 해당 리소스를 이용하\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Authorization is the function of\\n specifying access rights/privileges to resources,\\n  which is related to general information security and computer security,\\n   and to access control in particular.\\n    ( 접근 권한/특권, 특히 접근 제어를 지정하는 기능)\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"실제로 적용한 방식\"), \"\\n\", React.createElement(_components.p, null, \"지금 사용하는 시스템은 JWT 기반의 인증을 사용합니다.\\n현재는 클라이언트에서 아이디,패스워드를 보내면 서버가 응답값으로 jwt token(aceess token ,refresh token) 을 보냅니다.\\n클라이언트는 로컬스트로지에 jwt token 을 저장하고 있으면\\njwt 토큰은 주기 짧아 refresh token 도 같이 사용하고 있다.\\nhttps:/.outsider.ne.kr/1160\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"* ### [계정 service],[resource service],[client] 를 이용한 로그인\\n\\n* ### [client] 로컬 을 실행하고 [service] 개발계 의 DB와 API 사용하기\\n일반적이진 않지만 화면 개발을 해야 하는데 서버 개발이 늦어져서 개발계에 서버와 연동해서 작업을 했었다.\\n(이때는 서버가 보내주는 json 값이 일치 했기 때문에 가능했다.)\\n\\n> 1. [client]에 로그인 하면 아이디,패스워드로 jwt 토큰을 [계정 service] 에 요청합니다.\\n2. [계정 service]에서 jwt token 을 만들 때 [개발계의 JWT]랑 똑같도록 변경하는 작업 진행\\n3. [계정 service] 는 [개발계의 JWT]을 화면에 전달합니다.\\n4. 로그인한 사용자는 [개발계 서버의 API]를 조회할때 [개발계의 JWT]을 사용\\n\\n\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"세션/토큰 비교\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"<세션>\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"서버측에서 저장/관리\"), \"\\n\", React.createElement(_components.li, null, \"유효기간,HttpOnly,Secure 옵션 주어 쿠키 저장\"), \"\\n\", React.createElement(_components.li, null, \"세션?\\n서버가 사용자의 정부를 저장해야헸고 이를 세션이라고 불렀다\\n대부분 세션을 메모리에 저장했고 로그인중 사용자가 많아지면서 db나 서버에 무리를 주었다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"<토큰>\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"웹 브라우저에 저장\"), \"\\n\", React.createElement(_components.li, null, \"세션보다 공격 노출 더 크다\"), \"\\n\", React.createElement(_components.li, null, \"되도록 민감한 정보를 담지 않도록 한다\"), \"\\n\", React.createElement(_components.li, null, \"만료 기간 설정 가능\"), \"\\n\", React.createElement(_components.li, null, \"토큰 주기가 짧을 때 refresh token 을 인증과정에 추가적으로 발급\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://mangkyu.tistory.com/55\"\n  }, \"https://mangkyu.tistory.com/55\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://opentutorials.org/course/3405/22010\"\n  }, \"Refresh token 설명 영상\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://velog.io/@gusdnr814/%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%9D%B8%EC%A6%9D-4%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95\"\n  }, \"https://velog.io/@gusdnr814/%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%9D%B8%EC%A6%9D-4%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/etc/2022-03-22-etc-authentication-authorization.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","ul","li","pre","code","ol","h3","blockquote","hr","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}