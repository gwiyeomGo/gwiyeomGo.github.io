{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-infra-2023-08-29-infra-kafka-mdx-c487e48eda3d073063ea.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,WAAY,aACZC,GAAI,KACJC,GAAI,KACJC,KAAM,OACNC,EAAG,MACFC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,2DAA4D,KAAMQ,EAAAA,cAAoBZ,EAAYK,WAAY,KAAM,KAAMO,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,UAAW,MAAO,KAAMQ,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,oBAAqB,KAAMK,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,sBAAuB,KAAMK,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,4BAA6B,MAAO,KAAMK,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,mBAAoB,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,wIAAyI,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYQ,KAAM,KAAM,+BAAgC,KAAMI,EAAAA,cAAoBZ,EAAYQ,KAAM,KAAM,sBAAuB,KAAMI,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYQ,KAAM,KAAM,sBAAuB,SAAU,KAAMI,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,cAAe,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,wNAAyN,KAAMQ,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYS,EAAG,CAChmDI,KAAM,wEACL,yEACL,CAKA,MAJA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWhB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UChBe,SAASiB,EAAiBjB,GACvC,OAAOa,EAAAA,cAAoBK,EAAAA,EAAelB,EAAOa,EAAAA,cAAoBM,EAAqBnB,GAC5F,CAHAkB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/infra/2023-08-29-infra-kafka.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"토이 프로젝트로 경매프로그램을 만들기로 했다\\n카푸카 개발 환경 셋팅,도커 셋팅을 담당하기로 했다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"목표 1 :\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"mac os 에서 도커를 설치\"), \"\\n\", React.createElement(_components.li, null, \"kafka 를 docker  설치\"), \"\\n\", React.createElement(_components.li, null, \"로컬에서 kafka 개발 환경 셋팅하고 실행\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"docker-compose?\"), \"\\n\", React.createElement(_components.p, null, \"Docker는 개별 컨테이너 관리에 사용되고\\nDocker Compose는 여러 컨테이너로 구성된 애플리케이션 스택을 정의하고 관리하는 도구\\nkafka 는 zookeeper 를 같이 사용해야 하기 때문에 docker-compose 설치\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew install docker-compose\"), \"\\n\", React.createElement(_components.code, null, \"docker-compose -v\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"docker-compose.yml\"), \"설정 필요\"), \"\\n\", React.createElement(_components.h1, null, \"zookeeper?\"), \"\\n\", React.createElement(_components.p, null, \"분산 코디네이션 서비스 :분산 시스템에서 서로 다른 노드 또는 서버 간에 상호 작용하고 조율하기 위한 도구\\nex) zookeeper (레지스트리, 분산 락, 분산 큐 구현 등 다양한 분산 시스템에서 필요한 작업을 수행)\\nex) etcd(클러스터 상태 및 설정 정보를 저장하고 공유)\\n카프카에서는 리더 선출,분산 시스템관리,토픽 및 파티션 관리,브로커 디스커버리 등...위해서\"), \"\\n\", React.createElement(_components.h1, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://akageun.github.io/2019/09/10/docker-compose-local-kafka.html\"\n  }, \"https://akageun.github.io/2019/09/10/docker-compose-local-kafka.html\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/infra/2023-08-29-infra-kafka.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","blockquote","ul","li","code","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}