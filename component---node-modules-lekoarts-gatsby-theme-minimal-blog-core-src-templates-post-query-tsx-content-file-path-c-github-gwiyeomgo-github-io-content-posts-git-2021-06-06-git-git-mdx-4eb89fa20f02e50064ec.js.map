{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-git-2021-06-06-git-git-mdx-4eb89fa20f02e50064ec.js","mappings":"uOAMA,MAFmBA,IAAAA,IAAC,KAAEC,GAAmB,SAAK,IAAI,EC4BlD,MACMC,EADK,CAAC,OAAD,aACOC,KAAKC,GAAC,0BAA+BA,EAAC,IAAIA,EAAC,SAsC7D,MApCwEJ,IAAAA,IAAGK,MAAM,KAAEJ,GAAM,SAAEK,GAAU,SACnGC,EAAAA,EAAAA,IAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,IAACE,EAAAA,GAAO,CAACC,GAAG,KAAKC,QAAQ,aACtBV,EAAKW,QAERL,EAAAA,EAAAA,IAAAA,IAAAA,CAAGM,GAAI,CAAEC,MAAM,YAAcC,GAAI,EAAGC,EAAG,CAAEF,MAAM,aAAgBG,SAAU,CAAC,EAAG,EAAG,MAC9EV,EAAAA,EAAAA,IAAAA,OAAAA,KAAON,EAAKiB,MACXjB,EAAKkB,OACJZ,EAAAA,EAAAA,IAACa,EAAAA,SAAc,YAEbb,EAAAA,EAAAA,IAACc,EAAAA,EAAQ,CAACF,KAAMlB,EAAKkB,QAGxBlB,EAAKqB,YAAU,MACfrB,EAAKqB,aAAcf,EAAAA,EAAAA,IAAAA,OAAAA,KAAON,EAAKqB,WAAU,eAE5Cf,EAAAA,EAAAA,IAAAA,UAAAA,CACEM,GAAI,CACFU,GAAI,EACJ,6BAA8B,CAC5BA,GAAI,CAAC,EAAG,EAAG,GACXC,aAAa,MACbC,UAAWvB,EAAOwB,KAAK,MACvB,2BAA4B,CAC1BF,aAAa,QAGjBb,QAAQ,mBAGTL,IAEHC,EAAAA,EAAAA,IAACoB,EAAU,CAAC1B,KAAMA,IACX,EAKJ,MAAM2B,EAA4BC,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAGxB,MAAM,KAAEJ,IAAQ,SAC1DM,EAAAA,EAAAA,IAACuB,EAAAA,EAAG,CACFlB,MAAOX,EAAKW,MACZmB,YAAa9B,EAAK8B,YAAc9B,EAAK8B,YAAc9B,EAAK+B,QACxDC,MAAOhC,EAAKiC,OAAoB,QAAd,EAAGjC,EAAKiC,cAAM,OAAiB,QAAjB,EAAXC,EAAaC,uBAAe,OAAQ,QAAR,EAA5BC,EAA8BC,cAAM,WAAzB,EAAXC,EAAsCC,SAAMC,EACjEC,SAAUzC,EAAK0C,KACfC,aAAc3C,EAAK2C,cACnB,EC5EW,SAASC,EAAoB,GAAuC,OAAlCC,GAA+B,EAC9E,OAAO1B,EAAAA,cAAC2B,EAASD,EACnB,C,6ECyBA,IAjBiB9C,IAA0B,IAAzB,KAAEmB,GAAiB,EACnC,MAAM,SAAE6B,EAAQ,SAAEC,IAAaC,EAAAA,EAAAA,KAE/B,OACE3C,EAAAA,EAAAA,IAACa,EAAAA,SAAc,KACZD,EAAKhB,KAAI,CAACgD,EAAKC,KACd7C,EAAAA,EAAAA,IAACa,EAAAA,SAAc,CAACiC,IAAKF,EAAIR,QACpBS,GAAC,MACJ7C,EAAAA,EAAAA,IAAC+C,EAAAA,KAAI,CAACzC,GAAK0C,IAAC,YAAM,IAAa,QAAX,EAAGA,EAAEC,cAAM,aAARC,EAAUzC,EAAG,EAAG0C,IAAIC,EAAAA,EAAAA,GAAe,IAAIV,EAAQ,IAAID,EAAQ,IAAIG,EAAIR,OACvFQ,EAAIS,SAII,C,wHCxBrB,SAASC,EAAkBf,GACzB,MAAMgB,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNpD,EAAG,MACFqD,EAAAA,EAAAA,MAAsBvB,EAAMwB,YAC/B,OAAOlD,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,8FAA+F,KAAM7C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,uFAA4F,KAAM7C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,4HAA6H,KAAM7C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,2CAA4C,KAAM7C,EAAAA,cAAoB0C,EAAYI,GAAI,KAAM,cAAe,KAAM9C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,2DAA4D,KAAM7C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,6EAA8E,KAAM7C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,oEAAqE,KAAM7C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,mFAAoF,KAAM7C,EAAAA,cAAoB0C,EAAYI,GAAI,KAAM,eAAgB,KAAM9C,EAAAA,cAAoB0C,EAAYK,IAAK,KAAM/C,EAAAA,cAAoB0C,EAAYM,KAAM,KAAM,2KAA4K,KAAMhD,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM7C,EAAAA,cAAoB0C,EAAY9C,EAAG,CAClgDuD,KAAM,wBACL,WAAY,KAAMnD,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,kCAAmC,KAAM7C,EAAAA,cAAoB0C,EAAYI,GAAI,KAAM,UAAW,KAAM9C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,iIAAkI,KAAM7C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,uEAAwE,KAAM7C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,kCAAmC,KAAM7C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,0DAA2D,KAAM7C,EAAAA,cAAoB0C,EAAYI,GAAI,KAAM,oCAAqC,KAAM9C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,8HAA+H,KAAM7C,EAAAA,cAAoB0C,EAAYI,GAAI,KAAM,MAAO,KAAM9C,EAAAA,cAAoB0C,EAAYG,EAAG,KAAM,OAAQ7C,EAAAA,cAAoB0C,EAAY9C,EAAG,CAClhCuD,KAAM,yHACL,UAAW,WAAYnD,EAAAA,cAAoB0C,EAAY9C,EAAG,CAC3DuD,KAAM,mDACL,OAAQ,YAAanD,EAAAA,cAAoB0C,EAAY9C,EAAG,CACzDuD,KAAM,6HACL,WAAY,WAAYnD,EAAAA,cAAoB0C,EAAY9C,EAAG,CAC5DuD,KAAM,6CACL,gBACL,CAKA,MAJA,SAAoBzB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAO0B,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBvB,EAAMwB,YAC3E,OAAOG,EAAYrD,EAAAA,cAAoBqD,EAAW3B,EAAO1B,EAAAA,cAAoByC,EAAmBf,IAAUe,EAAkBf,EAC9H,E,UCtBe,SAAS4B,EAAiB5B,GACvC,OAAO1B,EAAAA,cAAoBuD,EAAAA,EAAe7B,EAAO1B,EAAAA,cAAoBwD,EAAqB9B,GAC5F,CAHA6B,EAAAA,C,wDC+DA,IArDY3E,IAOK,IAPJ,MACXY,EAAK,GAAK,YACVmB,EAAW,GAAK,SAChBW,EAAQ,GAAK,MACbT,EAAK,GAAK,SACV3B,EAAW,KAAI,aACfsC,EAAY,IACH,EACT,MAAMiC,GAAOC,EAAAA,EAAAA,MAEP,UACJC,EACAC,aAAcC,EAAY,QAC1BC,EACAC,gBAAiBC,EACjBC,UAAWC,EAAY,OACvBC,GACEV,EAEEW,EAAM,CACV5E,MAAOA,EAAWA,EAAK,MAAMmE,EAAcE,EAC3ClD,YAAaA,GAAeqD,EAC5BK,IAAI,GAAIP,GAAUxC,GAAQ,IAC1BT,MAAM,GAAIiD,GAAUjD,GAASqD,IAE/B,OACElE,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQoE,EAAI5E,OACZQ,EAAAA,cAAAA,OAAAA,CAAMwC,KAAK,cAAc8B,QAASF,EAAIzD,cACtCX,EAAAA,cAAAA,OAAAA,CAAMwC,KAAK,QAAQ8B,QAASF,EAAIvD,QAChCb,EAAAA,cAAAA,OAAAA,CAAMuE,SAAS,WAAWD,QAASF,EAAI5E,QACvCQ,EAAAA,cAAAA,OAAAA,CAAMuE,SAAS,SAASD,QAASF,EAAIC,MACrCrE,EAAAA,cAAAA,OAAAA,CAAMuE,SAAS,iBAAiBD,QAASF,EAAIzD,cAC7CX,EAAAA,cAAAA,OAAAA,CAAMuE,SAAS,WAAWD,QAASF,EAAIvD,QACvCb,EAAAA,cAAAA,OAAAA,CAAMuE,SAAS,UAAUD,QAAQ,YACjCtE,EAAAA,cAAAA,OAAAA,CAAMuE,SAAS,eAAeD,QAASF,EAAIzD,cAC3CX,EAAAA,cAAAA,OAAAA,CAAMwC,KAAK,eAAe8B,QAAQ,wBAClCtE,EAAAA,cAAAA,OAAAA,CAAMwC,KAAK,gBAAgB8B,QAASF,EAAI5E,QACxCQ,EAAAA,cAAAA,OAAAA,CAAMwC,KAAK,cAAc8B,QAASF,EAAIC,MACtCrE,EAAAA,cAAAA,OAAAA,CAAMwC,KAAK,sBAAsB8B,QAASF,EAAIzD,cAC9CX,EAAAA,cAAAA,OAAAA,CAAMwC,KAAK,gBAAgB8B,QAASF,EAAIvD,QACxCb,EAAAA,cAAAA,OAAAA,CAAMwC,KAAK,oBAAoB8B,QAASF,EAAIzD,cAC5CX,EAAAA,cAAAA,OAAAA,CAAMwC,KAAK,kBAAkB8B,QAASH,IACtCnE,EAAAA,cAAAA,OAAAA,CAAMwC,KAAK,eAAe8B,QAAQ,wCAClCtE,EAAAA,cAAAA,OAAAA,CAAMwE,IAAI,OAAOC,KAAK,YAAYC,MAAM,QAAQvB,MAAMwB,EAAAA,EAAAA,YAAW,wBACjE3E,EAAAA,cAAAA,OAAAA,CAAMwE,IAAI,OAAOC,KAAK,YAAYC,MAAM,QAAQvB,MAAMwB,EAAAA,EAAAA,YAAW,wBACjE3E,EAAAA,cAAAA,OAAAA,CAAMwE,IAAI,mBAAmBE,MAAM,UAAUvB,MAAMwB,EAAAA,EAAAA,YAAW,2BAC7DnD,EAAexB,EAAAA,cAAAA,OAAAA,CAAMwE,IAAI,YAAYrB,KAAM3B,IAAmB,KAC9DtC,EACA,C","sources":["webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://gwiyeom-blog/./content/posts/git/2021-06-06-git-git.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/seo.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"git을 사용 하면서 잘 모르는 명령어를 입력했고 결국 git 꼬였다.\\r\\n시니어 개발자님이 문제를 해결해 주셨지만..저한테 몇가지 현타가 오는 질문을 하셨다.\"), \"\\n\", React.createElement(_components.p, null, \"\\\"git,gitlab,github 구분할줄 모르죠?\\\"\\r\\n\\\"git은 커밋단위로 이루어져 있어요. git reset 명령 잘 모르면 사용하지 마세요\\\"\"), \"\\n\", React.createElement(_components.p, null, \"현타가 왔다.\\r\\n6개월이상 git을 사용했고 공부했다고 생각했지만 git 이 무엇인지 나는 설명할 수 없다는 사실을 알았다.\\r\\n또한 눈앞에 발생한 문제를 해결하려고 잘모르는 명령어를 사용했던 점도 부끄러웠다.\"), \"\\n\", React.createElement(_components.p, null, \"git의 탄생,정의를 살펴보고 gitLab,gitHub까지 알아보겠다.\"), \"\\n\", React.createElement(_components.h3, null, \"Git의 탄생 배경\"), \"\\n\", React.createElement(_components.p, null, \"과거 파일의 변화를 기록하고 특정 시점의 버전을 사용할 수 있는 [1]버전 관리 시스템이 존재했다.\"), \"\\n\", React.createElement(_components.p, null, \"프로젝트를 다른 개발자와 함께 작업하기 위해 서버가 파일을 관리하고 필요한 파일을 받아서 사용하는 중앙집중식 버전 관리도 등장했다.\"), \"\\n\", React.createElement(_components.p, null, \"만약 중앙 서버에서 문제가 발생한다면 아무도 다른 사람과 협업할 수 없고 일을 백업할 방법도 없는 단점이 존재했다.\"), \"\\n\", React.createElement(_components.p, null, \"이후 등장한 것이 분산 버전 관리 시스템이다.\\r\\n저장소를 전부 복제하여 서버에 문제가 생겨도 로컬에서 복제된 내용으로 작업을 할 수 있다.\"), \"\\n\", React.createElement(_components.h3, null, \"Git은 무엇인가요?\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Git is a free and open source distributed version control system\\r\\ndesigned to handle everything\\r\\nfrom small to very large projects\\r\\nwith speed and efficiency.\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://git-scm.com/\"\n  }, \"Git 정의\")), \"\\n\", React.createElement(_components.p, null, \"Git은 무료 오픈 소스 분산 버전 관리 시스템입니다.\"), \"\\n\", React.createElement(_components.h3, null, \"Git 특징\"), \"\\n\", React.createElement(_components.p, null, \"git은 데이터를 파일 시스템 스냅샷으로 취급하고 크기가 아주 작다.\\r\\ngit은 커밋하거나 프로젝트의 상태를 저장할 떄마다 파일이 존재하는 그 순간을 중요하게 여긴다.\\r\\ngit은 데이터를 스냅샷의 스트림처럼 취급한다.\"), \"\\n\", React.createElement(_components.p, null, \"거의 모든 명령을 로컬에서 실행\\r\\n비행기나 기차 등에서 작업하고 네트워크에\\r\\n접속하고 있지 않아도 커밋할 수 있다\"), \"\\n\", React.createElement(_components.p, null, \"일단 스냅샷을 커밋하고 나면 데이터를 잃어버리기 어렵다\"), \"\\n\", React.createElement(_components.p, null, \"Git은 파일을 이름으로 저장하지 않고 해시( SHA-1 해시를 사용하여 체크섬을 만듬 )로 저장\"), \"\\n\", React.createElement(_components.h3, null, \"GitLab ,gitHub은 git과 어떻게 다른 걸까요?\"), \"\\n\", React.createElement(_components.p, null, \"gitHub: 분산 버전 관리시스템 Git의 저장소 [2] 호스팅을 지원하는 웹 서비스이다.\\r\\ngitLab : [3] Git의 원격 저장소 기능과 이슈 트래커 기능등을 제공하는 소프트웨어다.(설치형 버전관리 시스템)\"), \"\\n\", React.createElement(_components.h3, null, \"주석\"), \"\\n\", React.createElement(_components.p, null, \"[1] \", React.createElement(_components.a, {\n    href: \"https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-%EB%B2%84%EC%A0%84-%EA%B4%80%EB%A6%AC%EB%9E%80%3F\"\n  }, \"버전관리란?\"), \"\\r\\n[2] \", React.createElement(_components.a, {\n    href: \"https://namu.wiki/w/%ED%98%B8%EC%8A%A4%ED%8C%85\"\n  }, \"호스팅\"), \"\\r\\n(추가) \", React.createElement(_components.a, {\n    href: \"https://git-scm.com/book/ko/v2/GitHub-%EA%B3%84%EC%A0%95-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\"\n  }, \"github?\"), \"\\r\\n[3] \", React.createElement(_components.a, {\n    href: \"https://opentutorials.org/course/785/4933\"\n  }, \"GitLab 생활코딩\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/git/2021-06-06-git-git.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","Seo","description","excerpt","image","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","styles","_t$styles","to","replaceSlashes","name","_createMdxContent","_components","Object","assign","p","h3","pre","code","_provideComponents","components","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}