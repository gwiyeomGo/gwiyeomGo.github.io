{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2022-03-09-mysql-data-type-int-max-value-mdx-e34e709f1803da6246ee.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,IAAK,MACLC,EAAG,MACFC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,KAAMQ,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,KAAMO,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,8DAA+D,MAAO,KAAMM,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,KAAMO,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,uEAAwE,MAAO,MAAO,KAAMM,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,4CAA6C,KAAMM,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,4HAA6H,KAAMM,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,iEAAkEM,EAAAA,cAAoBZ,EAAYO,KAAM,KAAM,uBAAwB,sBAAuB,KAAMK,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,wDAAyDM,EAAAA,cAAoBZ,EAAYO,KAAM,KAAM,cAAe,mBAAoB,KAAMK,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,+DAAgE,KAAMM,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,mCAAoC,KAAMM,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYQ,IAAK,KAAMI,EAAAA,cAAoBZ,EAAYO,KAAM,CAC5/CM,UAAW,gBACV,+LAAgM,KAAMD,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,2DAA4DM,EAAAA,cAAoBZ,EAAYS,EAAG,CACtYK,KAAM,mGACL,QAAS,KAAMF,EAAAA,cAAoBZ,EAAYM,EAAG,KAAMM,EAAAA,cAAoBZ,EAAYS,EAAG,CAC5FK,KAAM,wCACL,eACL,CAKA,MAJA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWjB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCpBe,SAASkB,EAAiBlB,GACvC,OAAOa,EAAAA,cAAoBM,EAAAA,EAAenB,EAAOa,EAAAA,cAAoBO,EAAqBpB,GAC5F,CAHAmB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2022-03-09-mysql-dataTypeIntMaxValue.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"3/5일 토요일 새벽부터 등록된 신규 회원의\\nkakao_id 가 모두 동일한 값으로 db에 등록되었다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"3/7 월요일 문의전화가 오전부터 발생\\n1.kako_id 로 로그인 불가\\n2.회원들의 kakao_id 가 동일함 확인\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"당시 문제가 발생했을때\\nkakao에서 넘겨주는 값이 문제라고 생각했다.\"), \"\\n\", React.createElement(_components.p, null, \"회원쪽 담당자가 디버깅을 해봤고\\n(신규 회원을 찾을 수 없어서.. 다른 팀 사람에게 도움 요청)\\n처음 디버깅시 값이 똑같이 온다고 생각했고\\n개발자가 kakao develop에 문의 글을 남겨서 답변을 기다렸다.\"), \"\\n\", React.createElement(_components.p, null, \"회원쪽 담당자가 여러번 디버깅을 해보면서 알게된 사실은\\nkakao_id는 제대로 왔고\\ndb에 등록시 값이\\n\", React.createElement(_components.code, null, \"mysql max int value\"), \" =2147483647\\n이었다.\"), \"\\n\", React.createElement(_components.h3, null, \"원인\"), \"\\n\", React.createElement(_components.p, null, \"우리 회원 db 의 kakao_id 컬럼의 데이터 타입이 int 였다.\\n허용범위가 초가되어서 \", React.createElement(_components.code, null, \"2147483647\"), \"로 동일한 값이 등록되었다.\"), \"\\n\", React.createElement(_components.p, null, \"최초 개발했을때\\nkakao_id가 어떤 값으로 오고\\n폭을 고려해서 개선해야 겠다고 아무도 생각못했었다.\"), \"\\n\", React.createElement(_components.p, null, \"운영을 하면서 생각지도 못한 에러가 많이 나오는거 같다.\"), \"\\n\", React.createElement(_components.h3, null, \"방법\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"-- kakao_id 컬럼의 데이터 타입을 수정\\n-- (1)\\nALTER TABLE [tablename] CHANGE [columnName] [columnName] BIGINT not null default '0'\\n-- (2)\\nalter table [table_name] modify [column_name] BIGInt\\n\\n\")), \"\\n\", React.createElement(_components.h3, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, \"//How do I change the data type for a column in MySQL?\\n\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/1356866/how-do-i-change-the-data-type-for-a-column-in-mysql\"\n  }, \"참고1\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://dogleg.co.kr/?p=163#zerofill\"\n  }, \"참고2-BIGINT\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/database/mysql/2022-03-09-mysql-dataTypeIntMaxValue.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","ol","li","p","code","pre","a","_provideComponents","components","React","className","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}