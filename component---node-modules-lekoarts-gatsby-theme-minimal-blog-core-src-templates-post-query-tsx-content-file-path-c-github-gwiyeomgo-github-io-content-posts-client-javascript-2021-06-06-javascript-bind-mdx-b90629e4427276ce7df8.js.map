{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-client-javascript-2021-06-06-javascript-bind-mdx-b90629e4427276ce7df8.js","mappings":"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","sources":["webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://gwiyeom-blog/./content/posts/client/javascript/2021-06-06-javascript-bind.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/seo.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://codesandbox.io/s/dynamically-add-and-delete-input-fields-in-form-using-react-js-forked-bo6d4?file=/src/components/bookView.js:0-1888\"\n  }, \"React 로 만들어진 코드 예시\"), \" 를 찾다 보면 JavaScript bind 함수를 사용하는 코드를 심심치 않게 볼 수 있습니다.\\r\\n그런데 최근의 React 코드에서는 좀 처럼 찾아 볼 수 없는데,\\r\\n\", React.createElement(_components.strong, null, \"왜 과거에는 사용하였지만 최근에서는 잘 사용하지 않는 걸까요?\")), \"\\n\", React.createElement(_components.h3, null, \"JavaScript bind 함수\"), \"\\n\", React.createElement(_components.p, null, \"먼저 bind 의 정의를 찾아보겠습니다.\\r\\n\", React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"\n  }, \"MDN bind\"), \" 를 아래와 같이 정의하고 있습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"> bind()함수는 새로운 바인딩한 함수를 만듭니다.\\r\\n> 바인딩한 함수는 원본 함수 객체를 감싸는 함수로, ECMAScript 2015에서 말하는 특이 함수 객체exotic function object입니다. 바인딩한 함수를 호출하면 일반적으로 래핑된 함수가 호출 됩니다.\\n\")), \"\\n\", React.createElement(_components.p, null, \"사실 정의만으로는 bind를 이해하기 어려운데요. 쓰임새 관점에서 살펴보면 주로 \", React.createElement(_components.strong, null, \"this\"), \"와 연관성이 많습니다.\\r\\nReact 코드로 예를 들어 보겠습니다.\"), \"\\n\", React.createElement(_components.p, null, \"아래 코드는 버튼을 클릭하면 값이 증가되어 보여지는 단순한 코드 입니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"class Button extends React.Component {\\r\\n    render() {\\r\\n        return <button onClick={this.props.onClick}>+</button>;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Page extends React.Component {\\r\\n    state = {\\r\\n        num: 0,\\r\\n    };\\r\\n\\r\\n    add() {\\r\\n        this.setState({ num: this.state.num + 1 });\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        // console.log(this); //Page\\r\\n        return (\\r\\n            <div>\\r\\n                <Button onClick={this.add} />\\r\\n                <h1>{this.state.num}</h1>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nconst rootElement = document.getElementById(\\\"root\\\");\\r\\nReactDOM.render(<Page></Page>, rootElement);\\n\")), \"\\n\", React.createElement(_components.p, null, \"Page 컴포넌트의 add 함수를 자식 컴포넌트 즉, Button 컴포넌트에 props 전달하고 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"하지만 이 코드는 동작하지 않고 undefined 오류가 발생합니다. 그 이유는 Button 컴포넌트에서 전달받은 add 함수를 호출할 때 this가 Page 컴포넌트를 가르키지 않기 때문입니다. 이런 문제를 '바인딩되지 않는 this 문제'라고 합니다.\"), \"\\n\", React.createElement(_components.p, null, \"bind를 사용하면'바인딩되지 않는 this 문제'를 해결할 수 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"Page 컴포넌트에서 Buttorn 컴포넌트로 add 함수를 넘길 때 bind 함수를 함께 사용합니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"class Page extends React.Component {\\r\\n    state = {\\r\\n        num: 0,\\r\\n    };\\r\\n    add() {\\r\\n        this.setState({ num: this.state.num + 1 });\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div>\\r\\n                <Button onClick={this.add.bind(this)} /> // bind 추가\\r\\n                <h1>{this.state.num}</h1>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h3, null, \"화살표 함수와 React 함수형 컴포넌트\"), \"\\n\", React.createElement(_components.p, null, \"위의 언급한 '바인딩되지 않는 this 문제' 를 bind 함수 이외에 다른 방법으로 해결할 수 있습니다. 바로 화살표 함수Arrow function expression와 React 함수형 컴포넌트를 사용하는 것입니다.\"), \"\\n\", React.createElement(_components.p, null, \"먼저 화살표 함수를 사용하면 bind 함수 대신 아래와 같이 변경할 수 있습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"class Page extends React.Component {\\r\\n    // 화살표 함수로 변경\\r\\n    add = () => {\\r\\n        this.setState({ num: this.state.num + 1 });\\r\\n    };\\r\\n    render() {\\r\\n        return (\\r\\n            <div>\\r\\n                <Button onClick={this.add} />\\r\\n                <h1>{this.state.num}</h1>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"위의 코드에서는 bind 대신 add 함수를 화살표 함수로 변경 하였습니다.\\r\\n실행해 보면 오류 없이 동작하는 것을 확인할 수 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"두 번째로는 최근 React 에서 도입된 함수형 컴포넌트를 사용하는 것입니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"function Button({ onClick }) {\\r\\n    return <button onClick={onClick}>+</button>;\\r\\n}\\r\\n\\r\\nfunction Page() {\\r\\n    const [num, setNum] = useState(0);\\r\\n\\r\\n    const add = () => {\\r\\n        setNum(num + 1);\\r\\n    };\\r\\n\\r\\n    console.log(this); //Window\\r\\n    return (\\r\\n        <div>\\r\\n            <Button onClick={add} />\\r\\n            <h1>{num}</h1>\\r\\n        </div>\\r\\n    );\\r\\n}\\r\\n\\r\\nconst rootElement = document.getElementById(\\\"root\\\");\\r\\nReactDOM.render(<Page></Page>, rootElement);\\n\")), \"\\n\", React.createElement(_components.p, null, \"함수형 컴포넌트에서는 this 의 사용이 불필요하기 때문에 자연스럽게 '바인딩 되지 않는 this 문제'가 해결됩니다.\"), \"\\n\", React.createElement(_components.h3, null, \"결론\"), \"\\n\", React.createElement(_components.p, null, \"'바인딩 되지 않는 this 문제' 를 해결하기 위해 과거에는 bind 함수를 사용했으나\\r\\n최근 화살표 함수와 함수형 컴포넌트의 일반화(혹은 대중화)로 앞서 언급했던 '바인딩되지 않는 this문제'가 자연스럽게 해결되면서 더 이상 쓸 필요가 없어진 것으로 보여집니다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/client/javascript/2021-06-06-javascript-bind.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","Seo","description","excerpt","image","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","styles","_t$styles","to","replaceSlashes","name","_createMdxContent","_components","Object","assign","p","strong","h3","pre","code","_provideComponents","components","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}