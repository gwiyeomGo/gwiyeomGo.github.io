{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-client-react-2021-08-23-react-router-mdx-c7517791f9ae2246b926.js","mappings":"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","sources":["webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://gwiyeom-blog/./content/posts/client/react/2021-08-23-react-Router.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/seo.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Router가 뭐지?\"), \"\\n\", React.createElement(_components.p, null, \"배경 요즘 react로 블로그을 만들려고한다\\r\\n업무하면서도 찾아서만 썼지\\r\\n정확하게 공부해본적이 없다\\r\\n그래서\\r\\n\\\"react-router-dom\\\"\\r\\n을 공부해 보려고 한다\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"https://react.vlpt.us/react-router/\"\n  }, \"SPA\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://velog.io/@97godo/React-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EB%9D%BC%EC%9A%B0%ED%84%B0%EB%A1%9C-SPA-%EA%B0%9C%EB%B0%9C%ED%95%98%EA%B8%B0\"\n  }, \"https://velog.io/@97godo/React-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EB%9D%BC%EC%9A%B0%ED%84%B0%EB%A1%9C-SPA-%EA%B0%9C%EB%B0%9C%ED%95%98%EA%B8%B0\")), \"\\n\", React.createElement(_components.h1, null, \"react-router-dom 패키지\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import {\\r\\n  BrowserRouter as Router,\\r\\n  Switch,\\r\\n  Route,\\r\\n  useParams, //useParams returns an object of key/value pairs of URL parameters. Use it to access match.params of the current <Route>.\\r\\n  useHistory,//The useHistory hook gives you access to the history instance that you may use to navigate.\\r\\n  Link\\r\\n} from \\\"react-router-dom\\\";\\n\")), \"\\n\", React.createElement(_components.h1, null, \"react- router- dom  v6  업데이트\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://kyung-a.tistory.com/36\"\n  }, \"https://kyung-a.tistory.com/36\")), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"https://reactrouter.com/web/api/Hooks\"\n  }, \"Hooks\"), \" ? useParams? useHistory?\"), \"\\n\", React.createElement(_components.p, null, \"React Router ships with a few hooks that let you access the state of the router and perform navigation from inside your components.\"), \"\\n\", React.createElement(_components.h1, null, \"What is the difference between HashRouter and BrowserRouter in React\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://reactrouter.com/web/api/BrowserRouter\"\n  }, \"BrowserRouter\"), \" uses the HTML5 history API (pushState, replaceState and the popstate event) to keep your UI in sync with the URL.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://reactrouter.com/web/api/HashRouter\"\n  }, \"hashRouter\"), \"  uses the hash portion of the URL (i.e. window.location.hash) to keep your UI in sync with the URL.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"hashRouter는 url에 #이 들어가는 형태 BrowserRouter는 그렇지 않다\"), \"\\n\", React.createElement(_components.li, null, \"HashRouter는 # 때문에 웹 브라우저 검색엔진에서 url을 통한 검색이 안된다.\"), \"\\n\", React.createElement(_components.li, null, \"HashRouter는 새로고침을 해도 계속해서 url 싱크를 유지\"), \"\\n\", React.createElement(_components.li, null, \"BrowserRouter은 계속해서 url싱크를 유지 시켜주지 못한다.새로고침을 하면 화면을 경로 못찾을 수도 있다\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"https://reactrouter.com/web/api/Link\"\n  }, \"Link\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://reactrouter.com/web/api/Link\"\n  }, \"https://reactrouter.com/web/api/Link\")), \"\\n\", React.createElement(_components.h1, null, \"2022 router version up date\"), \"\\n\", React.createElement(_components.p, null, \"#20220812\\r\\n현재 110개의 매장에서 기부 물품을 등록하는 시스템을 운영중이다\\r\\n매장에서 기부자가 왔을때 기부를 등록하는데 서비스에서 에러를 반환하면 개발자가 참조되어 장애 알림을 받고있다\\r\\n최근 1건의 장애 내용이 황당하면서도 router 에 대해서 내가 잘 모른다는 사실을 알았다\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"[ERROR] strconv.ParseInt: parsing \\\"new145210\\\": invalid syntax \"), \"라는 제목의 메세지인데\\r\\nstatus code 가 500 으로 왔다\\r\\n\", React.createElement(_components.img, {\n    src: \"./chat.JPG\",\n    alt: \"대화내용\"\n  })), \"\\n\", React.createElement(_components.p, null, \"브라우저의 주소 검색창에 회원번호를 입력해서 발생한 에러로 추정됩니다.\\r\\n원인은\\r\\n/donation/new 에 해당하는 컴포넌트가 존재하며\\r\\n해당 컴포넌트에서 \", React.createElement(_components.code, null, \" /api/...\"), \" 로 기부 단건조회를 합니다.\\r\\n주소창에서 url 을 입력하고 엔터키를 눌러서 api 호출 되어 발생한 문제로 보입니다.\"), \"\\n\", React.createElement(_components.p, null, \"컴포턴트를 url 로 호출했을 때 막을 수 있는 방법이 있는지 찾아봐야겠다\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/client/react/2021-08-23-react-Router.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","Seo","description","excerpt","image","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","styles","_t$styles","to","replaceSlashes","name","_createMdxContent","_components","Object","assign","h1","p","pre","code","h3","ul","li","img","_provideComponents","components","href","alt","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}