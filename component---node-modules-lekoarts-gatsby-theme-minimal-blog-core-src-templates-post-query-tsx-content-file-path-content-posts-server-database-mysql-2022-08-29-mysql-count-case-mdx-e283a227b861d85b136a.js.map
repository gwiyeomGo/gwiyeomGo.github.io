{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2022-08-29-mysql-count-case-mdx-e283a227b861d85b136a.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,MAAO,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,kHAAmH,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,kEAAmE,KAAMK,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,sCAAuC,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,yFAA0F,KAAMK,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,UAAW,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,2EAA4E,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,mFAAoF,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,KAAM,0nCAC9+B,CAKA,MAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWZ,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCXe,SAASa,EAAiBb,GACvC,OAAOU,EAAAA,cAAoBI,EAAAA,EAAed,EAAOU,EAAAA,cAAoBK,EAAqBf,GAC5F,CAHAc,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2022-08-29-mysql-count-case.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"프론트 화면에서 기부 목록을 가져온다.\\n이때\\n전체 기부 횟수\\n올해 기부 횟수\\n올해 기부영수증 횟수\\n신청이 가능한데 아직 신청 하지 않은 횟수(올해)\\n를 한번에 보고 싶다는 요청이 있었다.\"), \"\\n\", React.createElement(_components.p, null, \"기존에는 사용자의 기부 목록 조회 api 를 queryParams 만 다르게 사용하셔서 4번 호출하셨다고한다..\"), \"\\n\", React.createElement(_components.h1, null, \"어떻게 한번만 불러서 4개의 횟수 데이터를 가져올 수 있을까?\"), \"\\n\", React.createElement(_components.p, null, \"사용자의 기부 목록 조회 api 는 여러 테이블이 left,inner join 된 쿼리가 존재한다\\nif 문에서 queryParams 조건만 다르면 된다\"), \"\\n\", React.createElement(_components.h1, null, \"최초시도..\"), \"\\n\", React.createElement(_components.p, null, \"우선 service 에서 4개의 조건을 map으로 만들어서\\n4번 db 를 조회하는 코드를 만들었고\\n실행시간이 4초가 걸렸다.\"), \"\\n\", React.createElement(_components.p, null, \"이렇게 여러번 가는 것은 느리며 좋지 않은 코드라고 생각하고\\n한번에 여러경우를 알 수 있는 case 문 과 count 함수를 사용하기로 했다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT\\nCOUNT(*) as allDonationsCount,\\nCOUNT(CASE WHEN e.receipt_available+s.receipt_available = 2 and r.donation_id is null and( mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31' ))then 1 else null END) as notAppliedReceiptsCount,\\nCOUNT(CASE WHEN ( mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31')) then 1 else null END)  as thisYearDonationsCount,\\nCOUNT(CASE WHEN (r.donation_id > 0  and mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31')) then 1 else null END)  as appliedReceiptsCount\\nFROM donations\\nINNER JOIN eval_types as e ON donations.eval_type = e.type and e.deleted_at is null\\nINNER JOIN statuses as s ON donations.status = s.status\\nLEFT JOIN donors as r ON donations.id = r.donation_id and r.deleted_at is null WHERE (donations.deleted_at is null)\\nAND (donations.member_id = 1) ORDER BY donations.id DESC;\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/database/mysql/2022-08-29-mysql-count-case.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","pre","code","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}