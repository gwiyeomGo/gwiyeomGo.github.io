{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-react-2024-05-21-react-vite-mdx-9dc57f17fe0a2c4d5187.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,WAAY,aACZC,GAAI,KACJC,GAAI,KACJC,KAAM,OACNC,GAAI,KACJC,IAAK,QACJC,EAAAA,EAAAA,MAAsBb,EAAMc,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBd,EAAYG,GAAI,KAAMW,EAAAA,cAAoBd,EAAYI,EAAG,CAC5HW,KAAM,uBACL,SAAU,KAAMD,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,4NAA6N,KAAMS,EAAAA,cAAoBd,EAAYM,WAAY,KAAM,KAAMQ,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,cAAe,MAAO,KAAMS,EAAAA,cAAoBd,EAAYG,GAAI,KAAM,6BAA8B,KAAMW,EAAAA,cAAoBd,EAAYM,WAAY,KAAM,KAAMQ,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,sEAAuE,MAAO,KAAMS,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,uGAA4G,KAAMM,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,gEAAiE,KAAMM,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,sDAAuD,KAAMM,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,yEAA0E,KAAMM,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,yFAA4F,MAAO,KAAMM,EAAAA,cAAoBd,EAAYG,GAAI,KAAM,0BAA2B,KAAMW,EAAAA,cAAoBd,EAAYM,WAAY,KAAM,KAAMQ,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,oFAAqF,MAAO,KAAMS,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,+DAAgE,KAAMM,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,sHAAuH,KAAMM,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,qEAAsE,KAAMM,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,iEAAkE,KAAMM,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,iCAAkCM,EAAAA,cAAoBd,EAAYI,EAAG,CAC1vEW,KAAM,mCACL,2BAA4B,0BAA2B,MAAO,KAAMD,EAAAA,cAAoBd,EAAYM,WAAY,KAAM,KAAMQ,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,mDAAoD,MAAO,KAAMS,EAAAA,cAAoBd,EAAYK,EAAG,KAAMS,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,wDAAyD,KAAMK,EAAAA,cAAoBd,EAAYU,GAAI,KAAM,KAAMI,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,oBAAqB,MAAO,KAAMM,EAAAA,cAAoBd,EAAYW,IAAK,KAAMG,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,gWAAiW,KAAMK,EAAAA,cAAoBd,EAAYK,EAAG,KAAM,6GAA8G,KAAMS,EAAAA,cAAoBd,EAAYU,GAAI,CACtnCM,MAAO,KACN,KAAMF,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,gBAAiB,MAAO,KAAMM,EAAAA,cAAoBd,EAAYW,IAAK,KAAMG,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,mKAAsL,KAAMK,EAAAA,cAAoBd,EAAYG,GAAI,KAAM,MAAO,KAAMW,EAAAA,cAAoBd,EAAYK,EAAG,KAAMS,EAAAA,cAAoBd,EAAYI,EAAG,CACreW,KAAM,mEACL,oEACL,CAKA,MAJA,SAAoBhB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGU,EAAAA,EAAAA,MAAsBb,EAAMc,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWnB,EAAOe,EAAAA,cAAoBhB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCxBe,SAASoB,EAAiBpB,GACvC,OAAOe,EAAAA,cAAoBM,EAAAA,EAAerB,EAAOe,EAAAA,cAAoBO,EAAqBtB,GAC5F,CAHAqB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/react/2024-05-21-react-vite.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    ol: \"ol\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://vitejs.dev/\"\n  }, \"Vite\")), \"\\n\", React.createElement(_components.p, null, \"react 코드를 번들러로 Webpack 사용하게 되는데 코드의 양이 늘어날수록 속도가 상당히 느리다\\nVite를 사용해 프로젝트 코드를 빌드한다 (React의 경우 JSX 코드를 JavaScript로 빌드)\\nVite(비트)는  vue, react 등 여러 프레임워크 지원\\n다양한 플러그인 지원 -> 예를 들어, React, Vue, Preact 등 다양한 프레임워크와의 통합을 지원\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"npm i vite\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"개발 중 코드 변경 + Vite 의 동작 방식\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"(개발자:코드 수정)- (Vite:변경 감지)- (Vite:모듈 핫 리로딩(HMR))-(개발자:실시간 반영 내용 확인)\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"김지현 개발자가 자신의 개발 환경에서 React 컴포넌트를 수정합니다.  `(ex)App.js 파일에서 텍스트를 \\\"Hello, World!\\\"에서 \\\"Hello, Vite!\\\"로 변경\"), \"\\n\", React.createElement(_components.li, null, \"Vite 개발 서버는 파일 시스템을 모니터링하고 있으므로, App.js 파일의 변경 사항을 즉시 감지합니다.\"), \"\\n\", React.createElement(_components.li, null, \"Vite 는 변경된 파일(App.js)만을 빠르게 재컴파일 (직접 다시 빌드할 필요 없음)\"), \"\\n\", React.createElement(_components.li, null, \"브라우저는 Vite 개발 서버로부터 변경된 모듈을 받아 즉시 업데이트, 페이지 전체를 새로고침하지 않고, 변경된 부분만 갱신\"), \"\\n\", React.createElement(_components.li, null, \"김지현 개발자가 브라우저에서 즉시 변경된 텍스트(\\\"Hello, Vite!\\\")를 확인 (코드 변경 후 즉시 결과를 확인),개발 속도가 빨라지고 생산성 향상\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"로컬에서 Vite 로 빌드 후 실행 상황\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"(개발자:빌드 명령 실행)-(Vite:최적화된 빌드 생성)- (개발자:빌드 결과물 확인)-(개발자:로컬 서버 실행)-(개발자:브라우저에서 확인)\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"김지현 개발자는 애플리케이션을 프로덕션 환경에 배포하기 위해 빌드 명령(vite build)을 실행합니다.\"), \"\\n\", React.createElement(_components.li, null, \"Vite는 Rollup을 사용하여 애플리케이션을 번들링하고 최적화, 코드 스플리팅, 트리 셰이킹(tree shaking), 코드 압축 등의 최적화 작업이 진행되면서 성능이 최적화된 작은 번들 파일들을 생성\"), \"\\n\", React.createElement(_components.li, null, \"빌드가 완료 후 dist 폴더에 생성(이 폴더에는 배포 가능한 HTML, CSS, JavaScript 파일들이 포함)\"), \"\\n\", React.createElement(_components.li, null, \"김지현 개발자는 로컬 서버(예: serve 패키지)를 사용하여 dist 폴더를 서빙하고 결과물을 로컬에서 확인\"), \"\\n\", React.createElement(_components.li, null, \"김지현 개발자가 브라우저를 열고 로컬 서버 주소(예: \", React.createElement(_components.a, {\n    href: \"http://localhost:5000)%EB%A1%9C\"\n  }, \"http://localhost:5000)로\"), \" 접속하면, 최적화된 애플리케이션이 로드\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"react+typescript+vite 로 build 하고 vercel 로 배포해보자\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"npm create vite@latest [프로젝트 명] --template react-ts\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"vite.config.json\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import { defineConfig } from 'vite'\\nimport react from '@vitejs/plugin-react'\\n\\nexport default defineConfig({\\n  plugins: [react({ // Vite에서 React를 사용하고 Vite로 빌드한다\\n    jsxImportSource: '@emotion/react', //JSX 구문을 변환할 때 @emotion/react 라이브러리를 사용\\n    babel: {\\n      plugins: ['@emotion/babel-plugin'], // Emotion의 고급 기능들을 활성화\\n    },\\n  })]\\n})\\n\")), \"\\n\", React.createElement(_components.p, null, \"Vite와 React를 통합-> Vite가 React 프로젝트를 올바르게 처리할 수 있도록 설정\\nBabel 플러그인을 통해 플러그인을 사용해서 Emotion 라이브러리를 사용하여 스타일링\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"package.json\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"vite\\\",\\n    \\\"start2\\\": \\\"vite --host 0.0.0.0 --port 3000\\\",\\n    \\\"build\\\": \\\"tsc && vite build\\\",\\n    \\\"serve\\\": \\\"vite preview\\\"\\n  },\\n\")), \"\\n\", React.createElement(_components.h3, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://deku.posstree.com/ko/react/vite/react-typescript/start/\"\n  }, \"https://deku.posstree.com/ko/react/vite/react-typescript/start/\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/etc/gwiyeomgo.github.io/content/posts/client/react/2024-05-21-react-vite.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","a","p","blockquote","ul","li","code","ol","pre","_provideComponents","components","React","href","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}