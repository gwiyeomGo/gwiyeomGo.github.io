"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[9982],{9495:function(e,t,n){n.r(t),n.d(t,{Head:function(){return r.F},default:function(){return c}});var a=n(7294),o=n(1151);function s(e){const t=Object.assign({p:"p",h1:"h1",code:"code",a:"a",pre:"pre"},(0,o.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,"다중으로 보내는 API 그룹"),"\n",a.createElement(t.h1,null,"배경"),"\n",a.createElement(t.p,null,"어드민 회원 상세에서 이력 관련된 API 를 7개 부른다\n코드를 짧게 줄이는 방법을 찾아보니 ",a.createElement(t.code,null,"Promise.all"),"을 사용한 코드가 있엇다"),"\n",a.createElement(t.p,null,a.createElement(t.a,{href:"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time"},"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time")),"\n",a.createElement(t.pre,null,a.createElement(t.code,null,"React.useEffect(()=>{\nPromise.all([\n    fetch('https://jsonplaceholder.typicode.com/posts'),\n    fetch('https://jsonplaceholder.typicode.com/users')\n]).then(function (responses) {\n    // Get a JSON object from each of the responses\n    return Promise.all(responses.map(function (response) {\n        return response.json();\n    }));\n}).then(function (data) {\n    // Log the data to the console\n    // You would do something with both sets of data here\n    console.log(data);\n}).catch(function (error) {\n    // if there's an error, log it\n    console.log(error);\n});\n},[])\n")),"\n",a.createElement(t.p,null,"실제로는 아래 처럼 적용했다"),"\n",a.createElement(t.pre,null,a.createElement(t.code,null,'import React, { useEffect, useState } from "react";\nimport axios from "axios";\n\nconst App = () => {\n  const [data, setData] = useState({\n    test1: [],\n    test2: []\n  });\n\n  const fetchData = async () => {\n    // root/public/test.json\n    try {\n      const [test1, test2] = await Promise.all([\n        axios.get("/test1.json"),\n        axios.get("/test2.json")\n      ]);\n\n      Object.keys(test1.data).length > 0 &&\n        setData((pre) => ({\n          ...pre,\n          test1: test1.data\n        }));\n\n      Object.keys(test2.data).length > 0 &&\n        setData((pre) => ({\n          ...pre,\n          test2: test2.data\n        }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {Object.keys(data).length > 0 &&\n        data.test1.length > 0 &&\n        console.log(data.test1)}\n    </>\n  );\n};\nexport default App;\n')),"\n",a.createElement(t.p,null,a.createElement(t.a,{href:"https://codesandbox.io/s/datagetex-v621x2"},"예제")),"\n",a.createElement(t.h1,null,"참고"),"\n",a.createElement(t.p,null,a.createElement(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"),"\n",a.createElement(t.a,{href:"https://www.andreadiotallevi.com/blog/how-to-handle-multiple-set-state-calls-on-the-same-object-in-react"},"https://www.andreadiotallevi.com/blog/how-to-handle-multiple-set-state-calls-on-the-same-object-in-react"),"\n",a.createElement(t.a,{href:"https://joshua1988.github.io/web-development/javascript/js-async-await/"},"https://joshua1988.github.io/web-development/javascript/js-async-await/"),"\n",a.createElement(t.a,{href:"https://stackoverflow.com/questions/44182951/axios-chaining-multiple-api-requests"},"https://stackoverflow.com/questions/44182951/axios-chaining-multiple-api-requests"),"\n",a.createElement(t.a,{href:"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time"},"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time")))}var l=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?a.createElement(t,e,a.createElement(s,e)):s(e)},r=n(8804);function c(e){return a.createElement(r.Z,e,a.createElement(l,e))}r.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-javascript-2023-05-30-javascript-multiple-api-calls-mdx-63020a7ea5b03907219b.js.map