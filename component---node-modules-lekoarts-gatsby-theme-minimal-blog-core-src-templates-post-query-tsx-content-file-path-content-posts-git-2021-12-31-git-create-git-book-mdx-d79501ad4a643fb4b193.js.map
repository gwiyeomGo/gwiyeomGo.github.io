{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-git-2021-12-31-git-create-git-book-mdx-d79501ad4a643fb4b193.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/git/2021-12-31-git-createGitBook.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\",\n    h3: \"h3\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"gitbook 설치\"), \"\\n\", React.createElement(_components.p, null, \"1.버전 확인\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"node.js 설치\\r\\n1.gitbook init 하다가 아래와 같은 에러 발생하면\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"\\t$ gitbook init\\r\\n\\twarn: no summary file in this book\\r\\n\\tinfo: create SUMMARY/\\r\\n\\t\\r\\n\\tTypeError [ERR_INVALID_ARG_TYPE]: The \\\"data\\\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received an instance of Promise\\r\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"node 버전을 바꿔야 한다.\\t(이때 nvm을 사용해서 변환해주면 쉽게 변경할 수 있다)\\r\\n\", React.createElement(_components.code, null, \"Switch back from latest node version to 12.18.1 LTS.\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://stackoom.com/en/question/4AD2n\"\n  }, \"참조0\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://ahn3330.tistory.com/45\"\n  }, \"nvm 설치\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"gitbook \", React.createElement(_components.code, null, \"npm install gitbook-cli -g\"), \" 설치\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"TypeError: Cannot read property 'pipesCount' of undefined\"), \"에러를 만나면\\r\\n\", React.createElement(_components.code, null, \"npm install gitbook-cli@2.1.2 --global\"), \"로 다시 설치\\r\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/GitbookIO/gitbook-cli/issues/113\"\n  }, \"참조1\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"2.\", React.createElement(_components.code, null, \"TypeError: cb.apply is not a function\"), \"과 같은 에러 발생한다면\\r\\n\", React.createElement(_components.code, null, \"npm root -g\"), \"로 node_modules 위치를 찾고 이동( your global npm installation path)\"), \"\\n\", React.createElement(_components.p, null, \"그후 다시 \", React.createElement(_components.code, null, \"cd gitbook-cli/node_modules/npm/node_modules/\"), \" 이동\\r\\n이동 후 graceful-fs 를 최신버전으로 설치\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"npm install graceful-fs@latest --save\"), \"설치해도 에러난다면 \", React.createElement(_components.code, null, \" graceful-fs@4.2.0\"), \" 설치\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/64211386/gitbook-cli-install-error-typeerror-cb-apply-is-not-a-function-inside-graceful\"\n  }, \"참조2\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://jojoldu.tistory.com/598\"\n  }, \"참조2-1\")), \"\\n\", React.createElement(_components.h3, null, \"0.gitbook 파일 생성 후 github repository 생성하기\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"cd c:/gitBooks\\r\\ngitbook init blog(=생성할 gitbook folder name )\\r\\ncd blog\\n\")), \"\\n\", React.createElement(_components.h3, null, \"1.최소 설정\"), \"\\n\", React.createElement(_components.p, null, \"git init\"), \"\\n\", React.createElement(_components.h1, null, \"2.master로 체크아웃해서 필요한 코드 추가\"), \"\\n\", React.createElement(_components.h1, null, \"master branch에 publish file 추가하기\"), \"\\n\", React.createElement(_components.h1, null, \"README/ , SUMMARY/\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"\\r\\ngit add .\\r\\ngit commit -m \\\"first commit\\\"\\r\\ngit branch -M master\\r\\n\\r\\n\\r\\ngit remote add origin https://{github id}:{인증키}/{github id}/developmentRecords.git\\r\\n\\r\\ngit push -u origin master\\r\\n\\r\\ngit checkout -b gh-pages\\r\\n\\r\\ngit checkout master\\n\")), \"\\n\", React.createElement(_components.h3, null, \"3.gh-pages branch를 git repository에 추가한다.\"), \"\\n\", React.createElement(_components.h3, null, \"4 publish 파일 실행\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://beomi.github.io/2017/11/20/Deploy-Gitbook-to-Github-Pages/\"\n  }, \"publish 파일 출처\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https:/.psangwoo.com/coding/2018/01/31/gitbook-on-windows.html\"\n  }, \"위 출처에서 말하는 docs로 gitbook 만드는 방법\")), \"\\n\", React.createElement(_components.p, null, \"아래 파일은 gh-pages로 gitbook 만드는 shell 명령이다.\\r\\n해당파일을 매번 master에서 실행시켜 변경된 내용이 gh-pages에 업데이트 할 수 있다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"# gitbook 의존 파일을 설치하고 gitbook 빌드를 돌린다.\\r\\ngitbook install && gitbook build\\r\\n\\r\\n# github pages가 바라보는 gh-pages 브랜치를 만든다.\\r\\ngit checkout gh-pages\\r\\n\\r\\n# 최신 gh-pages 브랜치 정보를 가져와 rebase를 진행한다.\\r\\ngit pull origin gh-pages --rebase\\r\\n\\r\\n# gitbook build로 생긴 _book폴더 아래 모든 정보를 현재 위치로 가져온다.\\r\\ncp -R _book/* .\\r\\n\\r\\n# node_modules폴더와 _book폴더를 지워준다.\\r\\ngit clean -fx node_modules\\r\\ngit clean -fx _book\\r\\n\\r\\n# NOQA\\r\\ngit add .\\r\\n\\r\\n# 커밋커밋!\\r\\ngit commit -a -m \\\"Update docs\\\"\\r\\n\\r\\n# gh-pages 브랜치에 PUSH!\\r\\ngit push origin gh-pages\\r\\n\\r\\n# 다시 master 브랜치로 돌아온다.\\r\\ngit checkout master\\r\\n\\r\\n\\n\")), \"\\n\", React.createElement(_components.h3, null, \"20220324\"), \"\\n\", React.createElement(_components.p, null, \"sitemap 추가\\r\\n\", React.createElement(_components.a, {\n    href: \"https://www.npmjs.com/package/gitbook-plugin-sitemap-general\"\n  }, \"https://www.npmjs.com/package/gitbook-plugin-sitemap-general\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"npm i gitbook-plugin-sitemap-general\")), \"\\n\", React.createElement(_components.h3, null, \"20220325\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://simonjisu.github.io/programming/2018/12/04/buildgithubpages.html\"\n  }, \"https://simonjisu.github.io/programming/2018/12/04/buildgithubpages.html\"), \"\\r\\n포스팅 덕분에.. docs로 편하게 배포할 수 있게 되었다.\\r\\n폴더 관리 주의\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/react/gwiyeomgo.github.io/content/posts/git/2021-12-31-git-createGitBook.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ol","li","pre","code","a","h3","h1","_provideComponents","components","React","className","href","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}