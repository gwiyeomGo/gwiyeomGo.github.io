{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-javascript-2022-04-19-javascript-number-validator-mdx-90292c07f38254b04a68.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,IACHC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,KAAMS,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,wBAAyB,KAAMQ,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,0BAA2B,MAAO,KAAMQ,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,CAC3UO,UAAW,uBACV,sVAA+V,KAAMD,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,CACvbO,UAAW,uBACV,+JAAkK,KAAMD,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,sCAAuC,KAAMK,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,sFAAuF,KAAMK,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,yHAA0H,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,2EAA4E,KAAMK,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,CACxyBO,UAAW,uBACV,4FAA6F,KAAMD,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,sFAAuF,KAAMK,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,CAC3TO,UAAW,uBACV,gGAAiG,KAAMD,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,OAAQK,EAAAA,cAAoBZ,EAAYQ,EAAG,CAC5LM,KAAM,4FACL,mDAAoD,KAAMF,EAAAA,cAAoBZ,EAAYS,GAAI,KAAMG,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,+BAAgC,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,gDAAiD,KAAMK,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,sGAClX,CAKA,MAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWjB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCxBe,SAASkB,EAAiBlB,GACvC,OAAOa,EAAAA,cAAoBM,EAAAA,EAAenB,EAAOa,EAAAA,cAAoBO,EAAqBpB,GAC5F,CAHAmB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/javascript/2022-04-19-javascript-numberValidator.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"입력창에 회원번호,기부번호를 입력한다\"), \"\\n\", React.createElement(_components.li, null, \"직접 키보드로 입력하면서 문자가 포함된다\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"if (searchText.length > 0) {\\n  switch (searchType) {\\n    case \\\"memberId\\\":\\n      if(isNumeric(searchText) === false){\\n        return message.error(\\\"회원번호가 올바르지 않습니다.\\\");\\n      }\\n      break;\\n    case \\\"id\\\":\\n      if(isNumeric(searchText) === false){\\n        return message.error(\\\"기부번호가 올바르지 않습니다.\\\");\\n      }\\n      break;\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"const NumberValidator = (str) => {\\n    if (typeof str !== \\\"string\\\") return false\\n    return !isNaN(str) && !isNaN(parseFloat(str)) //true && true\\n  }\\n\")), \"\\n\", React.createElement(_components.p, null, \"위 예제처럼 사용하면 str 에 숫자만 있는지 확인이 가능하다\"), \"\\n\", React.createElement(_components.p, null, \"isNaN 함수는 숫자를 넣으면 false 를 반환한다.\\nisNaN 함수는 string 과 숫자가 함께있는 문자를 입력하면 true 값을 반환한다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"isNaN(123)         // false\\nisNaN('123')       // false\\nisNaN('test')      // true\\nisNaN('123test')   // true\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"사실 위 예제에서 !isNaN(str) 만 사용해도 확인이 가능하지만\\n!isNaN(parseFloat(str))을 쓴 이유는?\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"isNaN('')          // false\\nisNaN(' ')         // false\\nisNaN(false)       // false\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 경우도 false 를 반환하기 때문에 ...\\n한번 더 확인이 필요하다\\nex) 스페이스를 클릭하고 검색하면 검색이 된다... 공백을 막기 위해\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"console.log(!isNaN(parseFloat(' '))) //false\\nconsole.log(!isNaN(' '))             //ture\\n\")), \"\\n\", React.createElement(_components.p, null, \"출처\\n\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/175739/how-can-i-check-if-a-string-is-a-valid-number\"\n  }, \"How can I check if a string is a valid number?\")), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.code, null, \"빈문자,null,undefined,0,false\")), \"\\n\", React.createElement(_components.p, null, \"일때 제대로 어떤값이 알지 못하면 에러를 발생시킬 수 있다.\\n자세하게 알아보자\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const test = null //빈문자(\\\"\\\"),null,undefined,0,false\\nif(!test){\\n  console.log(\\\"출력\\\")//\\\"여기 들어옴\\n}\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/client/javascript/2022-04-19-javascript-numberValidator.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","ol","li","pre","code","p","a","h3","_provideComponents","components","React","className","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}