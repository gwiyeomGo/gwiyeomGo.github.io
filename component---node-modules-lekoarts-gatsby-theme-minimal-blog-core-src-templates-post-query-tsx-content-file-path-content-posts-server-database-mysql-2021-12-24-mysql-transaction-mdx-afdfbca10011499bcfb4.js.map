{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2021-12-24-mysql-transaction-mdx-afdfbca10011499bcfb4.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,iGAAkG,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,oCAAqC,KAAMQ,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,WAAY,KAAMS,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,CACxdO,UAAW,gBACV,wKAAyK,KAAMD,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,aAAc,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,mDAAoD,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,qBAAsB,YAAa,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,oDAAqD,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,oBAAqBQ,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,UAAW,iBAAkB,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,uBAAwBQ,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,qBAAsB,YAAa,KAAMM,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,gBAAiB,KAAMK,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,kBAAmB,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,4CAA6C,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,8HAA+H,KAAMQ,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,KAAMI,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,KAAMG,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,yKAA0K,MAAO,KAAMQ,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,KAAMG,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,mGAAoG,MAAO,MAC3uD,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWhB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UChBe,SAASiB,EAAiBjB,GACvC,OAAOa,EAAAA,cAAoBK,EAAAA,EAAelB,EAAOa,EAAAA,cAAoBM,EAAqBnB,GAC5F,CAHAkB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2021-12-24-mysql-transaction.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"지금 회사에서는 mysql 을 사용한다.\\n개발하는 과정에서 다같이 사용하고 있는 데이터를 수정해야 할 때\\n잘못된 데이터로 변경한다면 이전 데이터로 되돌릴 수 없다.\"), \"\\n\", React.createElement(_components.p, null, \"그래서 트랜잭션 도구를 사용해서 이전으로 되돌릴 수 있다.\"), \"\\n\", React.createElement(_components.h3, null, \"트랜잭션 도구\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"START TRANSACTION;\\n\\n-- COMMIT, ROLLBACK이 나올 때까지 실행되는 모든 SQL 추적\\n\\nCOMMIT;\\n\\n-- 모든 코드를 실행(문제가 없을 경우에)\\n\\nROLLBACK;\\n\\n-- START TRANSACTION 실행 전 상태로 되돌림(문제 생기면)\\n\")), \"\\n\", React.createElement(_components.h3, null, \"어떻게 사용하지?\"), \"\\n\", React.createElement(_components.p, null, \"먼저 데이터를 변경하는 이슈가 생긴다면\\nsql 를 만들고 바로 실행시키는 것이 아닌\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"START TRANSACTION\"), \" 을 입력한다.\"), \"\\n\", React.createElement(_components.p, null, \"그후 작성한 sql 을 실행시키고\\n제대로 데이터를 변경했는지 검색한다 (select)\"), \"\\n\", React.createElement(_components.p, null, \"확인했을때 제대로 변경되었다면 \", React.createElement(_components.code, null, \"COMMIT\"), \" 을 하고 작업을 마치고\"), \"\\n\", React.createElement(_components.p, null, \"만약 다시 이전으로 되돌려야 한다면 \", React.createElement(_components.code, null, \"START TRANSACTION\"), \" 을 실행한다.\"), \"\\n\", React.createElement(_components.h1, null, \"트랜잭션 관련 글 기록\"), \"\\n\", React.createElement(_components.p, null, \"MySQL의 스토리지 엔진\"), \"\\n\", React.createElement(_components.p, null, \"MyISAM\\t트랜잭션을 지원하지 않는다\\nInnoDB  트랜잭션을 지원\"), \"\\n\", React.createElement(_components.p, null, \"트랜잭션 : 하나의 논리적인 작업 셋에 하나의 쿼리가 있든 두 개 잉상의 쿼리가 있든 관계없이 논리적인\\n작업 셋 자체가 100 % 적용되거나 (commit 을 실행했을 때) 아무것도 적용되지 않아야함을 보장해 주는 것\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"메일 전송이나 ftp 파일 전송 작업 또는 네트워크를 통해 원격 서버와 통신하는 등과 같은 작업은\\n어떻게 해서든 DBMS 의 트랜잭션 내에서 제거하는 것이 좋다.\\n프로그램이 실행되는 동안 메일 서버와 통신할 수 없는 상황이 발생한다면 웹 서버뿐 아니라 DBMS 서버까지 위험해지는 상황이 발생\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"네트워크 작업이 있는 경우에는 반드시 트랜잭션에서 배제해야 한다\\n이런 실수로 인해 dbms 서버가 높은 부하 상태로 빠지거나 위험한 상태에 빠지는 경우가 빈번히 발생한다\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/database/mysql/2021-12-24-mysql-transaction.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","pre","code","h1","ul","li","_provideComponents","components","React","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}