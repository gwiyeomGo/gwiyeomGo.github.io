{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2022-08-29-mysql-count-case-mdx-148bb0aee2922f7971b8.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2022-08-29-mysql-count-case.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"2022-08-29\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"프론트 화면에서 기부 목록을 가져온다.\\n이때\\n전체 기부 횟수\\n올해 기부 횟수\\n올해 기부영수증 횟수\\n신청이 가능한데 아직 신청 하지 않은 횟수(올해)\\n를 한번에 보고 싶다는 요청이 있었다.\"), \"\\n\", React.createElement(_components.p, null, \"기존에는 사용자의 기부 목록 조회 api 를 queryParams 만 다르게 사용하셔서 4번 호출하셨다고한다..\"), \"\\n\", React.createElement(_components.h1, null, \"어떻게 한번만 불러서 4개의 횟수 데이터를 가져올 수 있을까?\"), \"\\n\", React.createElement(_components.p, null, \"사용자의 기부 목록 조회 api 는 여러 테이블이 left,inner join 된 쿼리가 존재한다\\nif 문에서 queryParams 조건만 다르면 된다\"), \"\\n\", React.createElement(_components.h1, null, \"최초시도..\"), \"\\n\", React.createElement(_components.p, null, \"우선 service 에서 4개의 조건을 map으로 만들어서\\n4번 db 를 조회하는 코드를 만들었고\\n실행시간이 4초가 걸렸다.\"), \"\\n\", React.createElement(_components.p, null, \"이렇게 여러번 가는 것은 느리며 좋지 않은 코드라고 생각하고\\n한번에 여러경우를 알 수 있는 case 문 과 count 함수를 사용하기로 했다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT\\nCOUNT(*) as allDonationsCount,\\nCOUNT(CASE WHEN e.receipt_available+s.receipt_available = 2 and r.donation_id is null and( mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31' ))then 1 else null END) as notAppliedReceiptsCount,\\nCOUNT(CASE WHEN ( mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31')) then 1 else null END)  as thisYearDonationsCount,\\nCOUNT(CASE WHEN (r.donation_id > 0  and mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31')) then 1 else null END)  as appliedReceiptsCount\\nFROM donations\\nINNER JOIN eval_types as e ON donations.eval_type = e.type and e.deleted_at is null\\nINNER JOIN statuses as s ON donations.status = s.status\\nLEFT JOIN donors as r ON donations.id = r.donation_id and r.deleted_at is null WHERE (donations.deleted_at is null)\\nAND (donations.member_id = 1) ORDER BY donations.id DESC;\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"2023-09-14\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"예약발송 기능이 기존에 있었는데 즉시발송 기능이 추가되었다\\n각 매장마다 월 5회로 예약건수를 제한했었다\\n기능 추가로 즉시발송 건수와 예약건수 합계가 5회로 제한되도록 결정했고\"), \"\\n\", React.createElement(_components.p, null, \"하나의 테이블에서 특정 매장에 월 발송건,예약건을 조회하는 방법을 찾아야햇다\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"발송타입이 A인 경우와 예약일이 2023년 7월인 경우를 카운트하고,\\n발송타입이 B인 경우와 발송일이 2023년 7월인 경우를 카운트하여 발송건수와 예약건수_7월을 계산\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT\\n    SUM(CASE WHEN scheduled_type = 'A'  THEN 1 ELSE 0 END) AS 즉시발송건, --(4) scheduled_type 이 즉시발송건인 경우 횟수 합계\\n    SUM(CASE WHEN scheduled_type = 'B'  THEN 1 ELSE 0 END) AS 예약건  --(4) scheduled_type 이 예약건인 경우 횟수 합계\\nFROM 테이블이름\\nWHERE\\ncode ='123'  -- (1)특정 매장에\\nAND ((scheduled_type = 'B' AND scheduled_date LIKE '202309%') OR  -- (2)2023년 9월 예약내역\\n      (scheduled_type = 'A' AND sent_date LIKE '2023-09%')); -- 2023년 (3)9월 즉시발송내역 중에서\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"2023-09-22\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"마이그레이션을 위해서 기존 테이블에 조건에 따라서 상태 컬럼을 추가해야 했다\\n임의로 select 문으로 가상의 컬럼(status 컬럼)을 생성해서 값을 조회햇다.\\n상태: 발송없음,발송대기,발송불가,발송실패,발송완료 5가지\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"조건별 CASE 문\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"(CASE\\n    WHEN scheduled_type = 'none' THEN 'NoDispatch'\\n    WHEN (scheduled_type IN ('scheduled', 'immediately') AND sent = 0) THEN\\n        CASE\\n            WHEN scheduled_date <> '' AND STR_TO_DATE(scheduled_date, '%Y%m%d') >= CURDATE() and closed = 0 THEN 'PendingDispatch'\\n            WHEN scheduled_date <> '' AND STR_TO_DATE(scheduled_date, '%Y%m%d') < CURDATE() THEN 'DispatchFailed'\\n            ELSE 'UnableToDispatch'\\n        END\\n    WHEN sent = 1 THEN 'Dispatched'\\nEND)\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \" * scheduled_date <> '' 조건을 사용하여 scheduled_date가 비어있지 않은 경우만 조회되도록\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"해당 조건으로 status 포함된 값 조회\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"select *, (조건별 CASE 문) as status from 테이블;\\n\")), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"id\"), React.createElement(_components.th, null, \"status\"), React.createElement(_components.th, null, \"...\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"1\"), React.createElement(_components.td, null, \"NoDispatch\"), React.createElement(_components.td, null, \"...\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"2\"), React.createElement(_components.td, null, \"Dispatched\"), React.createElement(_components.td, null, \"...\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"3\"), React.createElement(_components.td, null, \"Dispatched\"), React.createElement(_components.td, null, \"...\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"4\"), React.createElement(_components.td, null, \"PendingDispatch\"), React.createElement(_components.td, null, \"...\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"5\"), React.createElement(_components.td, null, \"Dispatched\"), React.createElement(_components.td, null, \"...\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"6\"), React.createElement(_components.td, null, \"PendingDispatch\"), React.createElement(_components.td, null, \"...\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"7\"), React.createElement(_components.td, null, \"Dispatched\"), React.createElement(_components.td, null, \"...\")))), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"테이블에 업데이트를\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"UPDATE store_news SET sent_status = ( 조건별 CASE 문)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"* tip\\n\\nError Code: 1175. You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column.\\nTo disable safe mode, toggle the option in Preferences -> SQL Editor and reconnect.\\t0.0064 sec\\n\")), \"\\n\", React.createElement(_components.p, null, \"-> 해당 에러 발생시 마지막줄에 where id > 0 과 같은 조건을 추가해야 한다\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"각 조건별 갯수가 궁금할때 (상태별 : 횟수)\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT status, COUNT(*) as record_count\\nFROM (\\nSELECT *,\\n(조건별 CASE 문) as status\\nFROM 테이블\\n) AS subquery\\nGROUP BY status;\\n\")), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"status\"), React.createElement(_components.th, null, \"record_count\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"NoDispatch\"), React.createElement(_components.td, null, \"1\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"PendingDispatch\"), React.createElement(_components.td, null, \"2\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Dispatched\"), React.createElement(_components.td, null, \"4\")))), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"20231206\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT\\n\\td.name as 매장,\\n\\tCOUNT(*) as 접수건,\\n\\tSUM(CASE WHEN d.status in('A','B','C','D')  THEN 1 ELSE 0 END) AS 기부건\\nFROM donations as d\\ninner join\\n\\tstandbys as s on  d.id = s.donation_id\\nwhere d.code in (1,2,3,4,5,6,7)\\n\\tand (mid(JSON_EXTRACT(d.created, '$.datetime'), 2, 10) >= '2023-11-01')\\n\\tand (mid(JSON_EXTRACT(d.created, '$.datetime'), 2, 10) <= '2023-11-30')\\ngroup by d.code\\n\")), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"매장\"), React.createElement(_components.th, null, \"접수건\"), React.createElement(_components.th, null, \"기부건\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"1매장\"), React.createElement(_components.td, null, \"100\"), React.createElement(_components.td, null, \"80\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"2매장\"), React.createElement(_components.td, null, \"230\"), React.createElement(_components.td, null, \"200\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"3매장\"), React.createElement(_components.td, null, \"130\"), React.createElement(_components.td, null, \"110\")))), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"20240502\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://dba.stackexchange.com/questions/127564/how-to-use-count-with-multiple-columns\"\n  }, \"How to use COUNT with multiple columns\")), \"\\n\", React.createElement(_components.h1, null, \"quantity 수량수 와  a_quantity 수량수 를 한눈에 볼 수 있다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT count(*),count(quantity),count(a_quantity) FROM A where  status = 'AAA' ;\\n\")), \"\\n\", React.createElement(_components.h1, null, \"두 값이 일치하는지 결과를 반환하는 쿼리는?\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT\\n    CASE\\n        WHEN count(quantity) = count(a_quantity) THEN 'O'\\n        ELSE 'X'\\n    END AS 결과\\nFROM A\\nWHERE status = 'AAA';\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/database/mysql/2022-08-29-mysql-count-case.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","blockquote","p","h1","pre","code","ul","li","table","thead","tr","th","tbody","td","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}