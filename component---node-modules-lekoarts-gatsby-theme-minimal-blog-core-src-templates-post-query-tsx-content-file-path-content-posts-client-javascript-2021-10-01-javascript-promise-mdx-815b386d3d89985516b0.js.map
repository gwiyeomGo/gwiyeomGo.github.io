{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-javascript-2021-10-01-javascript-promise-mdx-815b386d3d89985516b0.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/client/javascript/2021-10-01-javascript-promise.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"현재 업무에서 나도모르는 사이에 promise를 쓰고 있었다.\\nAPI를 통해 데이터를 받은 후에 대한 결과를 받기 위해서 사용했다.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\"\n  }, \"Promise\")), \"\\n\", React.createElement(_components.p, null, \"The Promise object represents the eventual completion (or failure) of an asynchronous operation and its resulting value\\nPromise 객체는 비동기 작업이 맞이할 미래의 완료 또는 실패와 그 결과 값을 나타냅니다\"), \"\\n\", React.createElement(_components.h1, null, \"Promise 생성자 함수는 비동기 작업을 수행할 콜백 함수를 인자로 전달\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const test = new Promise((resolve, reject) => {\\n  setTimeout(() => {\\n    resolve('Success');\\n  }, 1000);\\n});\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Promise 상태\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"상태\"), React.createElement(_components.th, null, \"의미\"), React.createElement(_components.th, null, \"구현\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"pending\"), React.createElement(_components.td, null, \"비동기 처리가 아직 수행되지 않은 상태\"), React.createElement(_components.td, null, \"resolve 또는 reject 함수가 아직 호출되지 않은 상태\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"fulfilled\"), React.createElement(_components.td, null, \"비동기 처리가 수행된 상태 (성공)\"), React.createElement(_components.td, null, \"resolve 함수가 호출된 상태\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"rejected\"), React.createElement(_components.td, null, \"비동기 처리가 수행된 상태 (실패)\"), React.createElement(_components.td, null, \"reject 함수가 호출된 상태\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"settled\"), React.createElement(_components.td, null, \"비동기 처리가 수행된 상태 (성공 또는 실패)\"), React.createElement(_components.td, null, \"resolve 또는 reject 함수가 호출된 상태\")))), \"\\n\", React.createElement(_components.h1, null, \"Promise 4가지 정적 메소드\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"1. 성공: `new Promise((resolve,reject) => { resolve('Success') })`\\n\\nex) `Promise.resolve(123).then((value)=>{console.lgo(value}) //123`\\n\\n2. 실패: `new Promise((resolve,reject) => { reject(new Error()) })`\\n\\nex) `Promise.reject()`\\n\\n\\n프라미스를 사용하면 비교적 안전하고 관리하기 쉬운 코드를 작성할 수 있습니다.\\n프라미스는 콜백을 예측 가능한 패턴으로 사용할 수 있게 하며,프라미스 없이 콜백만 사용했을 때 나타날 수 있는 엉뚱한 현상이나 찾기 힘든 버그를 상당수 해결합니다.\\n\\n프라미스는 성공 또는 실패 둘 중 하나만 발생\\n프라미스는 객체=> 전달 가능\\n프라미스는 비동기 코드를 단순화하고 콜백이 두 번 이상 실행되는 문제를 방지\\n단 resolve,reject를 꼭 호출해야됨\\n프로미스가 결정되지 않은 문제를 자동으로 해결하지는 못함\\n\\nnew Promise(); // 대기 상태\\n\\nnew Promise((resoleve,reject)=>{\\n\\tresolve(); \\n\\t//성공 상태\\n\\treject(); \\n\\t//실패 상태\\n})\\n\\n\")), \"\\n\", React.createElement(_components.h3, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve\"\n  }, \"Promise.resolve()\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://learnjs.vlpt.us/async/02-async-await.html\"\n  }, \"https://learnjs.vlpt.us/async/02-async-await.html\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://han41858.tistory.com/11\"\n  }, \"https://han41858.tistory.com/11\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://programmingsummaries.tistory.com/325\"\n  }, \"https://programmingsummaries.tistory.com/325\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\"\n  }, \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/client/javascript/2021-10-01-javascript-promise.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","pre","code","h3","table","thead","tr","th","tbody","td","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}