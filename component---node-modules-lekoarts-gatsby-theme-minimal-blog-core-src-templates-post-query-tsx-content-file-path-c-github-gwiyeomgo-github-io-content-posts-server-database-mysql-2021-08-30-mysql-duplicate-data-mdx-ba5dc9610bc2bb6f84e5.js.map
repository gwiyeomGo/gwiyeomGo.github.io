{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-server-database-mysql-2021-08-30-mysql-duplicate-data-mdx-ba5dc9610bc2bb6f84e5.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,MAAO,QACPC,MAAO,QACPC,GAAI,KACJC,GAAI,KACJC,MAAO,QACPC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,IACHC,IAAK,QACJC,EAAAA,EAAAA,MAAsBlB,EAAMmB,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBnB,EAAYG,GAAI,KAAM,MAAO,KAAMgB,EAAAA,cAAoBnB,EAAYI,EAAG,KAAM,6HAA8H,KAAMe,EAAAA,cAAoBnB,EAAYI,EAAG,KAAM,0EAA2E,KAAMe,EAAAA,cAAoBnB,EAAYG,GAAI,KAAM,gCAAiC,KAAMgB,EAAAA,cAAoBnB,EAAYK,GAAI,KAAM,KAAMc,EAAAA,cAAoBnB,EAAYM,GAAI,KAAM,iCAAkC,MAAO,KAAMa,EAAAA,cAAoBnB,EAAYO,MAAO,KAAMY,EAAAA,cAAoBnB,EAAYQ,MAAO,KAAMW,EAAAA,cAAoBnB,EAAYS,GAAI,KAAMU,EAAAA,cAAoBnB,EAAYU,GAAI,KAAM,MAAOS,EAAAA,cAAoBnB,EAAYU,GAAI,KAAM,oBAAqBS,EAAAA,cAAoBnB,EAAYU,GAAI,KAAM,QAASS,EAAAA,cAAoBnB,EAAYU,GAAI,KAAM,OAAQS,EAAAA,cAAoBnB,EAAYU,GAAI,KAAM,iBAAkBS,EAAAA,cAAoBnB,EAAYW,MAAO,KAAMQ,EAAAA,cAAoBnB,EAAYS,GAAI,KAAMU,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,KAAMO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,UAAWO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,KAAMO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,OAAQO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,OAAQO,EAAAA,cAAoBnB,EAAYS,GAAI,KAAMU,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,KAAMO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,UAAWO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,KAAMO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,OAAQO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,OAAQO,EAAAA,cAAoBnB,EAAYS,GAAI,KAAMU,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,KAAMO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,UAAWO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,KAAMO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,OAAQO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,OAAQO,EAAAA,cAAoBnB,EAAYS,GAAI,KAAMU,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,KAAMO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,UAAWO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,KAAMO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,OAAQO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,OAAQO,EAAAA,cAAoBnB,EAAYS,GAAI,KAAMU,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,KAAMO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,UAAWO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,KAAMO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,OAAQO,EAAAA,cAAoBnB,EAAYY,GAAI,KAAM,SAAU,KAAMO,EAAAA,cAAoBnB,EAAYG,GAAI,KAAM,kBAAmB,KAAMgB,EAAAA,cAAoBnB,EAAYG,GAAI,KAAM,6BAA8B,KAAMgB,EAAAA,cAAoBnB,EAAYa,IAAK,KAAMM,EAAAA,cAAoBnB,EAAYc,KAAM,CAClsFM,UAAW,gBACV,iFAAkF,KAAMD,EAAAA,cAAoBnB,EAAYI,EAAG,KAAM,iDAAkDe,EAAAA,cAAoBnB,EAAYe,EAAG,CACvNM,KAAM,8EACL,OAAQ,KAAMF,EAAAA,cAAoBnB,EAAYG,GAAI,KAAM,4BAA6B,KAAMgB,EAAAA,cAAoBnB,EAAYa,IAAK,KAAMM,EAAAA,cAAoBnB,EAAYc,KAAM,CAC7KM,UAAW,gBACV,mLAAoL,KAAMD,EAAAA,cAAoBnB,EAAYG,GAAI,KAAM,iCAAkC,KAAMgB,EAAAA,cAAoBnB,EAAYa,IAAK,KAAMM,EAAAA,cAAoBnB,EAAYc,KAAM,CAC9VM,UAAW,gBACV,o+BAAq+B,KAAMD,EAAAA,cAAoBnB,EAAYG,GAAI,KAAM,4CAA6C,KAAMgB,EAAAA,cAAoBnB,EAAYgB,IAAK,CAC9mCM,IAAK,0BACLC,IAAK,cACH,KAAMJ,EAAAA,cAAoBnB,EAAYG,GAAI,KAAM,MAAO,KAAMgB,EAAAA,cAAoBnB,EAAYI,EAAG,KAAMe,EAAAA,cAAoBnB,EAAYe,EAAG,CAC3IM,KAAM,wHACL,qEACL,CAKA,MAJA,SAAoBtB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOyB,QAASC,GAAaxB,OAAOC,OAAO,CAAC,GAAGe,EAAAA,EAAAA,MAAsBlB,EAAMmB,YAC3E,OAAOO,EAAYN,EAAAA,cAAoBM,EAAW1B,EAAOoB,EAAAA,cAAoBrB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UClCe,SAAS2B,EAAiB3B,GACvC,OAAOoB,EAAAA,cAAoBQ,EAAAA,EAAe5B,EAAOoB,EAAAA,cAAoBS,EAAqB7B,GAC5F,CAHA4B,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2021-08-30-mysql-duplicate-data.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"실제 기부데이터는 1개이고, 기부목록에는 2개로 보이는 문제가 발생했다.\\r\\n기부 테이블과 기부 영수증은 left 조인을 해서 데이터를 조회합니다.\\r\\n문제는 기부영수증 데이터가 2개여서 목록에도 2개로 보입니다.\"), \"\\n\", React.createElement(_components.p, null, \"기부영수증 데이터를 삭제하고 , 테이블에 1개만 들어가도록 제약을 설정하기로 했고\\r\\n수정작업을 위해 데이터를 조회했습니다.\"), \"\\n\", React.createElement(_components.h3, null, \"donation_receipts table 을 보니\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"id 4,6번은 같은 donation_id가 존재한다\"), \"\\n\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"id\"), React.createElement(_components.th, null, \"nationality_type\"), React.createElement(_components.th, null, \"name\"), React.createElement(_components.th, null, \"...\"), React.createElement(_components.th, null, \"donation_id\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"1\"), React.createElement(_components.td, null, \"NATIVE\"), React.createElement(_components.td, null, \"A\"), React.createElement(_components.td, null, \"...\"), React.createElement(_components.td, null, \"17\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"2\"), React.createElement(_components.td, null, \"NATIVE\"), React.createElement(_components.td, null, \"B\"), React.createElement(_components.td, null, \"...\"), React.createElement(_components.td, null, \"16\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"3\"), React.createElement(_components.td, null, \"NATIVE\"), React.createElement(_components.td, null, \"C\"), React.createElement(_components.td, null, \"...\"), React.createElement(_components.td, null, \"14\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"4\"), React.createElement(_components.td, null, \"NATIVE\"), React.createElement(_components.td, null, \"D\"), React.createElement(_components.td, null, \"...\"), React.createElement(_components.td, null, \"22\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"5\"), React.createElement(_components.td, null, \"NATIVE\"), React.createElement(_components.td, null, \"D\"), React.createElement(_components.td, null, \"...\"), React.createElement(_components.td, null, \"22\")))), \"\\n\", React.createElement(_components.h3, null, \"(1) 중복된 데이터 찾기\"), \"\\n\", React.createElement(_components.h3, null, \"중복된 데이터가 존재하는 기부건 수 확인 쿼리\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"SELECT * FROM donation_receipts  GROUP BY donation_id HAVING count(*) > 1;\\n\")), \"\\n\", React.createElement(_components.p, null, \"*GROUP BY 절 사용하기, HAVING절 안에 COUNT 함수 사용하기\\r\\n\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/16697215/count-number-of-unique-values\"\n  }, \"참조\")), \"\\n\", React.createElement(_components.h3, null, \"중복된 기부번호를 갖은 기부영수증 조회 쿼리\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"select * from donation_receipts\\r\\nwhere donation_id in (\\r\\n    SELECT donation_id FROM donation_receipts  GROUP BY donation_id HAVING count(*) > 1 -- 중복된 기부번호 22\\r\\n)\\r\\n\\n\")), \"\\n\", React.createElement(_components.h3, null, \"(2) 기부영수증 데이터를 삭제 - 데이터 정제 작업\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"START TRANSACTION;\\r\\n-- 아래 쿼리로 기부영수증 목록의 donation_id 가 중복인 경우 id 값이 작은 경우를 삭제하기로함\\r\\nDELETE\\r\\n-- select *\\r\\nfrom donation_receipts\\r\\n    -- 또 서브쿼라를 사용하는 이유는\\r\\n    -- Error Code: 1093. You can't specify target table 'donation_receipts' for update in FROM clause\\t0.000 sec 발생했었음\\r\\n    -- MySQL에서 UPDATE & DELETE 를 할 때 자기 테이블의 데이터를 바로 사용하지 못하기 때문에 서브쿼리를 하나 더 사용한다.\\r\\nwhere id in (\\r\\n    select k.id from (\\r\\n        select x.id\\r\\n        from(select * from donation_receipts where donation_id in ( SELECT donation_id FROM donation_receipts  GROUP BY donation_id HAVING count(*) > 1 )) x\\r\\n        --중복된 기부번호를 갖은 기부영수증 id 목록에서\\r\\n        where x.id != (select max(id) from donation_receipts y where y.donation_id=x.donation_id)) k\\r\\n        -- id 값이 max 가 아닌 경우의 기부영수증 id\\r\\n);\\r\\n\\r\\n-- 제대로 삭제되었느지 확인\\r\\nselect *\\r\\nfrom donation_receipts\\r\\nwhere donation_id in (SELECT donation_id FROM donation_receipts GROUP BY donation_id HAVING count(*) > 1);\\r\\n\\r\\ncommit;\\r\\n-- rollback;\\n\")), \"\\n\", React.createElement(_components.h3, null, \"(3) 기부영수증 테이블의 donation_id 컬럼에 unique 설정\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/content/img/unique.JPG\",\n    alt: \"image.png\"\n  }), \"\\n\", React.createElement(_components.h3, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://velog.io/@khnn/TIL-DELETE%EC%97%90%EC%84%9C%EC%9D%98-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC-%ED%99%9C%EC%9A%A9\"\n  }, \"UPDATE & DELETE 를 할 때 자기 테이블의 데이터를 바로 사용하지 못하기 때문에 서브쿼리를 하나 더 사용\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/server/database/mysql/2021-08-30-mysql-duplicate-data.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","ul","li","table","thead","tr","th","tbody","td","pre","code","a","img","_provideComponents","components","React","className","href","src","alt","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}