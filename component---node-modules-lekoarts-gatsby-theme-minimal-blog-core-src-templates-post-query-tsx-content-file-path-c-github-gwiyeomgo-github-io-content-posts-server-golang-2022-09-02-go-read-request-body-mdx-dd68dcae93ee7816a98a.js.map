{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-server-golang-2022-09-02-go-read-request-body-mdx-dd68dcae93ee7816a98a.js","mappings":"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","sources":["webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://gwiyeom-blog/./content/posts/server/golang/2022-09-02-go-read-requestBody.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/seo.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"body 값이 어느 상황에 출력되지 않는지 문제 찾아보고 수정하기\"), \"\\n\", React.createElement(_components.h1, null, \"발견한 문제는\"), \"\\n\", React.createElement(_components.p, null, \"고사에렌에 401에러가 발생시 body 값이 출력됨\\r\\n고사에렌에 500에러가 발생시 body 값이 출력 X\\r\\n고사에렌에 400에러가 발생시 body 값이 출력 X\"), \"\\n\", React.createElement(_components.p, null, \"post api 를 호출했을 때 401 에러의 경우 body 가 출력된다.\\r\\n토큰이 만료된 상태에서 등록시 토큰이 만료되서 에러 발생 => 개발오류로 보냄\\r\\n401 에러가 나면 => 개발오류에 body 값이 출력된 post 오류 업무가 존재함\\r\\nbody 는 제대로 읽혀서 보내지고 있음\"), \"\\n\", React.createElement(_components.h1, null, \"내가 원하는 것은\"), \"\\n\", React.createElement(_components.p, null, \"400,500 상태 코드의 에러 발생시 body 값이 출력되었으면 한다\"), \"\\n\", React.createElement(_components.h1, null, \"두 경우를 디버깅하면서 알게된 점은\"), \"\\n\", React.createElement(_components.p, null, \"400번의 경우 CustomHTTPErrorHandler 를 오기 전\\r\\nCreateDatabaseContext 미들웨어를 들리고\\r\\nCreateDatabaseContext 미들웨어 에서 request 의 Body 의 N 이 0이 된다\\r\\n이 상황을 거친 request Body 를 readAll 하면 EOF 라는 에러가 발생한다\\r\\n=> req.Body 를 읽을수 없다\"), \"\\n\", React.createElement(_components.p, null, \"401번의 경우 CustomHTTPErrorHandler 를 오기 전 CreateDatabaseContext를 들리지 않음\\r\\nCreateDatabaseContext를 에서 next 를 들리면\\r\\nsawEOF = true 로 바뀜\\r\\nreq.Body 를 읽을 수 없다\"), \"\\n\", React.createElement(_components.h3, null, \"idea\"), \"\\n\", React.createElement(_components.p, null, \"*req 가 사라지기 전에 body 값을 context 에 넣는다\\r\\n*req 가 사라지기 전에 body 값을 log 에 넣는다?\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"//400,500 에러 시 body 를 알 수 없어서 body 를 Context 에 추가하는 코드\\r\\nvar bodyBytes []byte\\r\\nif req.Body != nil {\\r\\n\\tbodyBytes, _ = ioutil.ReadAll(req.Body)\\r\\n}\\r\\n// Restore the io.ReadCloser to its original state\\r\\nreq.Body = ioutil.NopCloser(bytes.NewBuffer(bodyBytes))\\r\\nctx = context.WithValue(ctx, config.ContextRequestBody, string(bodyBytes))\\r\\nc.SetRequest(req.WithContext(ctx))\\r\\n\\r\\n\\r\\nbody := req.Context().Value(config.ContextRequestBody)\\r\\nstr := fmt.Sprintf(\\\"%v\\\", body)\\r\\n\\r\\n\\r\\nContextRequestBody= \\\"REQUEST_BODY\\\"\\r\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"context 에는 db성보와 userclaim 만 저장한다\"), \"\\n\", React.createElement(_components.h1, null, \"여기에 body 값을 넣는것은 옳은 것 일까요?\"), \"\\n\", React.createElement(_components.p, null, \"context 를 번역하면 문맥,흐름으로\\r\\n웹과 서버의 통신을 하는데에 필요한 데이터나 값을 이 context안에 넣고 필요할때 뽑아 쓰는 형식\\r\\n이 컨텍스트에 하나의 웹 요청이 처리되는 동안\\r\\n유지해야 할 값을 담아놓고\\r\\n필요한 곳에서 사용하면 된다\"), \"\\n\", React.createElement(_components.p, null, \"시도1\\r\\n고사이렌이 실행되는 과정에서 err 가 났고\\r\\nrequest 를 내가 예상할 수 없는 장소에서 사용할 수 있으니\\r\\nbody 값을 읽는 코드 다음에\\r\\nbody 값을 다시 넣어주는 코드도 추가해 보기로함\"), \"\\n\", React.createElement(_components.p, null, \"확인은 어떻게?\\r\\ndev 에 코드를 추가 배포 후 dev 에서 400번 에러를 발생시킴\\r\\ndev 에 코드를 추가 배포 후 dev 에서 500번 에러를 발생시킴\"), \"\\n\", React.createElement(_components.p, null, \"=> 실패\"), \"\\n\", React.createElement(_components.p, null, \"시도 2\\r\\n400번의 경우 CustomHTTPErrorHandler 를 오기 전\\r\\nCreateDatabaseContext 미들웨어를 들리고\\r\\nnext(c) 를 거치면 reqeust.Body 를 읽을 수 없도록 제한한다\"), \"\\n\", React.createElement(_components.h2, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, \"*Context\\r\\n\", React.createElement(_components.a, {\n    href: \"https://jaehue.github.io/post/how-to-use-golang-context/\"\n  }, \"https://jaehue.github.io/post/how-to-use-golang-context/\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://myungsworld.tistory.com/13\"\n  }, \"https://myungsworld.tistory.com/13\"), \"\\r\\n*body 읽는법\\r\\n\", React.createElement(_components.a, {\n    href: \"https://jusths.tistory.com/65\"\n  }, \"https://jusths.tistory.com/65\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"buf := make([]byte, req.ContentLength)\\r\\nif _, err := io.ReadFull(req.Body, buf); err == io.EOF {\\r\\n\\tfmt.Println( io.ErrUnexpectedEOF)\\r\\n} else if err != nil {\\r\\n\\tfmt.Println( io.ErrUnexpectedEOF)\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"*기타\\r\\n\", React.createElement(_components.a, {\n    href: \"https://mingrammer.com/translation-go-walkthrough-io-package/\"\n  }, \"https://mingrammer.com/translation-go-walkthrough-io-package/\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://www.geeksforgeeks.org/io-limitreader-function-in-golang-with-examples/\"\n  }, \"https://www.geeksforgeeks.org/io-limitreader-function-in-golang-with-examples/\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://velog.io/@yeonjoo7/go%EC%96%B8%EC%96%B4%EC%9D%98-io%ED%8C%A8%ED%82%A4%EC%A7%80\"\n  }, \"https://velog.io/@yeonjoo7/go%EC%96%B8%EC%96%B4%EC%9D%98-io%ED%8C%A8%ED%82%A4%EC%A7%80\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/server/golang/2022-09-02-go-read-requestBody.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","Seo","description","excerpt","image","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","styles","_t$styles","to","replaceSlashes","name","_createMdxContent","_components","Object","assign","p","h1","h3","pre","code","h2","_provideComponents","components","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}