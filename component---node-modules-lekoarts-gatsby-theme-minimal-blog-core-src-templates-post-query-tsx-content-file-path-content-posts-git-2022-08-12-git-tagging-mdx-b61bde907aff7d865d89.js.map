{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-git-2022-08-12-git-tagging-mdx-b61bde907aff7d865d89.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/git/2022-08-12-git-tagging.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    ul: \"ul\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Tagging 뭔가요?\"), \"\\n\", React.createElement(_components.p, null, \"*\", React.createElement(_components.code, null, \" https://git-scm.com/book/en/v2/Git-Basics-Tagging 을 사용하여 릴리스 지점을 표시합니다.\")), \"\\n\", React.createElement(_components.h1, null, \"gitLab 에서 Tagging 은..\"), \"\\n\", React.createElement(_components.p, null, \"배포 전에 프로젝트에서\\ngitLab 의 왼쪽 사이드 메뉴에\\n\", React.createElement(_components.code, null, \"Repository > Tags > New tag\"), \" 에서 tag 를 생성합니다.release\\ntag name,메세지를 입력하고 Tagging 할 branch 를 선택하고 tag 를 생성합니다.\\n그리고 release\\n\", React.createElement(_components.code, null, \"Deployments > Releases > New release\"), \" 에서 release 를 생성하고 tag 를 선택한다.\\n이때 사용했던 tag 는 Selected tag is already in use. Choose another option. 문구처럼 사용 못함함\"), \"\\n\", React.createElement(_components.h1, null, \"gitLab API 를 어떻게 사용하지 ?\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"gitLab 문서를 찾아보니 Access Tokens 을 생성\"), \"\\n\", React.createElement(_components.li, null, \"gitLab 에 \", React.createElement(_components.code, null, \"User Settings > Access Tokens\"), \" 에서 토큰 생성\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \" Personal Access Tokens\\n You can generate a personal access token for each application you use that needs access to the GitLab API.\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Postman 에서 특정 프로젝트의 tag 목록을 호출\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://docs.gitlab.com/ee/api/tags.html\"\n  }, \"gitlab API 링크\")), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"url :\", React.createElement(_components.code, null, \"https://gitlab.com/api/v4/projects/{project_id}/repository/tags\")), \"\\n\", React.createElement(_components.li, null, \"Authorization :\", React.createElement(_components.code, null, \" Bearer {gitLab-token}\")), \"\\n\", React.createElement(_components.li, null, \"Content-Type :\", React.createElement(_components.code, null, \" application/json;charset=UTF-8\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"project_id 는 어떻게 알지? => gitLab 에서 특정 프로젝트를 선택하면 => 해당 프로젝트 제목 밑에 \", React.createElement(_components.code, null, \"Project ID: 1111111\"), \" 써있다\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"결과값은 배열로 오며 나는 배열의 첫 요소만 반환하는 API 를 만들었다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"[\\n    {\\n        \\\"name\\\": \\\"R-725.v2\\\",\\n        \\\"message\\\": \\\"7월 25일 운영배포 v2 - hotfix\\\",\\n        \\\"target\\\": \\\"\\\",\\n        \\\"commit\\\": {\\n          ...\\n        },\\n        \\\"release\\\": {\\n            \\\"tag_name\\\": \\\"R-725.v2\\\",\\n            \\\"description\\\": \\\"#32 목록 페이지 오류 개선\\\"\\n        },\\n\\n    }\\n ]\\n\")), \"\\n\", React.createElement(_components.h3, null, \"20220726\"), \"\\n\", React.createElement(_components.h1, null, \"ㅎㅎ.. gitLab의 tag 알필요가 없다....\"), \"\\n\", React.createElement(_components.p, null, \"그냥 version table 에 임의로 작성한 version 을 추가하면 될 거 같다\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/git/2022-08-12-git-tagging.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","code","ol","li","pre","ul","a","h3","_provideComponents","components","React","start","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}