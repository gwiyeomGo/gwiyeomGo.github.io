{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-golang-2022-12-29-go-struct-validate-mdx-c0e544f8385be311c28a.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/golang/2022-12-29-go-struct-validate.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"회사의 입사,퇴사,인사변경이 자주 발생한다.\\r\\n담당자가 매번 입사,퇴사,인사변경 정보를 받아서 각각 매칭을 해줘야 한다.\\r\\n가끔 정보를 알지 못해서 매장 담당자에게 역할 매칭을 요청받는 문의도 생긴다.\"), \"\\n\", React.createElement(_components.p, null, \"해당 업무를 자동화 하기 위해서\\r\\n매장 담당자가 매장과 역할 매칭을 요청하는 기능을 추가하기로 했다.\"), \"\\n\", React.createElement(_components.p, null, \"매장과 역할 매칭 기능의 유형은 4가지로 보고 있다.\\r\\n1.인사이동\\r\\n2.입사\\r\\n3.퇴사\\r\\n4.매장 패점\"), \"\\n\", React.createElement(_components.h3, null, \"문제\"), \"\\n\", React.createElement(_components.p, null, \"요청 매칭 API 는어드민 화면 (웹) 에서 보내준 json 데이터를 받는다.\\r\\njson 을 bind 해서 validate 할 때 문제가 발생했다.\\r\\n요청을 하는 API 는 1개인데 필수로 하는 값이 유형에 따라 다르다.\"), \"\\n\", React.createElement(_components.h3, null, \"초기 dto\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"type MatchingRequest struct {\\r\\n\\tType              string `json:\\\"type\\\" validate:\\\"required\\\"`\\r\\n\\tRoleId            uint   `json:\\\"role_id\\\" validate:\\\"required\\\"`\\r\\n\\tPreRoleId         uint   `json:\\\"pre_role_id\\\"`\\r\\n\\t...\\r\\n}\\r\\n\\r\\nfunc (r MatchingRequest) Validate(ctx echo.Context) error {\\r\\n\\tif r.Type == request.TypePersonnelChanges {\\r\\n\\t\\tif r.PreRoleId == uint(0) || r.PreOrganizationId == uint(0) {\\r\\n\\t\\t\\treturn errors.New(\\\"인사이동의 경우 이전 역활과 조직을 선택은 필수입니다.\\\")\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn ctx.Validate(r)\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"PreRoleId\"), \" 의 경우 입사/퇴사에 필수로 필요하지 않다.\\r\\n하지만 인사이동 시 필수로 필요한 값이다.\"), \"\\n\", React.createElement(_components.p, null, \"기존 코드에서는 리시버를 사용해서 값을 하나씩 확인하고 error 를 반환했다.\\r\\n문제는 Type 별 validate 가 계속 추가된다.\"), \"\\n\", React.createElement(_components.h1, null, \"개선 방법\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"커스텀 validate 를 사용해서 코드를 개선하자\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"방법\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"framework  echo 를 사용시 설정\\r\\nEcho 에는 내장 된 데이터 유효성 검사 기능이 없기 때문에\\r\\n라이브러리 사용 설정해야 합니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"//import \\\"github.com/labstack/echo\\\"\\r\\n\\r\\ntype CustomValidator struct {\\r\\n\\tValidator *validator.Validate\\r\\n}\\r\\n\\r\\nfunc (cv *CustomValidator) Validate(i interface{}) error {\\r\\n\\treturn cv.Validator.Struct(i)\\r\\n}\\r\\n\\r\\nfunc main() {\\r\\n\\te := echo.New()\\r\\n\\te.Validator = &config.CustomValidator{Validator: validator.New()}\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 코드처럼 validator 를 설정하지 않으면 \", React.createElement(_components.code, null, \"validator not registered\"), \" 에러가 발생한다.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"golang 은 struct 는 filed tag 를 지정할 수 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"func emptyCheckChild(fl validator.FieldLevel) bool {\\r\\n\\tfmt.Println(\\\"INSIDE MY VALIDATOR\\\")\\r\\n\\tif value, ok := fl.Parent().Interface().(ParentStruct); ok {\\r\\n\\t\\tif value.Type == \\\"B\\\" {\\r\\n\\t\\t\\tif reflect.ValueOf(value.Child).IsZero() {\\r\\n\\t\\t\\t\\treturn false\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn true\\r\\n}\\r\\n\\r\\n\\r\\nfunc main() {\\r\\n\\te := echo.New()\\r\\n    validator := validator.New()\\r\\n    validator.RegisterValidation(\\\"emptyCheckChild\\\", emptyCheckChild)\\r\\n\\te.Validator = &config.CustomValidator{Validator: validator}\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h1, null, \"tip\"), \"\\n\", React.createElement(_components.p, null, \"추가적으로 커스텀 tag 를 설정해 기능을 추가하는 방법\"), \"\\n\", React.createElement(_components.h1, null, \"출처\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://medium.com/@apzuk3/input-validation-in-golang-bc24cdec1835\"\n  }, \"https://medium.com/@apzuk3/input-validation-in-golang-bc24cdec1835\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/go-playground/validator\"\n  }, \"https://github.com/go-playground/validator\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://pkg.go.dev/github.com/go-playground/validator#hdr-Baked_In_Validators_and_Tags\"\n  }, \"https://pkg.go.dev/github.com/go-playground/validator#hdr-Baked_In_Validators_and_Tags\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://gist.github.com/NatGra/1972d860e1f4b7d2216813514431b1d9\"\n  }, \"https://gist.github.com/NatGra/1972d860e1f4b7d2216813514431b1d9\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://gist.github.com/dakait/463ae4565405731f72e8857969036171\"\n  }, \"https://gist.github.com/dakait/463ae4565405731f72e8857969036171\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/67273914/how-can-i-validate-a-struct-datatype-with-a-custom-validator\"\n  }, \"https://stackoverflow.com/questions/67273914/how-can-i-validate-a-struct-datatype-with-a-custom-validator\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://go.dev/play/p/kZngZuDDSxW\"\n  }, \"https://go.dev/play/p/kZngZuDDSxW\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://freshman.tech/snippets/go/check-empty-struct/\"\n  }, \"https://freshman.tech/snippets/go/check-empty-struct/\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://gist.github.com/gwiyeomgo/b6edc70b87a8a638d1802dbafd7c8bff\"\n  }, \"https://gist.github.com/gwiyeomgo/b6edc70b87a8a638d1802dbafd7c8bff\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/react/gwiyeomgo.github.io/content/posts/server/golang/2022-12-29-go-struct-validate.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","pre","code","h1","ul","li","ol","a","_provideComponents","components","React","start","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}