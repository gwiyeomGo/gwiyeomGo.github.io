"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[5150],{3835:function(e,t,n){n.r(t),n.d(t,{Head:function(){return p.F},default:function(){return a}});var r=n(7294),c=n(1151);function l(e){const t=Object.assign({h1:"h1",p:"p",h2:"h2",code:"code",pre:"pre"},(0,c.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.h1,null,"배경"),"\n",r.createElement(t.p,null,"지금 사용하는 시스템은 회원의 정보를 관리합니다.\r\ndb에 저장할때는 암호화된 정보로 저장합니다.\r\n암호화된 정보를 복호화 하기 위해서는 key 값이 존재하며\r\n개발환경에 따라서 암호화 키가 다릅니다.\r\n주로 핸드폰 번호를 관리할때 사용했었습니다."),"\n",r.createElement(t.h2,null,"코드"),"\n",r.createElement(t.p,null,r.createElement(t.code,null,'common.GetDecrypt("암호화된 값")'),"\r\n",r.createElement(t.code,null,'common.GetEncrypt("암호화할 값")')),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"func GetDecrypt(text string) string {\r\n\tkey := config.Encrypt.EncryptKey\r\n\treturn Decrypt(key, text)\r\n}\r\n\r\nfunc SetEncrypt(text string) string {\r\n\tkey := config.Encrypt.EncryptKey\r\n\treturn Encrypt(key, text)\r\n}\r\n\r\nfunc Encrypt(key, text string) string {\r\n\tblock, err := aes.NewCipher([]byte(key))\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\tplaintext := []byte(text)\r\n\tcfb := cipher.NewCFBEncrypter(block, iv)\r\n\tciphertext := make([]byte, len(plaintext))\r\n\tcfb.XORKeyStream(ciphertext, plaintext)\r\n\treturn encodeBase64(ciphertext)\r\n}\r\n\r\nfunc Decrypt(key, text string) string {\r\n\tblock, err := aes.NewCipher([]byte(key))\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\tciphertext := decodeBase64(text)\r\n\tcfb := cipher.NewCFBEncrypter(block, iv)\r\n\tplaintext := make([]byte, len(ciphertext))\r\n\tcfb.XORKeyStream(plaintext, ciphertext)\r\n\treturn string(plaintext)\r\n}\n")))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,c.ah)(),e.components);return t?r.createElement(t,e,r.createElement(l,e)):l(e)},p=n(8804);function a(e){return r.createElement(p.Z,e,r.createElement(i,e))}p.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-golang-2022-04-05-go-encrypt-decrypt-mdx-34d750e471d4b4333e6d.js.map