{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-server-network-rest-2022-07-25-rest-release-version-control-mdx-2b49d1fd403deff69bad.js","mappings":"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","sources":["webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://gwiyeom-blog/./content/posts/server/network/rest/2022-07-25-rest-release-version-control.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/seo.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    ol: \"ol\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"gitlab,release,tags\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"현재 개발하고 있는 시스템은\\r\\n100 개 이상의 매장에서 사용합니다.\\r\\n관리자가 보는 화면 외에\\r\\n매장에서 하루 종일 한 화면만 보여지는 경우가 존재합니다.\\r\\n바로 매장에서 기부를 등록하는 화면인데요.\\r\\n해당 화면은\\r\\n회원 ID 와 수량을 입력하여 기부를 할 수 있도록 하는 기능입니다.\"), \"\\n\", React.createElement(_components.h3, null, \"문제\"), \"\\n\", React.createElement(_components.p, null, \"문제는\\r\\n화면을 계속 켜 놓기 때문에\\r\\n컴퓨터 자체를 끄지 않고 퇴근을 하신다고 합니다.\\r\\n그래서\\r\\n시스템에 정기 배포날\\r\\n또는 시스템의 핫픽스 발생으로 배포했을 때\\r\\n사용자는 같은 화면을 보고 있고 새로고침 하지 않아서\\r\\n새로 배포된 내용을 보지 못하는 문제가 발생합니다.\"), \"\\n\", React.createElement(_components.h3, null, \"사용자는 가장 최근에 배포된 버전을 보고 싶다\"), \"\\n\", React.createElement(_components.h3, null, \"과정\"), \"\\n\", React.createElement(_components.p, null, \"처음에는...\\r\\n브라우저가 캐쉬가 문제라고 생각했고\\r\\nmeta tag 를 변경해야 한다고 생각했다\\r\\n\", React.createElement(_components.code, null, \"HTML Meta Tag를 페이지에 삽입하는 방법 입니다. 하지만 이 방법은 과거의 몇몇 브라우저에게만 유효 했으며 지금은 더 이상 사용하지 않는 방법\"), \"\\r\\n그런데 찾아보닌 지금은 적당한 방법이 아니라고 한다\"), \"\\n\", React.createElement(_components.p, null, \"캐쉬에 대해서 잘 모르는데 계속 찾으니.. 정말 산으로 가는 느낌이었는데\\r\\n시니어 개발자님이\\r\\nversion table을 생성하고 API 를 통해서 버전을 확인하고 프론트에서 버전이 다를 때 새로고침하도록 변경하라고 조언해 주셨다.\\r\\n해당 문제는 자주 발생하기 때문에\\r\\n시니어 개발자님은 오픈 소스를 만드신다고 한다 ~\"), \"\\n\", React.createElement(_components.p, null, \"나도 우선 현재 상황에 사용할 수 있도록 코드를 만들고\\r\\n목표는 더 단순화시켜서 go module 을 만들어 보려고 한다.\"), \"\\n\", React.createElement(_components.h3, null, \"작업을 시작하려고 하니 3가지로 나눠봤다\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"github 에  최신 버전을 알아온다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"질문1 : \", React.createElement(_components.a, {\n    href: \"https://gwiyeomgo.github.io/git/2022-07-25-gitlab-how-to-know-latest-release-version\"\n  }, \"gitLab 에서 특정 프로젝트의 배포버전을 알지??\"), \" => \", React.createElement(_components.code, null, \"release tag\"), \" 로 최신 버전을 알아보자\"), \"\\n\", React.createElement(_components.li, null, \"질문2 : create 함수를 만들었는데 배포했을 때 어떻게 호출하지?\\r\\n=>\", React.createElement(_components.a, {\n    href: \"https://dejavuqa.tistory.com/143\"\n  }, \"참고\")), \"\\n\", React.createElement(_components.li, null, \"질문3 : 특정 프로젝트의 tags 를 호출했는데 ... 특정 프로젝트의 branch 도 호출 가능한가?\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"db table 에서 version 관리를 한다\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"프론트 화면에서 최신 버전을 조회하고 프론트에 저장된 내용과 확인하여 다르다면 새로고침 하도록 변경\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"질문 : 어느 시점에서 최신 버전을 조회하는 API 를 호출할까? => 우선.. \", React.createElement(_components.a, {\n    href: \"\"\n  }, \"refresh 토큰을 발급\"), \"할때 함수가 존재,이때 tag 를 받아서 localstorage 에 저장해보려고 한다\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"2022 -07-26\"), \"\\n\", React.createElement(_components.p, null, \"현재 운영 배포시에만 tag 를 생성\\r\\nbranch 별 상황을 고려해서 코드 수정 필요\\r\\n=> 피드백 :  gitLab 을 호출하지 않고\\r\\n그냥 version table 에 임의로 작성한 version 을 추가하면 될 거 같다\"), \"\\n\", React.createElement(_components.h3, null, \"github\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/gwiyeomgo/release-versioning\"\n  }, \"https://github.com/gwiyeomgo/release-versioning\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/server/network/rest/2022-07-25-rest-release-version-control.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","Seo","description","excerpt","image","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","styles","_t$styles","to","replaceSlashes","name","_createMdxContent","_components","Object","assign","ul","li","h3","p","code","ol","_provideComponents","components","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}