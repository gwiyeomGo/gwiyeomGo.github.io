{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-typescript-2023-12-09-typescript-storybook-mdx-95e2ccff0082d506c57c.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/client/typescript/2023-12-09-typescript-storybook.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\",\n    ul: \"ul\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"스토리북?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.npmjs.com/package/@gwiyeomgo/react-toolkit\"\n  }, \"react-typescript 컴포넌트를 모듈로 만들어서 npm 에 배포했었다.\"), \"\\r\\ncodesandbox 로 demo 파일을 생성해 예시를 보여줬었는데\\r\\n스토리북을 알게되어서 추가해보려고 한다\\r\\n추가적으로 아토믹 디자인을 적용해서 폴더를 관리하고\\r\\ngithub page 로 접근해 볼 수 있도록 만드는 것이 목표이다.\"), \"\\n\", React.createElement(_components.h1, null, \"스토리북 설치 + 프로젝트 생성\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"프로젝트 생성\\r\\n\", React.createElement(_components.code, null, \" npx create-react-app projectName --template=typescript\"), \"\\r\\nCreating a new React app in typescript/storybook.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"스토리북 설치\\r\\n\", React.createElement(_components.code, null, \"npm install --save-dev sb\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"스토리북 설정 초기화\\r\\n\", React.createElement(_components.code, null, \"npx sb init --builder webpack5\"), \"\\r\\n해당 명령어로 초기화 시키면 기본 예제가 포함된\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"프로젝트/.storybook/설정 파일\"), \"\\n\", React.createElement(_components.li, null, \"프로젝트/src/stories/예제 파일\"), \"\\n\", React.createElement(_components.li, null, \"프로젝트/src/stories/assets/이미지\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"src\\r\\n    - .storybook\\r\\n    - docs\\r\\n    - public\\r\\n    - src\\r\\n\\n\")), \"\\n\", React.createElement(_components.h1, null, \"Atomic Design 으로 폴더 관리\"), \"\\n\", React.createElement(_components.p, null, \"Atomic Design 은\\r\\n원자(Atoms), 분자(Molecules), 유기체(Organisms), 템플릿(Templates), 페이지(Pages)\\r\\n으로 효과적인 인터페이스 시스템을 만듬\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"잠점 : 컴포넌트 재사용성이 극대화,가이드라인\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"src\\r\\n    - components\\r\\n        -atoms\\r\\n        -molecules\\r\\n        -organisms\\r\\n        -templates\\r\\n    - pages\\n\")), \"\\n\", React.createElement(_components.p, null, \"mkdir src/components/atoms\\r\\nmkdir src/components/molecules\\r\\nmkdir src/components/organisms\\r\\nmkdir src/components/templates\\r\\nmkdir src/pages\"), \"\\n\", React.createElement(_components.h1, null, \"storybook 을 docs 로 빌드하고 github page 로 배포\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"github 사이트에서 pages 사용 설정\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"source 위치는 main 브렌치의 /docs 로 저장\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"코드에서 script 를 통해 src 내부 폴더를 docs 로 build\\r\\n\", React.createElement(_components.code, null, \"\\\"build-storybook\\\": \\\"storybook build -o docs\\\"\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"추가한 스토리북 링크\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/etc/gwiyeomgo.github.io/content/posts/client/typescript/2023-12-09-typescript-storybook.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","ol","li","code","ul","pre","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}