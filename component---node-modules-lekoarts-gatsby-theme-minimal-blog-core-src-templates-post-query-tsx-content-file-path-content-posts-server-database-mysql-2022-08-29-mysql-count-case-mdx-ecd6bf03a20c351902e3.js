"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[7452],{2503:function(e,n,t){t.r(n),t.d(n,{Head:function(){return c.F},default:function(){return i}});var l=t(7294),a=t(1151);function d(e){const n=Object.assign({blockquote:"blockquote",p:"p",h1:"h1",pre:"pre",code:"code",ul:"ul",li:"li"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"2022-08-29"),"\n"),"\n",l.createElement(n.h1,null,"배경"),"\n",l.createElement(n.p,null,"프론트 화면에서 기부 목록을 가져온다.\n이때\n전체 기부 횟수\n올해 기부 횟수\n올해 기부영수증 횟수\n신청이 가능한데 아직 신청 하지 않은 횟수(올해)\n를 한번에 보고 싶다는 요청이 있었다."),"\n",l.createElement(n.p,null,"기존에는 사용자의 기부 목록 조회 api 를 queryParams 만 다르게 사용하셔서 4번 호출하셨다고한다.."),"\n",l.createElement(n.h1,null,"어떻게 한번만 불러서 4개의 횟수 데이터를 가져올 수 있을까?"),"\n",l.createElement(n.p,null,"사용자의 기부 목록 조회 api 는 여러 테이블이 left,inner join 된 쿼리가 존재한다\nif 문에서 queryParams 조건만 다르면 된다"),"\n",l.createElement(n.h1,null,"최초시도.."),"\n",l.createElement(n.p,null,"우선 service 에서 4개의 조건을 map으로 만들어서\n4번 db 를 조회하는 코드를 만들었고\n실행시간이 4초가 걸렸다."),"\n",l.createElement(n.p,null,"이렇게 여러번 가는 것은 느리며 좋지 않은 코드라고 생각하고\n한번에 여러경우를 알 수 있는 case 문 과 count 함수를 사용하기로 했다"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"SELECT\nCOUNT(*) as allDonationsCount,\nCOUNT(CASE WHEN e.receipt_available+s.receipt_available = 2 and r.donation_id is null and( mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31' ))then 1 else null END) as notAppliedReceiptsCount,\nCOUNT(CASE WHEN ( mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31')) then 1 else null END)  as thisYearDonationsCount,\nCOUNT(CASE WHEN (r.donation_id > 0  and mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31')) then 1 else null END)  as appliedReceiptsCount\nFROM donations\nINNER JOIN eval_types as e ON donations.eval_type = e.type and e.deleted_at is null\nINNER JOIN statuses as s ON donations.status = s.status\nLEFT JOIN donors as r ON donations.id = r.donation_id and r.deleted_at is null WHERE (donations.deleted_at is null)\nAND (donations.member_id = 1) ORDER BY donations.id DESC;\n")),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"2023-09-14"),"\n"),"\n",l.createElement(n.h1,null,"배경"),"\n",l.createElement(n.p,null,"예약발송 기능이 기존에 있었는데 즉시발송 기능이 추가되었다\n각 매장마다 월 5회로 예약건수를 제한했었다\n기능 추가로 즉시발송 건수와 예약건수 합계가 5회로 제한되도록 결정했고"),"\n",l.createElement(n.p,null,"하나의 테이블에서 특정 매장에 월 발송건,예약건을 조회하는 방법을 찾아야햇다"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"발송타입이 A인 경우와 예약일이 2023년 7월인 경우를 카운트하고,\n발송타입이 B인 경우와 발송일이 2023년 7월인 경우를 카운트하여 발송건수와 예약건수_7월을 계산"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"SELECT\n    SUM(CASE WHEN scheduled_type = 'A'  THEN 1 ELSE 0 END) AS 즉시발송건, --(4) scheduled_type 이 즉시발송건인 경우 횟수 합계\n    SUM(CASE WHEN scheduled_type = 'B'  THEN 1 ELSE 0 END) AS 예약건  --(4) scheduled_type 이 예약건인 경우 횟수 합계\nFROM 테이블이름\nWHERE\ncode ='123'  -- (1)특정 매장에\nAND ((scheduled_type = 'B' AND scheduled_date LIKE '202309%') OR  -- (2)2023년 9월 예약내역\n      (scheduled_type = 'A' AND sent_date LIKE '2023-09%')); -- 2023년 (3)9월 즉시발송내역 중에서\n")))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?l.createElement(n,e,l.createElement(d,e)):d(e)},c=t(8804);function i(e){return l.createElement(c.Z,e,l.createElement(o,e))}c.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2022-08-29-mysql-count-case-mdx-ecd6bf03a20c351902e3.js.map