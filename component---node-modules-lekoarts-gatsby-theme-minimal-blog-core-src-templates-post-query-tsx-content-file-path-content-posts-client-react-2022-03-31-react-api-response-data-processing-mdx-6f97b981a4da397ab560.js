"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[3985],{3416:function(e,n,t){t.r(n),t.d(n,{Head:function(){return u.F},default:function(){return o}});var a=t(7294),r=t(1151);function l(e){const n=Object.assign({h2:"h2",p:"p",pre:"pre",code:"code"},(0,r.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.h2,null,"배경"),"\n",a.createElement(n.p,null,"하나의 함수에서 3개의 API를 호출한다.\r\n응답받은 데이터를 가져와 합칠 때 state에 합쳤다.\r\n그런데 각각 API 응답 객체에 동일한 key 값이 있었다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"  setData({\r\n  ...a.data,\r\n  ...b.data\r\n  })\n")),"\n",a.createElement(n.p,null,"각가 date key 와 값을 갖고있었다.\r\n문제는\r\na data 는 존재하지만 b의 data는 없는 상황이었다."),"\n",a.createElement(n.p,null,"기존에는 보였지만\r\napi 에서 dto을 변경하는 과정에 data key값이 들어가서 발생한 문제다.\r\napi 수정할때는 고려하지 못했는데 당황스럽다.\r\ndto 를 여러군데에서 쓰면 이런일이 발생하나보다\r\n효과적인 방법이 무엇인지 찾고싶다."),"\n",a.createElement(n.p,null,"결국 해결방법은 data state에 추가할 객체에 key value를 추가했다.\r\n이에 따라서 화면에서도 a 와 b 중 어느 데이터 인지 알 수 있었다.\r\n예) ",a.createElement(n.code,null,"data.a.name")),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"{\r\n  a : a.data,\r\n  b : b.data\r\n}\n")),"\n",a.createElement(n.h2,null,"응답 값을 다루는 효과적인 방법?"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?a.createElement(n,e,a.createElement(l,e)):l(e)},u=t(8804);function o(e){return a.createElement(u.Z,e,a.createElement(c,e))}u.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-react-2022-03-31-react-api-response-data-processing-mdx-6f97b981a4da397ab560.js.map