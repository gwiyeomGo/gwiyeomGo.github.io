{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-javascript-2023-05-30-javascript-multiple-api-calls-mdx-63020a7ea5b03907219b.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,KAAM,OACNC,EAAG,IACHC,IAAK,QACJC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,mBAAoB,KAAMO,EAAAA,cAAoBV,EAAYI,GAAI,KAAM,MAAO,KAAMM,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,wDAAyDO,EAAAA,cAAoBV,EAAYK,KAAM,KAAM,eAAgB,iBAAkB,KAAMK,EAAAA,cAAoBV,EAAYG,EAAG,KAAMO,EAAAA,cAAoBV,EAAYM,EAAG,CAC3aK,KAAM,+GACL,gHAAiH,KAAMD,EAAAA,cAAoBV,EAAYO,IAAK,KAAMG,EAAAA,cAAoBV,EAAYK,KAAM,KAAM,klBAAmlB,KAAMK,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,mBAAoB,KAAMO,EAAAA,cAAoBV,EAAYO,IAAK,KAAMG,EAAAA,cAAoBV,EAAYK,KAAM,KAAM,w7BAAi8B,KAAMK,EAAAA,cAAoBV,EAAYG,EAAG,KAAMO,EAAAA,cAAoBV,EAAYM,EAAG,CACr9DK,KAAM,6CACL,OAAQ,KAAMD,EAAAA,cAAoBV,EAAYI,GAAI,KAAM,MAAO,KAAMM,EAAAA,cAAoBV,EAAYG,EAAG,KAAMO,EAAAA,cAAoBV,EAAYM,EAAG,CAClJK,KAAM,gGACL,gGAAiG,KAAMD,EAAAA,cAAoBV,EAAYM,EAAG,CAC3IK,KAAM,4GACL,4GAA6G,KAAMD,EAAAA,cAAoBV,EAAYM,EAAG,CACvJK,KAAM,2EACL,2EAA4E,KAAMD,EAAAA,cAAoBV,EAAYM,EAAG,CACtHK,KAAM,qFACL,qFAAsF,KAAMD,EAAAA,cAAoBV,EAAYM,EAAG,CAChIK,KAAM,+GACL,gHACL,CAKA,MAJA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWd,EAAOW,EAAAA,cAAoBZ,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UC1Be,SAASe,EAAiBf,GACvC,OAAOW,EAAAA,cAAoBK,EAAAA,EAAehB,EAAOW,EAAAA,cAAoBM,EAAqBjB,GAC5F,CAHAgB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/javascript/2023-05-30-javascript-multiple-api-calls.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"다중으로 보내는 API 그룹\"), \"\\n\", React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"어드민 회원 상세에서 이력 관련된 API 를 7개 부른다\\n코드를 짧게 줄이는 방법을 찾아보니 \", React.createElement(_components.code, null, \"Promise.all\"), \"을 사용한 코드가 있엇다\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time\"\n  }, \"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"React.useEffect(()=>{\\nPromise.all([\\n    fetch('https://jsonplaceholder.typicode.com/posts'),\\n    fetch('https://jsonplaceholder.typicode.com/users')\\n]).then(function (responses) {\\n    // Get a JSON object from each of the responses\\n    return Promise.all(responses.map(function (response) {\\n        return response.json();\\n    }));\\n}).then(function (data) {\\n    // Log the data to the console\\n    // You would do something with both sets of data here\\n    console.log(data);\\n}).catch(function (error) {\\n    // if there's an error, log it\\n    console.log(error);\\n});\\n},[])\\n\")), \"\\n\", React.createElement(_components.p, null, \"실제로는 아래 처럼 적용했다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import React, { useEffect, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\n\\nconst App = () => {\\n  const [data, setData] = useState({\\n    test1: [],\\n    test2: []\\n  });\\n\\n  const fetchData = async () => {\\n    // root/public/test.json\\n    try {\\n      const [test1, test2] = await Promise.all([\\n        axios.get(\\\"/test1.json\\\"),\\n        axios.get(\\\"/test2.json\\\")\\n      ]);\\n\\n      Object.keys(test1.data).length > 0 &&\\n        setData((pre) => ({\\n          ...pre,\\n          test1: test1.data\\n        }));\\n\\n      Object.keys(test2.data).length > 0 &&\\n        setData((pre) => ({\\n          ...pre,\\n          test2: test2.data\\n        }));\\n    } catch (error) {\\n      console.log(error);\\n    }\\n  };\\n  useEffect(() => {\\n    fetchData();\\n  }, []);\\n\\n  return (\\n    <>\\n      {Object.keys(data).length > 0 &&\\n        data.test1.length > 0 &&\\n        console.log(data.test1)}\\n    </>\\n  );\\n};\\nexport default App;\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://codesandbox.io/s/datagetex-v621x2\"\n  }, \"예제\")), \"\\n\", React.createElement(_components.h1, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\"\n  }, \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://www.andreadiotallevi.com/blog/how-to-handle-multiple-set-state-calls-on-the-same-object-in-react\"\n  }, \"https://www.andreadiotallevi.com/blog/how-to-handle-multiple-set-state-calls-on-the-same-object-in-react\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://joshua1988.github.io/web-development/javascript/js-async-await/\"\n  }, \"https://joshua1988.github.io/web-development/javascript/js-async-await/\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/44182951/axios-chaining-multiple-api-requests\"\n  }, \"https://stackoverflow.com/questions/44182951/axios-chaining-multiple-api-requests\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time\"\n  }, \"https://stackoverflow.com/questions/57204895/how-to-fire-multiple-api-calls-asynchronously-at-the-same-time\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/client/javascript/2023-05-30-javascript-multiple-api-calls.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","code","a","pre","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}