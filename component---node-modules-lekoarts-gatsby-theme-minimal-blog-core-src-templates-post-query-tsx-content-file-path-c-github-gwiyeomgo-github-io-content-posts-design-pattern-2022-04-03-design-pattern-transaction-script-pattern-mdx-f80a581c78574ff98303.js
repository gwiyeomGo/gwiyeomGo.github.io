"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[4932],{191:function(e,n,t){t.r(n),t.d(n,{Head:function(){return o.F},default:function(){return u}});var r=t(7294),a=t(1151);function c(e){const n=Object.assign({h3:"h3",p:"p",a:"a"},(0,a.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(n.h3,null,"트랜잭션 스크립트 패턴 (Transaction Script Pattern)"),"\n",r.createElement(n.p,null,"비즈니스로직울 서비스에넣는\r\n트랜젝션스크립트 패턴\r\n장점은 만들기 쉽다 직괸적\r\n단점은 업무에 복잡도가 많아지면 테스트하기 아렵거 유지보수 힘듬\r\n코드중복 발생 (서비스 복잡)\r\n즉 단순한업무에 적합\r\n비즈니스로직은 엔터테에 넣음"),"\n",r.createElement(n.h3,null,"domain model Pattern"),"\n",r.createElement(n.p,null,"인캡슐레이션 가능\r\n장점 중복이 사라지고\r\n서비스가 단순해 진다\r\n단점 엔터티 복잡"),"\n",r.createElement(n.p,null,r.createElement(n.a,{href:"https://javacan.tistory.com/entry/94"},"참조"),"\r\n",r.createElement(n.a,{href:"https:/.naver.com/PostView.nhn?blogId=good_ray&logNo=222267722516"},"참조1")))}var l=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?r.createElement(n,e,r.createElement(c,e)):c(e)},o=t(4502);function u(e){return r.createElement(o.Z,e,r.createElement(l,e))}o.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-design-pattern-2022-04-03-design-pattern-transaction-script-pattern-mdx-f80a581c78574ff98303.js.map