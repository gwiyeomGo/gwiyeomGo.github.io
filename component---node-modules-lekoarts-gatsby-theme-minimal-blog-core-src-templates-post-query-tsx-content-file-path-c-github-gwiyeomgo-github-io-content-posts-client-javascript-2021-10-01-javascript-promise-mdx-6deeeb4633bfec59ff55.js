"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[52],{3809:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(7294);function l(e,t){return l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},l(e,t)}var o=function(e){var t,n;function o(){return e.apply(this,arguments)||this}n=e,(t=o).prototype=Object.create(n.prototype),t.prototype.constructor=t,l(t,n);var a=o.prototype;return a.componentDidMount=function(){this._updateIframeContent()},a.componentDidUpdate=function(e,t){this._updateIframeContent()},a._defineUrl=function(){var e=this.props,t=e.id,n=e.file;return"https://gist.github.com/"+t+".js"+(n?"?file="+n:"")},a._updateIframeContent=function(){var e=this.props,t=e.id,n=e.file,r=this.iframeNode,l=r.document;r.contentDocument?l=r.contentDocument:r.contentWindow&&(l=r.contentWindow.document);var o='<html><head><base target="_parent"><style>*{font-size:12px;}</style></head><body '+("onload=\"parent.document.getElementById('"+(n?"gist-"+t+"-"+n:"gist-"+t)+"').style.height=document.body.scrollHeight + 'px'\"")+">"+('<script type="text/javascript" src="'+this._defineUrl()+'"><\/script>')+"</body></html>";l.open(),l.writeln(o),l.close()},a.render=function(){var e=this,t=this.props,n=t.id,l=t.file;return r.createElement("iframe",{ref:function(t){e.iframeNode=t},width:"100%",frameBorder:0,id:l?"gist-"+n+"-"+l:"gist-"+n})},o}(r.PureComponent),a=o;var c=function(e){let{id:t,file:n}=e;return r.createElement(a,{id:t,file:n})}},1294:function(e,t,n){n.r(t),n.d(t,{Head:function(){return s.F},default:function(){return i}});var r=n(7294),l=n(1151),o=n(3809);function a(e){const t=Object.assign({h1:"h1",p:"p",a:"a",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",pre:"pre",code:"code"},(0,l.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.h1,null,"배경"),"\n",r.createElement(t.p,null,"현재 업무에서 나도모르는 사이에 promise를 쓰고 있었다.\r\nAPI를 통해 데이터를 받은 후에 대한 결과를 받기 위해서 사용했다."),"\n",r.createElement(t.h1,null,r.createElement(t.a,{href:"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"Promise")),"\n",r.createElement(t.p,null,"The Promise object represents the eventual completion (or failure) of an asynchronous operation and its resulting value\r\nPromise 객체는 비동기 작업이 맞이할 미래의 완료 또는 실패와 그 결과 값을 나타냅니다"),"\n",r.createElement(t.h1,null,"Promise 생성자 함수는 비동기 작업을 수행할 콜백 함수를 인자로 전달"),"\n",r.createElement(o.Z,{id:"77e2c895153dfc2aa25aa79dfb3979b0",file:"2021-10-01-javascript-promise_0.js"}),"\n",r.createElement(t.h3,null,"Promise 상태"),"\n",r.createElement(t.table,null,r.createElement(t.thead,null,r.createElement(t.tr,null,r.createElement(t.th,null,"상태"),r.createElement(t.th,null,"의미"),r.createElement(t.th,null,"구현"))),r.createElement(t.tbody,null,r.createElement(t.tr,null,r.createElement(t.td,null,"pending"),r.createElement(t.td,null,"비동기 처리가 아직 수행되지 않은 상태"),r.createElement(t.td,null,"resolve 또는 reject 함수가 아직 호출되지 않은 상태")),r.createElement(t.tr,null,r.createElement(t.td,null,"fulfilled"),r.createElement(t.td,null,"비동기 처리가 수행된 상태 (성공)"),r.createElement(t.td,null,"resolve 함수가 호출된 상태")),r.createElement(t.tr,null,r.createElement(t.td,null,"rejected"),r.createElement(t.td,null,"비동기 처리가 수행된 상태 (실패)"),r.createElement(t.td,null,"reject 함수가 호출된 상태")),r.createElement(t.tr,null,r.createElement(t.td,null,"settled"),r.createElement(t.td,null,"비동기 처리가 수행된 상태 (성공 또는 실패)"),r.createElement(t.td,null,"resolve 또는 reject 함수가 호출된 상태")))),"\n",r.createElement(t.h1,null,"Promise 4가지 정적 메소드"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"1. 성공: `new Promise((resolve,reject) => { resolve('Success') })`\r\n\r\nex) `Promise.resolve(123).then((value)=>{console.lgo(value}) //123`\r\n\r\n2. 실패: `new Promise((resolve,reject) => { reject(new Error()) })`\r\n\r\nex) `Promise.reject()`\r\n\r\n\r\n프라미스를 사용하면 비교적 안전하고 관리하기 쉬운 코드를 작성할 수 있습니다.\r\n프라미스는 콜백을 예측 가능한 패턴으로 사용할 수 있게 하며,프라미스 없이 콜백만 사용했을 때 나타날 수 있는 엉뚱한 현상이나 찾기 힘든 버그를 상당수 해결합니다.\r\n\r\n프라미스는 성공 또는 실패 둘 중 하나만 발생\r\n프라미스는 객체=> 전달 가능\r\n프라미스는 비동기 코드를 단순화하고 콜백이 두 번 이상 실행되는 문제를 방지\r\n단 resolve,reject를 꼭 호출해야됨\r\n프로미스가 결정되지 않은 문제를 자동으로 해결하지는 못함\r\n\r\nnew Promise(); // 대기 상태\r\n\r\nnew Promise((resoleve,reject)=>{\r\n\tresolve(); \r\n\t//성공 상태\r\n\treject(); \r\n\t//실패 상태\r\n})\r\n\n")),"\n",r.createElement(t.h3,null,"참고"),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve"},"Promise.resolve()"),"\r\n",r.createElement(t.a,{href:"https://learnjs.vlpt.us/async/02-async-await.html"},"https://learnjs.vlpt.us/async/02-async-await.html"),"\r\n",r.createElement(t.a,{href:"https://han41858.tistory.com/11"},"https://han41858.tistory.com/11"),"\r\n",r.createElement(t.a,{href:"https://programmingsummaries.tistory.com/325"},"https://programmingsummaries.tistory.com/325")))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?r.createElement(t,e,r.createElement(a,e)):a(e)},s=n(8804);function i(e){return r.createElement(s.Z,e,r.createElement(c,e))}s.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-client-javascript-2021-10-01-javascript-promise-mdx-6deeeb4633bfec59ff55.js.map