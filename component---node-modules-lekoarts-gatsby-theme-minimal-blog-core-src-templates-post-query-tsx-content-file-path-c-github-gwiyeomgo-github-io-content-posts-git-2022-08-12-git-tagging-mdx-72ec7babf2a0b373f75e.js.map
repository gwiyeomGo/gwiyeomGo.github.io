{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-git-2022-08-12-git-tagging-mdx-72ec7babf2a0b373f75e.js","mappings":"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","sources":["webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://gwiyeom-blog/./content/posts/git/2022-08-12-git-tagging.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/seo.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    ul: \"ul\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Tagging 뭔가요?\"), \"\\n\", React.createElement(_components.p, null, \"*\", React.createElement(_components.code, null, \" https://git-scm.com/book/en/v2/Git-Basics-Tagging 을 사용하여 릴리스 지점을 표시합니다.\")), \"\\n\", React.createElement(_components.h1, null, \"gitLab 에서 Tagging 은..\"), \"\\n\", React.createElement(_components.p, null, \"배포 전에 프로젝트에서\\r\\ngitLab 의 왼쪽 사이드 메뉴에\\r\\n\", React.createElement(_components.code, null, \"Repository > Tags > New tag\"), \" 에서 tag 를 생성합니다.release\\r\\ntag name,메세지를 입력하고 Tagging 할 branch 를 선택하고 tag 를 생성합니다.\\r\\n그리고 release\\r\\n\", React.createElement(_components.code, null, \"Deployments > Releases > New release\"), \" 에서 release 를 생성하고 tag 를 선택한다.\\r\\n이때 사용했던 tag 는 Selected tag is already in use. Choose another option. 문구처럼 사용 못함함\"), \"\\n\", React.createElement(_components.h1, null, \"gitLab API 를 어떻게 사용하지 ?\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"gitLab 문서를 찾아보니 Access Tokens 을 생성\"), \"\\n\", React.createElement(_components.li, null, \"gitLab 에 \", React.createElement(_components.code, null, \"User Settings > Access Tokens\"), \" 에서 토큰 생성\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \" Personal Access Tokens\\r\\n You can generate a personal access token for each application you use that needs access to the GitLab API.\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Postman 에서 특정 프로젝트의 tag 목록을 호출\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://docs.gitlab.com/ee/api/tags.html\"\n  }, \"gitlab API 링크\")), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"url :\", React.createElement(_components.code, null, \"https://gitlab.com/api/v4/projects/{project_id}/repository/tags\")), \"\\n\", React.createElement(_components.li, null, \"Authorization :\", React.createElement(_components.code, null, \" Bearer {gitLab-token}\")), \"\\n\", React.createElement(_components.li, null, \"Content-Type :\", React.createElement(_components.code, null, \" application/json;charset=UTF-8\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"project_id 는 어떻게 알지? => gitLab 에서 특정 프로젝트를 선택하면 => 해당 프로젝트 제목 밑에 \", React.createElement(_components.code, null, \"Project ID: 1111111\"), \" 써있다\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"결과값은 배열로 오며 나는 배열의 첫 요소만 반환하는 API 를 만들었다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"[\\r\\n    {\\r\\n        \\\"name\\\": \\\"R-725.v2\\\",\\r\\n        \\\"message\\\": \\\"7월 25일 운영배포 v2 - hotfix\\\",\\r\\n        \\\"target\\\": \\\"\\\",\\r\\n        \\\"commit\\\": {\\r\\n          ...\\r\\n        },\\r\\n        \\\"release\\\": {\\r\\n            \\\"tag_name\\\": \\\"R-725.v2\\\",\\r\\n            \\\"description\\\": \\\"#32 목록 페이지 오류 개선\\\"\\r\\n        },\\r\\n\\r\\n    }\\r\\n ]\\n\")), \"\\n\", React.createElement(_components.h3, null, \"20220726\"), \"\\n\", React.createElement(_components.h1, null, \"ㅎㅎ.. gitLab의 tag 알필요가 없다....\"), \"\\n\", React.createElement(_components.p, null, \"그냥 version table 에 임의로 작성한 version 을 추가하면 될 거 같다\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/git/2022-08-12-git-tagging.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","Seo","description","excerpt","image","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","styles","_t$styles","to","replaceSlashes","name","_createMdxContent","_components","Object","assign","h1","p","code","ol","li","pre","ul","h3","_provideComponents","components","start","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}