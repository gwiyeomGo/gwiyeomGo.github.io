{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-server-golang-2022-11-02-go-generics-mdx-c4a17133bc2d1948cb16.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,eAAgB,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,wIAAyI,KAAMQ,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,SAAU,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,yCAA0C,KAAMQ,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,q9BAAk+B,KAAMM,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,YAAa,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,sKAAuK,KAAMM,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,uKAAwK,KAAMM,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,oCAAqC,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,mLAAoL,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYS,EAAG,CACtpFI,KAAM,4EACL,6EACL,CAKA,MAJA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWhB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UChBe,SAASiB,EAAiBjB,GACvC,OAAOa,EAAAA,cAAoBK,EAAAA,EAAelB,EAAOa,EAAAA,cAAoBM,EAAqBnB,GAC5F,CAHAkB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/golang/2022-11-02-go-generics.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"20220511 베경\"), \"\\n\", React.createElement(_components.p, null, \"신청하는 API 를 만들었다.\\r\\n기관이 물품을 신청할 때\\r\\n신청 가능한지 확인하는 코드가 존재한다.\\r\\n이때 물품의 사업 분야와 기관의 사업 분야가 존재하며\\r\\n물품의 사업분야에 기관의 사업분야가 포함되어야 신청 할 수 있다.\"), \"\\n\", React.createElement(_components.h3, null, \"작업 내용\"), \"\\n\", React.createElement(_components.p, null, \"물품의 사업 분야가 복수 일 때 기관의 사업 분야가 포함하는지 확인\"), \"\\n\", React.createElement(_components.h3, null, \"코드\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"func Contains(items []string, key string) bool {\\r\\n\\tfor _, item := range items {\\r\\n\\t\\tif item == key {\\r\\n\\t\\t\\treturn true\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn false\\r\\n}\\r\\n\\r\\nif goods.BusinessField != \\\"*\\\" && org.BusinessField != goods.BusinessField {\\r\\n    return errors.ApiInternalServerError(fmt.Sprintf(errors.MessageParamsNotSame+\\\"(사업분야:%d)\\\", org.BusinessField))\\r\\n} else if goods.BusinessRegion != \\\"00\\\" && org.BusinessRegion != goods.BusinessRegion {\\r\\n    check := false\\r\\n    goodsBusinessFields := strings.Split(goods.BusinessField, \\\",\\\")\\r\\n    orgBusinessFields := strings.Split(org.BusinessField, \\\",\\\")\\r\\n    for _, orgBusinessField := range orgBusinessFields {\\r\\n        if common.Contains(goodsBusinessFields, orgBusinessField) {\\r\\n            check = true\\r\\n            break\\r\\n        }\\r\\n    }\\r\\n    if !check {\\r\\n        return errors.ApiInternalServerError(fmt.Sprintf(errors.MessageParamsNotSame+\\\"(기관의 사업분야:%d)\\\", org.BusinessField))\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"20221102\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"func StringSliceContains(s []string, e string) bool {\\r\\n\\tfor _, a := range s {\\r\\n\\t\\tif a == e {\\r\\n\\t\\t\\treturn true\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn false\\r\\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"func Int64SliceContains(s []int64, e int64) bool {\\r\\n\\tfor _, a := range s {\\r\\n\\t\\tif a == e {\\r\\n\\t\\t\\treturn true\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn false\\r\\n}\\r\\n\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Go 1.18+  부터는 generics 사용이 가능하다!\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"func Contains[T comparable](s []T, e T) bool {\\r\\n    for _, v := range s {\\r\\n        if v == e {\\r\\n            return true\\r\\n        }\\r\\n    }\\r\\n    return false\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/10485743/contains-method-for-a-slice\"\n  }, \"https://stackoverflow.com/questions/10485743/contains-method-for-a-slice\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/server/golang/2022-11-02-go-generics.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","pre","code","ul","li","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}