{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-git-2021-06-06-git-status-mdx-d0c1148aff38dc72de5b.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,MAAO,QACPC,MAAO,QACPC,GAAI,KACJC,GAAI,KACJC,MAAO,QACPC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBd,EAAMe,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBf,EAAYG,GAAI,KAAMY,EAAAA,cAAoBf,EAAYI,EAAG,CAC5HY,KAAM,8FACL,kBAAmB,KAAMD,EAAAA,cAAoBf,EAAYG,GAAI,KAAM,eAAgB,KAAMY,EAAAA,cAAoBf,EAAYK,EAAG,KAAM,wBAAyB,KAAMU,EAAAA,cAAoBf,EAAYM,MAAO,KAAMS,EAAAA,cAAoBf,EAAYO,MAAO,KAAMQ,EAAAA,cAAoBf,EAAYQ,GAAI,KAAMO,EAAAA,cAAoBf,EAAYS,GAAI,KAAM,MAAOM,EAAAA,cAAoBf,EAAYS,GAAI,KAAM,QAASM,EAAAA,cAAoBf,EAAYU,MAAO,KAAMK,EAAAA,cAAoBf,EAAYQ,GAAI,KAAMO,EAAAA,cAAoBf,EAAYW,GAAI,KAAM,aAAcI,EAAAA,cAAoBf,EAAYW,GAAI,KAAM,qCAAsCI,EAAAA,cAAoBf,EAAYQ,GAAI,KAAMO,EAAAA,cAAoBf,EAAYW,GAAI,KAAM,YAAaI,EAAAA,cAAoBf,EAAYW,GAAI,KAAM,oCAAqCI,EAAAA,cAAoBf,EAAYQ,GAAI,KAAMO,EAAAA,cAAoBf,EAAYW,GAAI,KAAM,UAAWI,EAAAA,cAAoBf,EAAYW,GAAI,KAAM,mCAAoC,KAAMI,EAAAA,cAAoBf,EAAYG,GAAI,KAAM,cAAe,KAAMY,EAAAA,cAAoBf,EAAYK,EAAG,KAAM,qIAAsI,KAAMU,EAAAA,cAAoBf,EAAYY,GAAI,KAAM,MAAO,KAAMG,EAAAA,cAAoBf,EAAYK,EAAG,KAAM,8UACpyC,CAKA,MAJA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGW,EAAAA,EAAAA,MAAsBd,EAAMe,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWnB,EAAOgB,EAAAA,cAAoBjB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCnBe,SAASoB,EAAiBpB,GACvC,OAAOgB,EAAAA,cAAoBK,EAAAA,EAAerB,EAAOgB,EAAAA,cAAoBM,EAAqBtB,GAC5F,CAHAqB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/git/2021-06-06-git-status.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EA%B8%B0%EC%B4%88\"\n  }, \"git 문서의 내용 요약\")), \"\\n\", React.createElement(_components.h3, null, \"Git의 세가지 상태\"), \"\\n\", React.createElement(_components.p, null, \". Git은 파일은 상태가 존재한다.\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"상태\"), React.createElement(_components.th, null, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Committed\"), React.createElement(_components.td, null, \"데이터가 로컬 데이터베이스에 안전하게 저장됐다는 것을 의미\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Modified\"), React.createElement(_components.td, null, \"수정한 파일을 아직 로컬 데이터베이스에 커밋하지 않은 것\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Staged\"), React.createElement(_components.td, null, \"현재 수정한 파일을 곧 커밋할 것이라고 표시한 상태\")))), \"\\n\", React.createElement(_components.h3, null, \"Git으로 하는 일\"), \"\\n\", React.createElement(_components.p, null, \"1.[1]워킹 트리에서 파일 수정\\r\\n2.[2]Staging Area에 파일을 Stage 해서 커밋할 스냅샷을 만든다.\\r\\n3.Staging Area에 있는 파일들을 커밋해서 [3]Git 디렉토리에 영구적인 스냅샷으로 저장한다.\"), \"\\n\", React.createElement(_components.h1, null, \"주석\"), \"\\n\", React.createElement(_components.p, null, \"[1]워킹 트리\\r\\n워킹 트리는 프로젝트의 특정 버전을 Checkout 한 것이다\\r\\nCheckout 하고 나서 수정했지만, 아직 Staging Area에 추가하지 않았으면 파일은 Modified 상태이다.\\r\\n[2]Staging Area\\r\\nStaging Area는 단순한 파일이고 곧 커밋할 파일에 대한 정보를 저장한다.\\r\\n파일을 수정하고 Staging Area에 추가했다면 파일은 Staged상태이다.\\r\\n[3]Git 디렉토리\\r\\n다른 컴퓨터에 있는 저장소를 Clone 할 때 Git 디렉토리가 만들어진다.\\r\\nGit 디렉토리에 있는 파일들은 Committed 상태이다\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/git/2021-06-06-git-status.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","a","p","table","thead","tr","th","tbody","td","h1","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}