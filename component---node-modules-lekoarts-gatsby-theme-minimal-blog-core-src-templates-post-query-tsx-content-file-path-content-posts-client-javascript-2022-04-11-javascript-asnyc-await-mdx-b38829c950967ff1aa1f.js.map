{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-javascript-2022-04-11-javascript-asnyc-await-mdx-b38829c950967ff1aa1f.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,gBAAiB,KAAMQ,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,SAAU,KAAMQ,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,4DAA6DO,EAAAA,cAAoBX,EAAYK,EAAG,CACnTO,KAAM,sCACL,eAAgB,KAAMD,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,MAAO,KAAMQ,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,0CAA2C,KAAMO,EAAAA,cAAoBX,EAAYM,GAAI,KAAM,QAAS,KAAMK,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,uFAAwF,SAAU,mBAAoB,KAAMO,EAAAA,cAAoBX,EAAYO,IAAK,KAAMI,EAAAA,cAAoBX,EAAYQ,KAAM,KAAM,2XAA4X,KAAMG,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,4GAA6G,KAAMO,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,oBAAqB,KAAMO,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,kGAAmG,KAAMO,EAAAA,cAAoBX,EAAYO,IAAK,KAAMI,EAAAA,cAAoBX,EAAYQ,KAAM,KAAM,4fAA6f,KAAMG,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,iFACx1D,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWf,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCfe,SAASgB,EAAiBhB,GACvC,OAAOY,EAAAA,cAAoBK,EAAAA,EAAejB,EAAOY,EAAAA,cAAoBM,EAAqBlB,GAC5F,CAHAiB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/javascript/2022-04-11-javascript-asnyc-await.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"async  await\"), \"\\n\", React.createElement(_components.h3, null, \"비동기란?\"), \"\\n\", React.createElement(_components.p, null, \"특정 코드의 실행이 완료될 때까지 기다리지 않고 다음 코드를 먼저 수행하하는 자바스크립트의 특성\\r\\n\", React.createElement(_components.a, {\n    href: \"https://it-eldorado.tistory.com/86\"\n  }, \"비동기 작업의 원리\")), \"\\n\", React.createElement(_components.h3, null, \"에러\"), \"\\n\", React.createElement(_components.p, null, \"UnhandledPromiseRejection\\r\\n에러 메세지 확인\"), \"\\n\", React.createElement(_components.h1, null, \"찾아보니\"), \"\\n\", React.createElement(_components.p, null, \"1.asnyc/await을 사용한 함수는 promise를 반환한다는 것을 알게되었다.\\r\\n2.  async 키워드를 사용한 함수의 경우\\r\\ntry \", \" catch\", \" 로 애러 핸들안해줘서 발생\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"DonationService.getDonation(id).then((response) => {\\r\\n  if (response.data && response.data.evalType !== ONLY_ACCEPT_DONATION){\\r\\n    DonationService.getDonationClassification(id).then((classification) => {\\r\\n       setData({\\r\\n                classification:classification.data,\\r\\n                donation:response.data\\r\\n                });\\r\\n    });\\r\\n  }\\r\\n})\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 코드는 기부 상세 화면에서 처음에 기부 데이텉를 가져오는 코드입니다.\\r\\n기부 데이터의 타입이 접수일경우 setData 를 해주지 않기 때문에 흰 화면이 나오는 문제가 발생했습니다.\"), \"\\n\", React.createElement(_components.p, null, \"어떻게 개선할 수 있을 까요?\"), \"\\n\", React.createElement(_components.p, null, \"3개의 API 를 Call 하는 경우\\r\\n우선 기부 데이터가 있다면 setData 를 써서 data 에 값을 저장해야 합니다. 따라서\\r\\n처음 호출하는 부분만 써보면\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const load =  async () => {\\r\\n  setRoles(MemberContext.memberInformation.roles);\\r\\n  let result = {}\\r\\n  let donation = await DonationService.getDonation(id).then((response) => response.data );\\r\\n  if(donation) result.donation = donation\\r\\n  if (donation && donation.evalType !== ONLY_ACCEPT_DONATION){\\r\\n   let classification = await DonationService.getDonationClassification(id).then((response) => response.data);\\r\\n   result.classification = classification\\r\\n  }\\r\\n  setData(result);\\r\\n};\\n\")), \"\\n\", React.createElement(_components.p, null, \"3개 API 중 1개는 잘못된 키값으로 값을 불러 응답이 null 이었는데\\r\\n웃긴거는 ㅎㅎ 받아온 응답값을 쓰는 곳이 없었따.. ㅎㅎㅎ\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/react/gwiyeomgo.github.io/content/posts/client/javascript/2022-04-11-javascript-asnyc-await.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","a","h1","pre","code","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}