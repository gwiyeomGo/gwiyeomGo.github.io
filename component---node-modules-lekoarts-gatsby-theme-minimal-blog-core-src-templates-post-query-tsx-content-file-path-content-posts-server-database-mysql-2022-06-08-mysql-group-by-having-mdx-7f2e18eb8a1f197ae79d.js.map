{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2022-06-08-mysql-group-by-having-mdx-7f2e18eb8a1f197ae79d.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2022-06-08-mysql-groupByHaving.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    br: \"br\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"기존 후원자 중복 검사를 위해 아래 조건의 기부 데이터를 추출을 요청받았다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"기간 2022년 1월~2022년 5월 25일, \\r\\n물품기증 1~4회\\r\\n연령대: 35세~65세\\r\\n성별: 여성\\r\\n개인정보 필요 항목\\r\\n이름\\r\\n휴대폰번호\\r\\n생년월일\\r\\n기증횟수\\r\\n기부금영수증 발행여부(발행/미발행)\\r\\n이메일주소\\r\\n주소(상세주소포함)\\r\\n우편번호\\n\")), \"\\n\", React.createElement(_components.h3, null, \"어디서 해당 정보를 확인할 수 있지?\"), \"\\n\", React.createElement(_components.p, null, \"현재는 기부,기부 공제자,배송지,회원 테이블에서 조인을 통해서 얻어야 했다.\"), \"\\n\", React.createElement(_components.h3, null, \"처음에는..\"), \"\\n\", React.createElement(_components.p, null, \"아래 쿼리처럼 서브쿼리를 사용해서\\r\\n특정기간에 기부했던 회원 정보를 추출했고(쿼리 A)\\r\\n추출된 회원 id 로 기부 데이터를 추출했다.\"), \"\\n\", React.createElement(_components.p, null, \"(쿼리 A)\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"select  \\r\\nm.*, \\r\\ndonation_count as '기증횟수'\\r\\nfrom(SELECT \\r\\n  member_id, count(member_id) as donation_count FROM donations as d\\r\\n  GROUP BY member_id HAVING  count(*) > 1 ) as dc\\r\\ninner join members as m\\r\\non dc.member_id = m.id\\r\\n ...\\r\\nand donation_count between 1 and 4\\n\")), \"\\n\", React.createElement(_components.p, null, \"(쿼리 B)\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT\\r\\na.*,\\r\\nb.*,\\r\\nc.*\\r\\nFROM donations as a\\r\\nleft join deliveries as b on a.id = b.donation_id\\r\\nleft join donors as c on a.id = c.donation_id\\r\\nand a.member_id IN ( ... m.id 컬럼만 추출되도로 쿼리 A 를 수정 후 입력 )\\r\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"(쿼리 A) 의 경우 서브쿼리를 썼는데 하나의 쿼리에서 같은 테이블을 여러번 써서 겨우 데이터를 추출했다.\\r\\n다시 찾아보니 서브쿼리를 쓰지 않고 \", React.createElement(_components.code, null, \"group by\"), \" 를 써서  \", React.createElement(_components.code, null, \"기부횟수\"), \"를 구할 수 있었다.\"), \"\\n\", React.createElement(_components.p, null, \"(쿼리 C)\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"select\\r\\nm.*,\\r\\ncount(m.id) as '기증횟수'\\r\\nfrom donations as d\\r\\ninner join members as m\\r\\non d.member_id = m.id\\r\\nand ...\\r\\ngroup by m.id\\r\\nhaving count(m.id) between 1 and 4\\n\")), \"\\n\", React.createElement(_components.p, null, \"(쿼리 C) 처럼 \", React.createElement(_components.code, null, \"group by m.id having count(m.id) between 1 and 4\"), React.createElement(_components.br), \"\\n\", \"회원당 기부 횟수를 알 수 있고 having 써서 조건까지 걸 수 있다.\"), \"\\n\", React.createElement(_components.h2, null, \"20221102  GROUP BY 확장\"), \"\\n\", React.createElement(_components.p, null, \"scheduled_date 는 20220912 의 형태의 string 이다\\r\\n년월로 group 를 만들어서 년/월에 예약된 발송건수를 알 수 있다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT DATE_FORMAT(scheduled_date,'%Y%m') yearAndMonth ,COUNT(*) count\\r\\nFROM `news`\\r\\nGROUP BY DATE_FORMAT(scheduled_date,'%Y%m')\\r\\nHAVING yearAndMonth is not null;\\n\")), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"yearAndMonth\"), React.createElement(_components.th, null, \"count\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"202209\"), React.createElement(_components.td, null, \"6\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"202211\"), React.createElement(_components.td, null, \"1\")))), \"\\n\", React.createElement(_components.h3, null, \"group by having\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://m.blog.naver.com/kim87838/110157966081\"\n  }, \"https://m.blog.naver.com/kim87838/110157966081\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=battledocho&logNo=220034040242\"\n  }, \"https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=battledocho&logNo=220034040242\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://wikidocs.net/132671\"\n  }, \"https://wikidocs.net/132671\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/react/gwiyeomgo.github.io/content/posts/server/database/mysql/2022-06-08-mysql-groupByHaving.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","pre","code","br","h2","table","thead","tr","th","tbody","td","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}