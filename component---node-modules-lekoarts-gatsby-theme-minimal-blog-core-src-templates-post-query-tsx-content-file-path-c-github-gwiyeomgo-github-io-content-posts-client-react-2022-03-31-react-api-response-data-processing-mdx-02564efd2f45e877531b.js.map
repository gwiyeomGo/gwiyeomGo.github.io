{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-client-react-2022-03-31-react-api-response-data-processing-mdx-02564efd2f45e877531b.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,MAAO,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,kGAAmG,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,KAAM,yDAA0D,KAAMG,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,uEAAwE,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,kJAAmJ,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,kGAAmGK,EAAAA,cAAoBT,EAAYM,KAAM,KAAM,gBAAiB,KAAMG,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,KAAM,8CAA+C,KAAMG,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,sBACjlC,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWZ,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCXe,SAASa,EAAiBb,GACvC,OAAOU,EAAAA,cAAoBI,EAAAA,EAAed,EAAOU,EAAAA,cAAoBK,EAAqBf,GAC5F,CAHAc,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/react/2022-03-31-react-api-responseData-processing.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"하나의 함수에서 3개의 API를 호출한다.\\r\\n응답받은 데이터를 가져와 합칠 때 state에 합쳤다.\\r\\n그런데 각각 API 응답 객체에 동일한 key 값이 있었다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"  setData({\\r\\n  ...a.data,\\r\\n  ...b.data\\r\\n  })\\n\")), \"\\n\", React.createElement(_components.p, null, \"각가 date key 와 값을 갖고있었다.\\r\\n문제는\\r\\na data 는 존재하지만 b의 data는 없는 상황이었다.\"), \"\\n\", React.createElement(_components.p, null, \"기존에는 보였지만\\r\\napi 에서 dto을 변경하는 과정에 data key값이 들어가서 발생한 문제다.\\r\\napi 수정할때는 고려하지 못했는데 당황스럽다.\\r\\ndto 를 여러군데에서 쓰면 이런일이 발생하나보다\\r\\n효과적인 방법이 무엇인지 찾고싶다.\"), \"\\n\", React.createElement(_components.p, null, \"결국 해결방법은 data state에 추가할 객체에 key value를 추가했다.\\r\\n이에 따라서 화면에서도 a 와 b 중 어느 데이터 인지 알 수 있었다.\\r\\n예) \", React.createElement(_components.code, null, \"data.a.name\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"{\\r\\n  a : a.data,\\r\\n  b : b.data\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"응답 값을 다루는 효과적인 방법?\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/client/react/2022-03-31-react-api-responseData-processing.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","pre","code","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}