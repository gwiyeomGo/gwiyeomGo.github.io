{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/etc/2022-05-05-etc-intellij-Shortcut-keys","result":{"data":{"post":{"slug":"/etc/2022-05-05-etc-intellij-Shortcut-keys","title":"ETC intellij/Goland Shortcut keys","date":"05.08.2022","tags":[{"name":"ETC","slug":"etc"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"ETC intellij/Goland Shortcut keys\",\n  \"date\": \"2022-08-05T00:00:00.000Z\",\n  \"slug\": \"/etc/2022-05-05-etc-intellij-Shortcut-keys\",\n  \"tags\": [\"ETC\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \" Ctrl+Alt+Shift+Click\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Multiple cursors and selection ranges : \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Ctrl+Alt+Shift+Click and drag the mouse over the desired parts of code.\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCD9C\\uCC98\\n\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.jetbrains.com/help/idea/multicursor.html\"\n  }, \"https://www.jetbrains.com/help/idea/multicursor.html\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":" Ctrl+Alt+Shift+Click Multiple cursors and selection ranges :  Ctrl+Alt+Shift+Click and drag the mouse over the desired parts of codeâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/etc/2022-05-05-etc-intellij-Shortcut-keys","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}