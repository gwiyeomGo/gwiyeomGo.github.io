{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-server-golang-2022-12-12-go-design-pattern-mdx","path":"/golang/2022-12-12-go-designPattern","result":{"data":{"post":{"slug":"/golang/2022-12-12-go-designPattern","title":"Golang 으로  DesignPattern 을 정리하고 사용했던 경험 기록","date":"12.12.2022","tags":[{"name":"DESIGN_PATTERN","slug":"design-pattern"},{"name":"GOLANG","slug":"golang"}],"description":null,"canonicalUrl":null,"excerpt":"Factory 메서드(팩토리 메스드 패턴) 개체에 채워야 할 속성이 많은 경우\r 즉 개체 생성이 복잡해질 때 사용하는 곳에서 사용\n\n확장에 열려있고 변경에 닫혀있는 객체 지향 원칙 =>\r 기존 코드를 변경하지 않고 새기능을 얼마든지 확장 가능\n\n기존…","timeToRead":4,"banner":null}},"pageContext":{"slug":"/golang/2022-12-12-go-designPattern","formatString":"DD.MM.YYYY","frontmatter":{"title":"Golang 으로  DesignPattern 을 정리하고 사용했던 경험 기록","date":"2022-12-12T00:00:00.000Z","slug":"/golang/2022-12-12-go-designPattern","tags":["DESIGN_PATTERN","GOLANG"]}}},"staticQueryHashes":["2450661609","2744905544","3090400250"],"slicesMap":{}}