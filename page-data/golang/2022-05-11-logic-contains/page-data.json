{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/golang/2022-05-11-logic-contains","result":{"data":{"post":{"slug":"/golang/2022-05-11-logic-contains","title":"golang 으로 배열에 데이터가 포함하는지 확인하는 함수 만든 경험","date":"11.05.2022","tags":[{"name":"GOLANG","slug":"golang"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"golang 으로 배열에 데이터가 포함하는지 확인하는 함수 만든 경험\",\n  \"date\": \"2022-05-11T00:00:00.000Z\",\n  \"slug\": \"/golang/2022-05-11-logic-contains\",\n  \"tags\": [\"GOLANG\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uBCA0\\uACBD\"), mdx(\"p\", null, \"\\uC2E0\\uCCAD\\uD558\\uB294 API \\uB97C \\uB9CC\\uB4E4\\uC5C8\\uB2E4.\\n\\uAE30\\uAD00\\uC774 \\uBB3C\\uD488\\uC744 \\uC2E0\\uCCAD\\uD560 \\uB54C\\n\\uC2E0\\uCCAD \\uAC00\\uB2A5\\uD55C\\uC9C0 \\uD655\\uC778\\uD558\\uB294 \\uCF54\\uB4DC\\uAC00 \\uC874\\uC7AC\\uD55C\\uB2E4.\\n\\uC774\\uB54C \\uBB3C\\uD488\\uC758 \\uC0AC\\uC5C5 \\uBD84\\uC57C\\uC640 \\uAE30\\uAD00\\uC758 \\uC0AC\\uC5C5 \\uBD84\\uC57C\\uAC00 \\uC874\\uC7AC\\uD558\\uBA70\\n\\uBB3C\\uD488\\uC758 \\uC0AC\\uC5C5\\uBD84\\uC57C\\uC5D0 \\uAE30\\uAD00\\uC758 \\uC0AC\\uC5C5\\uBD84\\uC57C\\uAC00 \\uD3EC\\uD568\\uB418\\uC5B4\\uC57C \\uC2E0\\uCCAD \\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"h1\", null, \"\\uC791\\uC5C5 \\uB0B4\\uC6A9\"), mdx(\"p\", null, \"\\uBB3C\\uD488\\uC758 \\uC0AC\\uC5C5 \\uBD84\\uC57C\\uAC00 \\uBCF5\\uC218 \\uC77C \\uB54C \\uAE30\\uAD00\\uC758 \\uC0AC\\uC5C5 \\uBD84\\uC57C\\uAC00 \\uD3EC\\uD568\\uD558\\uB294\\uC9C0 \\uD655\\uC778\"), mdx(\"h1\", null, \"\\uCF54\\uB4DC\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"func Contains(items []string, key string) bool {\\n    for _, item := range items {\\n        if item == key {\\n            return true\\n        }\\n    }\\n    return false\\n}\\n\\nif goods.BusinessField != \\\"*\\\" && org.BusinessField != goods.BusinessField {\\n    return errors.ApiInternalServerError(fmt.Sprintf(errors.MessageParamsNotSame+\\\"(\\uC0AC\\uC5C5\\uBD84\\uC57C:%d)\\\", org.BusinessField))\\n} else if goods.BusinessRegion != \\\"00\\\" && org.BusinessRegion != goods.BusinessRegion {\\n    check := false\\n    goodsBusinessFields := strings.Split(goods.BusinessField, \\\",\\\")\\n    orgBusinessFields := strings.Split(org.BusinessField, \\\",\\\")\\n    for _, orgBusinessField := range orgBusinessFields {\\n        if common.Contains(goodsBusinessFields, orgBusinessField) {\\n            check = true\\n            break\\n        }\\n    }\\n    if !check {\\n        return errors.ApiInternalServerError(fmt.Sprintf(errors.MessageParamsNotSame+\\\"(\\uAE30\\uAD00\\uC758 \\uC0AC\\uC5C5\\uBD84\\uC57C:%d)\\\", org.BusinessField))\\n    }\\n}\\n\")), mdx(\"p\", null, \"\\uC6B0\\uC120 \\uC774\\uB807\\uAC8C \\uD588\\uB294\\uB370...\\n\\uD3EC\\uD568\\uAD00\\uACC4\\uC77C\\uB54C \\uC5B4\\uB5BB\\uAC8C \\uCF54\\uB4DC\\uB97C \\uB9CC\\uB4E4\\uC5B4\\uC57C \\uD560\\uAE4C?\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"베경 신청하는 API…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/golang/2022-05-11-logic-contains","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}