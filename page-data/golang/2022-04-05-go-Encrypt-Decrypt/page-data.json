{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/golang/2022-04-05-go-Encrypt-Decrypt","result":{"data":{"post":{"slug":"/golang/2022-04-05-go-Encrypt-Decrypt","title":"golang 으로 휴대번호 암호화 복호화","date":"05.04.2022","tags":[{"name":"GOLANG","slug":"golang"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"golang 으로 휴대번호 암호화 복호화\",\n  \"date\": \"2022-04-05T00:00:00.000Z\",\n  \"slug\": \"/golang/2022-04-05-go-Encrypt-Decrypt\",\n  \"tags\": [\"GOLANG\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\uBC30\\uACBD\"), mdx(\"p\", null, \"\\uC9C0\\uAE08 \\uC0AC\\uC6A9\\uD558\\uB294 \\uC2DC\\uC2A4\\uD15C\\uC740 \\uD68C\\uC6D0\\uC758 \\uC815\\uBCF4\\uB97C \\uAD00\\uB9AC\\uD569\\uB2C8\\uB2E4.\\ndb\\uC5D0 \\uC800\\uC7A5\\uD560\\uB54C\\uB294 \\uC554\\uD638\\uD654\\uB41C \\uC815\\uBCF4\\uB85C \\uC800\\uC7A5\\uD569\\uB2C8\\uB2E4.\\n\\uC554\\uD638\\uD654\\uB41C \\uC815\\uBCF4\\uB97C \\uBCF5\\uD638\\uD654 \\uD558\\uAE30 \\uC704\\uD574\\uC11C\\uB294 key \\uAC12\\uC774 \\uC874\\uC7AC\\uD558\\uBA70\\n\\uAC1C\\uBC1C\\uD658\\uACBD\\uC5D0 \\uB530\\uB77C\\uC11C \\uC554\\uD638\\uD654 \\uD0A4\\uAC00 \\uB2E4\\uB985\\uB2C8\\uB2E4.\\n\\uC8FC\\uB85C \\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638\\uB97C \\uAD00\\uB9AC\\uD560\\uB54C \\uC0AC\\uC6A9\\uD588\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uCF54\\uB4DC\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"common.GetDecrypt(\\\"\\uC554\\uD638\\uD654\\uB41C \\uAC12\\\")\"), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"common.GetEncrypt(\\\"\\uC554\\uD638\\uD654\\uD560 \\uAC12\\\")\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"func GetDecrypt(text string) string {\\n    key := config.Encrypt.EncryptKey\\n    return Decrypt(key, text)\\n}\\n\\nfunc SetEncrypt(text string) string {\\n    key := config.Encrypt.EncryptKey\\n    return Encrypt(key, text)\\n}\\n\\nfunc Encrypt(key, text string) string {\\n    block, err := aes.NewCipher([]byte(key))\\n    if err != nil {\\n        panic(err)\\n    }\\n    plaintext := []byte(text)\\n    cfb := cipher.NewCFBEncrypter(block, iv)\\n    ciphertext := make([]byte, len(plaintext))\\n    cfb.XORKeyStream(ciphertext, plaintext)\\n    return encodeBase64(ciphertext)\\n}\\n\\nfunc Decrypt(key, text string) string {\\n    block, err := aes.NewCipher([]byte(key))\\n    if err != nil {\\n        panic(err)\\n    }\\n    ciphertext := decodeBase64(text)\\n    cfb := cipher.NewCFBEncrypter(block, iv)\\n    plaintext := make([]byte, len(ciphertext))\\n    cfb.XORKeyStream(plaintext, ciphertext)\\n    return string(plaintext)\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"배경 지금 사용하는 시스템은 회원의 정보를 관리합니다.\ndb에 저장할때는 암호화된 정보로 저장합니다.\n암호화된 정보를 복호화 하기 위해서는 key…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/golang/2022-04-05-go-Encrypt-Decrypt","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}