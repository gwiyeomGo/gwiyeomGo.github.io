{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/golang/2022-11-02-go-containsMethod-for-slice","result":{"data":{"post":{"slug":"/golang/2022-11-02-go-containsMethod-for-slice","title":"Golang(Go) 배열에 포함하는지 확인하는 함수 (generics)","date":"02.11.2022","tags":[{"name":"GOLANG","slug":"golang"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Golang(Go) 배열에 포함하는지 확인하는 함수 (generics)\",\n  \"date\": \"2022-11-02T00:00:00.000Z\",\n  \"slug\": \"/golang/2022-11-02-go-containsMethod-for-slice\",\n  \"tags\": [\"GOLANG\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"func StringSliceContains(s []string, e string) bool {\\n    for _, a := range s {\\n        if a == e {\\n            return true\\n        }\\n    }\\n    return false\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"func Int64SliceContains(s []int64, e int64) bool {\\n    for _, a := range s {\\n        if a == e {\\n            return true\\n        }\\n    }\\n    return false\\n}\\n\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go 1.18+  \\uBD80\\uD130\\uB294 generics \\uC0AC\\uC6A9\\uC774 \\uAC00\\uB2A5\\uD558\\uB2E4!\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"func Contains[T comparable](s []T, e T) bool {\\n    for _, v := range s {\\n        if v == e {\\n            return true\\n        }\\n    }\\n    return false\\n}\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stackoverflow.com/questions/10485743/contains-method-for-a-slice\"\n  }, \"https://stackoverflow.com/questions/10485743/contains-method-for-a-slice\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Go 1.18+  부터는 generics 사용이 가능하다! https://stackoverflow.com/questions/10485743/contains-method-for-a-slice","timeToRead":1,"banner":null}},"pageContext":{"slug":"/golang/2022-11-02-go-containsMethod-for-slice","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}