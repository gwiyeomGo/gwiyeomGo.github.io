{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/mysql/2021-06-19-sql-gotestcaseEnvironment","result":{"data":{"post":{"slug":"/mysql/2021-06-19-sql-gotestcaseEnvironment","title":"테스트 케이스를 위한 환경 구성 (테스트 픽스처 설정)","date":"28.04.2021","tags":[{"name":"MYSQL","slug":"mysql"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"테스트 케이스를 위한 환경 구성 (테스트 픽스처 설정)\",\n  \"date\": \"2021-04-28T00:00:00.000Z\",\n  \"slug\": \"/mysql/2021-06-19-sql-gotestcaseEnvironment\",\n  \"tags\": [\"MYSQL\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uD14C\\uC2A4\\uD2B8 \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uC640 \\uD14C\\uC2A4\\uD2B8 \\uD53D\\uC2A4\\uCC98 \\uC124\\uC815\"), mdx(\"p\", null, \"\\uD14C\\uC2A4\\uD2B8 \\uCF54\\uB4DC\\uB97C \\uC2E4\\uD589\\uD558\\uAE30 \\uC704\\uD574\\uC11C\\uB294 \\uD14C\\uC2A4\\uD2B8 \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uC640 \\uB370\\uC774\\uD130\\uB294 \\uD14C\\uC2A4\\uD2B8 \\uD53D\\uC2A4\\uCC98\\uAC00 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uD14C\\uC2A4\\uD2B8 \\uD53D\\uC2A4\\uD168\\uB294 System Under Test\\uB97C \\uC2E4\\uD589\\uD558\\uAE30 \\uC704\\uD574 \\uD544\\uC694\\uD55C \\uBAA8\\uB4E0 \\uAC83\\uC744 \\uB9D0\\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"0.\\uBCC4\\uB3C4 \\uAD00\\uB9AC\\uAC00 \\uD544\\uC694 \\uC5C6\\uB294 \\uBA54\\uBAA8\\uB9AC \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 : sqlite\\nSQLite\\uB294 MySQL\\uB098 PostgreSQL\\uC640 \\uAC19\\uC740 \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uAD00\\uB9AC \\uC2DC\\uC2A4\\uD15C\\uC774\\uC9C0\\uB9CC, \\uC11C\\uBC84\\uAC00 \\uC544\\uB2C8\\uB77C \\uC751\\uC6A9 \\uD504\\uB85C\\uADF8\\uB7A8\\uC5D0 \\uB123\\uC5B4 \\uC0AC\\uC6A9\\uD558\\uB294 \\uBE44\\uAD50\\uC801 \\uAC00\\uBCBC\\uC6B4 \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\"), mdx(\"p\", null, \"\\uC774 \\uB370\\uC774\\uD130 \\uBCA0\\uC774\\uC2A4\\uB97C \\uC0AC\\uC6A9\\uD558\\uAE30 \\uC704\\uD574\\uC11C\\uB294\\xA03\\uAC1C\\uC758 \\uD30C\\uC77C\\uC744 \\uBCC0\\uACBD\\uD558\\uACE0 \\uCD94\\uAC00\\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uCCAB\\uBC88\\uC9F8 init_test.go \\uD30C\\uC77C\\uC744 \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\\ninit_test.go \\uD30C\\uC77C\\uC5D0\\uB294 \\uB2E4\\uC74C 3\\uAC00\\uC9C0 \\uC124\\uC815\\uC744 \\uD569\\uB2C8\\uB2E4.\\n0.config\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jinzhu/configor\"\n  }, \"https://github.com/jinzhu/configor\"), \"\\nconfig.InitConfig(\\\"config/config.json\\\")\\n1.echo \\uD504\\uB808\\uC784 \\uC6CC\\uD06C \\uC124\\uC815\\n2.DB \\uC5D4\\uC9C4 \\uC124\\uC815\\nxormEngine = common.InitTest()\"), mdx(\"p\", null, \"init_test.go \\uC804\\uCCB4 \\uCF54\\uB4DC\\npackage controllers\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\nimport (\\n    \\\"github.com/go-playground/validator/v10\\\"\\n    \\\"github.com/go-xorm/xorm\\\"\\n    \\\"github.com/labstack/echo\\\"\\n    _ \\\"github.com/mattn/go-sqlite3\\\"\\n    \\\"goods-donation-service/common\\\"\\n    \\\"goods-donation-service/config\\\"\\n)\\n\\nvar (\\n    echoApp          *echo.Echo\\n    xormEngine       *xorm.Engine\\n    handleWithFilter func(handlerFunc echo.HandlerFunc, c echo.Context) error\\n)\\n\\nfunc init() {\\n    config.InitConfig(\\\"config/config.json\\\")\\n    config.Config.Encrypt.GoodsEncryptKey = \\\"+KbPeShVmYq3t6w9z$C&F)J@NcQfTjWn\\\"\\n\\n    xormEngine = common.InitTest()\\n\\n    echoApp = echo.New()\\n    echoApp.Validator = &CustomValidator{validator: validator.New()}\\n    db := common.InitContextDB(xormEngine)\\n\\n    handleWithFilter = func(handlerFunc echo.HandlerFunc, c echo.Context) error {\\n        return db(handlerFunc)(c)\\n    }\\n}\\n\\ntype CustomValidator struct {\\n    validator *validator.Validate\\n}\\n\\nfunc (cv *CustomValidator) Validate(i interface{}) error {\\n    return cv.validator.Struct(i)\\n}\\n\\n\\n\")), mdx(\"p\", null, \"\\uB450\\uBC88\\uC9F8 test.go \\uD30C\\uC77C\\uC5D0 sqlite\\uB97C \\uC0AC\\uC6A9\\uD558\\uACA0\\uB2E4\\uACE0 \\uCF54\\uB4DC\\uB97C \\uCD94\\uAC00\\uD569\\uB2C8\\uB2E4.\\ncomon \\uB514\\uB809\\uD1A0\\uB9AC\\uC5D0 test.go\\uD30C\\uC77C\\uC5D0 sqlite\\uB97C \\uC0AC\\uC6A9\\uD558\\uACA0\\uB2E4\\uACE0 \\uCF54\\uB4DC\\uB97C \\uC785\\uB825\\uD569\\uB2C8\\uB2E4.\\nengine, err := xorm.NewEngine(\\\"sqlite3\\\", \\\":memory:\\\")\"), mdx(\"p\", null, \"test.go \\uC804\\uCCB4 \\uCF54\\uB4DC\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"package common\\n\\n\\nimport (\\n    \\\"github.com/go-xorm/xorm\\\"\\n    log \\\"github.com/sirupsen/logrus\\\"\\n    \\\"os\\\"\\n    \\\"runtime\\\"\\n    \\\"xorm.io/core\\\"\\n)\\n\\nfunc InitTest() *xorm.Engine {\\n    runtime.GOMAXPROCS(1)\\n    // Log as JSON instead of the default ASCII formatter.\\n    log.SetFormatter(&log.JSONFormatter{})\\n\\n    // Output to stdout instead of the default stderr\\n    // Can be any io.Writer, see below for File example\\n    log.SetOutput(os.Stdout)\\n\\n    // Only log the warning severity or above.\\n    log.SetLevel(log.InfoLevel)\\n\\n    engine, err := xorm.NewEngine(\\\"sqlite3\\\", \\\":memory:\\\")\\n    if err != nil {\\n        panic(err)\\n    }\\n    engine.ShowSQL(true)\\n    engine.Logger().SetLevel(core.LOG_INFO)\\n\\n    return engine\\n}\\n\\n\\n\")), mdx(\"p\", null, \"\\uC138\\uBC88\\uC9F8 fixture_test.go \\uD30C\\uC77C\\uC744 \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\\nfixture_test.go \\uC5D0\\uC11C\\uB294 \\uD14C\\uC2A4\\uD2B8 \\uCF54\\uB4DC\\uB97C \\uC791\\uC131\\uD560 \\uB54C \\uC0AC\\uC6A9\\uD560 TABLE\\uC744 \\uC124\\uC815\\uD569\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"    xormEngine.Sync2(\\n        new(entities.User),\\n        new(entities.Company),\\n    )\\n\\n\")), mdx(\"p\", null, \"\\uB610\\uD55C YML\\uC5D0 \\uB370\\uC774\\uD130 TABLE\\uC5D0 \\uCD94\\uAC00\\uD558\\uB294 \\uCF54\\uB4DC\\uB97C \\uC124\\uC815\\uD569\\uB2C8\\uB2E4.\\nfixtures, err := testfixtures.NewFolder(xormEngine.DB().DB, &testfixtures.SQLite{}, \\\"../testdata/db_fixtures\\\")\\n../testdata/db_fixtures \\uACBD\\uB85C\\uC5D0 \\uC788\\uB294 yml \\uD30C\\uC77C\\uC744 sqlLite DB\\uC5D0 (\\uBA54\\uBAA8\\uB9AC DB)\\uC5D0 \\uCD94\\uAC00\\uD558\\uACA0\\uB2E4.\"), mdx(\"p\", null, \"fixture_test.go \\uC804\\uCCB4 \\uCF54\\uB4DC\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"package controllers\\n\\nimport (\\n    \\\"fmt\\\"\\n    _ \\\"github.com/mattn/go-sqlite3\\\"\\n    \\\"goods-donation-service/entities\\\"\\n    \\\"gopkg.in/testfixtures.v2\\\"\\n)\\n\\ntype DatabaseFixture struct {\\n}\\n\\nfunc (DatabaseFixture) setUpDefault() {\\n    xormEngine.Sync2(\\n        new(entities.User),\\n        new(entities.Company),\\n    )\\n\\n    fixtures, err := testfixtures.NewFolder(xormEngine.DB().DB, &testfixtures.SQLite{}, \\\"../testdata/db_fixtures\\\")\\n    fmt.Println(\\\"=== RUN DatabaseFixture.setUpDefault\\\")\\n\\n    if err != nil {\\n        panic(err)\\n    }\\n    testfixtures.SkipDatabaseNameCheck(true)\\n\\n    if err := fixtures.Load(); err != nil {\\n        panic(err)\\n    }\\n    fmt.Println(\\\"=== FINISH DatabaseFixture.setUpDefault\\\")\\n}\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"테스트 데이터베이스와 테스트 픽스처 설정 테스트 코드를 실행하기 위해서는 테스트 데이터베이스와 데이터는 테스트 픽스처가 필요합니다. 테스트 픽스텨는 System Under Test를 실행하기 위해 필요한 모든 것을 말합니다.…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/mysql/2021-06-19-sql-gotestcaseEnvironment","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}