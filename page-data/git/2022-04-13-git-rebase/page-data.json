{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/git/2022-04-13-git-rebase","result":{"data":{"post":{"slug":"/git/2022-04-13-git-rebase","title":"Git Rebase 을 사용해서 커밋을 하나로 만들어보자","date":"13.04.2022","tags":[{"name":"GIT","slug":"git"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Git Rebase 을 사용해서 커밋을 하나로 만들어보자\",\n  \"date\": \"2022-04-13T00:00:00.000Z\",\n  \"slug\": \"/git/2022-04-13-git-rebase\",\n  \"tags\": [\"GIT\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\uD3C9\\uC18C \\uC0AC\\uC6A9 git\"), mdx(\"p\", null, \"\\uCC98\\uC74C\\uC5D0\\uB294 \\uC2DC\\uB2C8\\uC5B4 \\uAC1C\\uBC1C\\uC790\\uC758 \\uC9C0\\uC2DC\\uC5D0 \\uB530\\uB77C\\uC11C\\nbranch \\uB97C \\uB9CC\\uB4E4\\uB54C #\\uC744 \\uBD99\\uC600\\uB2E4.\\n\\uADF8\\uB9AC\\uACE0\\nbranch \\uC5D0\\uC11C \\uC791\\uC5C5 \\uD6C4 commit \\uD558\\uACE0\\n\\uB610 \\uADF8 branch \\uC5D0\\uC11C \\uC791\\uC5C5\\uD558\\uBA74 rebase \\uB97C \\uC0AC\\uC6A9\\uD574\\uC11C\\n\\uD558\\uB098\\uC758 commit \\uC73C\\uB85C \\uD569\\uCCE4\\uB2E4.\\n\\uC65C\\uC9C0...\"), mdx(\"h1\", null, \"rebase \\uB294 \\uC815\\uD655\\uD558\\uAC8C \\uC5B4\\uB5BB\\uAC8C \\uD574\\uC8FC\\uB294 \\uAC70\\uC9C0?\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git rebase -i HEAD~2\"), \"\\n\\uC9C1\\uC804 \\uCEE4\\uBC0B 2\\uAC1C\\uB97C \\uD569\\uCCD0\\uC900\\uB2E4\"), mdx(\"h1\", null, \"git conflict \\uC774\\uD6C4\\uC5D0\\uB3C4 rebase --continue \\uB97C \\uD574\\uC900\\uB2E4 \\uC65C?\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://baeji77.github.io/dev/git/etc/git-rebase-and-confilct-resolve/\"\n  }, \"rebase \\uB97C \\uD1B5\\uD55C conflict \\uD574\\uACB0 \\uBC29\\uBC95Permalink\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"평소 사용 git 처음에는 시니어 개발자의 지시에 따라서\nbranch 를 만들때 #을 붙였다.\n그리고\nbranch 에서 작업 후 commit 하고\n또 그 branch 에서 작업하면 rebase 를 사용해서\n하나의 commit…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/git/2022-04-13-git-rebase","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}