{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/git/2022-07-25-gitlab-how-to-know-latest-release-version","result":{"data":{"post":{"slug":"/git/2022-07-25-gitlab-how-to-know-latest-release-version","title":"gitLab 에서 특정 프로젝트의 배포버전을 알지?","date":"25.07.2021","tags":[{"name":"GITLAB","slug":"gitlab"},{"name":"GIT","slug":"git"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"gitLab 에서 특정 프로젝트의 배포버전을 알지?\",\n  \"date\": \"2021-07-25T00:00:00.000Z\",\n  \"slug\": \"/git/2022-07-25-gitlab-how-to-know-latest-release-version\",\n  \"tags\": [\"GITLAB\", \"GIT\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\uBC30\\uACBD\"), mdx(\"p\", null, \"1.\\uD604\\uC7AC \\uC2DC\\uC2A4\\uD15C\\uC740 \\uC6B4\\uC601\\uBC30\\uD3EC\\uB97C \\uD560 \\uB54C tag \\uB97C \\uBD99\\uC774\\uACE0 \\uBC30\\uD3EC\\uD569\\uB2C8\\uB2E4.\\n2. \\uAC00\\uC7A5 \\uCD5C\\uC2E0 \\uBC84\\uC804\\uC744 \\uC54C \\uC218 \\uC788\\uB294 \\uC694\\uC18C\\uB85C \\uBCF4\\uC785\\uB2C8\\uB2E4.\"), mdx(\"h1\", null, \"Tagging \\uBB54\\uAC00\\uC694?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://git-scm.com/book/en/v2/Git-Basics-Tagging\"\n  }, \"Tagging\"), \"\\uC744 \\uC0AC\\uC6A9\\uD558\\uC5EC \\uB9B4\\uB9AC\\uC2A4 \\uC9C0\\uC810\\uC744 \\uD45C\\uC2DC\\uD569\\uB2C8\\uB2E4.\")), mdx(\"h1\", null, \"gitLab \\uC5D0\\uC11C Tagging \\uC740..\"), mdx(\"p\", null, \"\\uBC30\\uD3EC \\uC804\\uC5D0 \\uD504\\uB85C\\uC81D\\uD2B8\\uC5D0\\uC11C\\ngitLab \\uC758 \\uC67C\\uCABD \\uC0AC\\uC774\\uB4DC \\uBA54\\uB274\\uC5D0\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Repository > Tags > New tag\"), \" \\uC5D0\\uC11C tag \\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.release\\ntag name,\\uBA54\\uC138\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uACE0 Tagging \\uD560 branch \\uB97C \\uC120\\uD0DD\\uD558\\uACE0 tag \\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\\n\\uADF8\\uB9AC\\uACE0 release\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Deployments > Releases > New release\"), \" \\uC5D0\\uC11C release \\uB97C \\uC0DD\\uC131\\uD558\\uACE0 tag \\uB97C \\uC120\\uD0DD\\uD55C\\uB2E4.\\n(\\uC774\\uB54C \\uC0AC\\uC6A9\\uD588\\uB358 tag \\uB294 Selected tag is already in use. Choose another option. \\uBB38\\uAD6C\\uCC98\\uB7FC \\uC0AC\\uC6A9 \\uBABB\\uD568\\uD568)\"), mdx(\"h1\", null, \"gitLab API \\uB97C \\uC5B4\\uB5BB\\uAC8C \\uC0AC\\uC6A9\\uD558\\uC9C0 ?\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"gitLab \\uBB38\\uC11C\\uB97C \\uCC3E\\uC544\\uBCF4\\uB2C8 Access Tokens \\uC744 \\uC0DD\\uC131\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"gitLab \\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"User Settings > Access Tokens\"), \" \\uC5D0\\uC11C \\uD1A0\\uD070 \\uC0DD\\uC131\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" Personal Access Tokens\\n You can generate a personal access token for each application you use that needs access to the GitLab API.\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Postman \\uC5D0\\uC11C \\uD2B9\\uC815 \\uD504\\uB85C\\uC81D\\uD2B8\\uC758 tag \\uBAA9\\uB85D\\uC744 \\uD638\\uCD9C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.gitlab.com/ee/api/tags.html\"\n  }, \"gitlab API \\uB9C1\\uD06C\"))), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"url :\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://gitlab.com/api/v4/projects/%7Bproject_id%7D/repository/tags\"\n  }, \"https://gitlab.com/api/v4/projects/{project_id}/repository/tags\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Authorization : Bearer {gitLab-token}\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content-Type : application/json;charset=UTF-8\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"project_id \\uB294 \\uC5B4\\uB5BB\\uAC8C \\uC54C\\uC9C0? => gitLab \\uC5D0\\uC11C \\uD2B9\\uC815 \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uC120\\uD0DD\\uD558\\uBA74 => \\uD574\\uB2F9 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC81C\\uBAA9 \\uBC11\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Project ID: 1111111\"), \" \\uC368\\uC788\\uB2E4\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uACB0\\uACFC\\uAC12\\uC740 \\uBC30\\uC5F4\\uB85C \\uC624\\uBA70 \\uB098\\uB294 \\uBC30\\uC5F4\\uC758 \\uCCAB \\uC694\\uC18C\\uB9CC \\uBC18\\uD658\\uD558\\uB294 API \\uB97C \\uB9CC\\uB4E4\\uC5C8\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[\\n    {\\n        \\\"name\\\": \\\"R-725.v2\\\",\\n        \\\"message\\\": \\\"7\\uC6D4 25\\uC77C \\uC6B4\\uC601\\uBC30\\uD3EC v2 - hotfix\\\",\\n        \\\"target\\\": \\\"\\\",\\n        \\\"commit\\\": {\\n          ...\\n        },\\n        \\\"release\\\": {\\n            \\\"tag_name\\\": \\\"R-725.v2\\\",\\n            \\\"description\\\": \\\"#32 \\uBAA9\\uB85D \\uD398\\uC774\\uC9C0 \\uC624\\uB958 \\uAC1C\\uC120\\\"\\n        },\\n\\n    }\\n ]\\n\")))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"배경 1.현재 시스템은 운영배포를 할 때 tag 를 붙이고 배포합니다.\n2. 가장 최신 버전을 알 수 있는 요소로 보입니다. Tagging 뭔가요? Tagging 을 사용하여 릴리스 지점을 표시합니다. gitLab 에서 Tagging…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/git/2022-07-25-gitlab-how-to-know-latest-release-version","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}