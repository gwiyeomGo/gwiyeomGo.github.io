{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/git/2022-04-11-git-cherry-pick","result":{"data":{"post":{"slug":"/git/2022-04-11-git-cherry-pick","title":"Git Cherry pick 을 사용해서 하나의 커밋만 운영에 배포 경험","date":"11.04.2022","tags":[{"name":"GIT","slug":"git"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Git Cherry pick 을 사용해서 하나의 커밋만 운영에 배포 경험\",\n  \"date\": \"2022-04-11T00:00:00.000Z\",\n  \"slug\": \"/git/2022-04-11-git-cherry-pick\",\n  \"tags\": [\"GIT\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"git cherry-pick\"), mdx(\"p\", null, \"\\uCEE4\\uBC0B\\uC744 \\uC120\\uD0DD\\uC801\\uC73C\\uB85C \\uBE0C\\uB79C\\uCE58\\uC5D0 \\uC801\\uC6A9\\uC2DC\\uD0AC \\uB54C \\uC0AC\\uC6A9\\uD55C\\uB2E4.\"), mdx(\"h1\", null, \"\\uBC30\\uACBD\"), mdx(\"p\", null, \"\\uC6B0\\uB9AC\\uB294 dev(\\uAC1C\\uBC1C\\uACC4),staging(\\uACC4\\uBC1C\\uACC42),master(\\uC6B4\\uC601) \\uBE0C\\uB7F0\\uCE58\\uAC00 \\uC788\\uB2E4\\n\\uBC30\\uD3EC\\uB0A0 master \\uC5D0 \\uAE09\\uD558\\uAC8C \\uACE0\\uCCD0\\uC57C\\uD560 \\uC774\\uC288\\uAC00 \\uC0DD\\uAE40\\nmaster \\uC5D0\\uC11C a branch \\uC0DD\\uC131\\uD558\\uACE0 master \\uB85C \\uBA38\\uC9C0\\uD568\\nmaster \\uC5D0 \\uBA38\\uC9C0\\uD588\\uB358 commit \\uC744 dev \\uC5D0 \\uCD94\\uAC00\\uC2DC\\uCF1C\\uC57C\\uD568\"), mdx(\"h4\", null, \"\\uD574\\uACB0 \\uBC29\\uBC95\"), mdx(\"p\", null, \"\\uB85C\\uCEEC\\uC5D0\\uC11C command \\uB85C \\uC9C1\\uC811 cheery pick \\uC744 \\uD574\\uC57C \\uD55C\\uB2E4\\uACE0 \\uD568\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"(master)    1 - 2  - hoxfix-2\\n                 \\\\   /(merge)\\n                hoxfix-2\\n\\nhoxfix-2 \\uC758 commit \\uD574\\uC26C \\uBCF5\\uC0AC ex) a123bced22\\n\\n(dev)  1 - 2 - 3  -  dev-cherry-3\\n                 \\\\    /(merge)\\n            dev-cherry-3\\n            git cherry-pick a123bced22\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"master \\uBE0C\\uB79C\\uCE58\\uC5D0\\uC11C\\ngit pull origin master\\n\\ngit checkout dev\\ngit pull origin dev\\ngit checkout -b dev-cherry-3\\n\\ngit checkout master\\ngit log --pretty=oneline\\n\\n>> (\\uCCB4\\uB9AC\\uD53D \\uD560 \\uCF54\\uB4DC) \\uBCF5\\uC0AC\\n\\ngit checkout dev-cherry-3\\ngit cherry-pick (\\uCCB4\\uB9AC\\uD53D \\uD560 \\uCF54\\uB4DC)\\n\\ngit push origin dev-cherry-3\\n\\n\\uC774\\uD6C4 mr\\uC744 staging\\uC73C\\uB85C\\n\")), mdx(\"h1\", null, \"\\uBC29\\uBC95 2 (cherry-pick a button) gitLab \\uC790\\uCCB4 cherry-pick a button \\uC788\\uC74C\"), mdx(\"p\", null, \"git \\uC758 origin \\uC758 dev \\uBE0C\\uB80C\\uCE58\\uC640 \\uAC19\\uC740 \\uD658\\uACBD\\uC744 \\uB85C\\uCEEC\\uC5D0 \\uBC1B\\uC74C\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git checkout -t origin/dev\"), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git remote update\")), mdx(\"p\", null, \"\\uADF8 \\uD6C4\\uC5D0 dev \\uC5D0\\uC11C branch \\uB97C \\uC0C8\\uB85C \\uC0DD\\uC131 (#1)\\n\\uC791\\uC5C5\\n\\uC791\\uC5C5 \\uD6C4 commit\\ngit push origin #1\\norigin \\uC758 #1 \\uC744 origin \\uC758 dev \\uB85C merge request\\nmerge \\uC774\\uD6C4 gitLab\\uC758 \\uACBD\\uC6B0 cherry-pick \\uBC84\\uD2BC \\uD074\\uB9AD\\n\\uD574\\uB2F9 commit \\uB9CC staging\\uC774\\uB098 master\\uB85C cherry-pick \\uAC00\\uB2A5\"), mdx(\"h1\", null, \"\\uCC38\\uACE0\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.gitlab.com/ee/user/project/merge_requests/cherry_pick_changes.html\"\n  }, \"gitLab docs\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://itzjamie96.github.io/2020/12/10/git-cherry-pick-basics/\"\n  }, \"https://itzjamie96.github.io/2020/12/10/git-cherry-pick-basics/\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://cjh5414.github.io/get-git-remote-branch/\"\n  }, \"https://cjh5414.github.io/get-git-remote-branch/\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"git cherry-pick 커밋을 선택적으로 브랜치에 적용시킬 때 사용한다. 배경 우리는 dev(개발계),staging(계발계2),master(운영) 브런치가 있다\n배포날 master 에 급하게 고쳐야할 이슈가 생김\nmaster 에서 a branch…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/git/2022-04-11-git-cherry-pick","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}