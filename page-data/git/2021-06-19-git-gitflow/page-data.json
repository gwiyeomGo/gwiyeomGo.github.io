{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/git/2021-06-19-git-gitflow","result":{"data":{"post":{"slug":"/git/2021-06-19-git-gitflow","title":"Git gitflow는 뭐지?","date":"19.06.2021","tags":[{"name":"GIT","slug":"git"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Git gitflow는 뭐지?\",\n  \"date\": \"2021-06-19T00:00:00.000Z\",\n  \"slug\": \"/git/2021-06-19-git-gitflow\",\n  \"tags\": [\"GIT\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\uBC30\\uACBD\"), mdx(\"p\", null, \"\\uC5EC\\uB7EC\\uBA85\\uC774 \\uD55C \\uD504\\uB85C\\uC81D\\uD2B8\\uC5D0\\uC11C \\uB2E4\\uC591\\uD55C \\uC791\\uC5C5\\uC744 \\uD558\\uAC8C \\uB418\\uC5C8\\uB2E4.\\n\\uC2A4\\uD504\\uB9B0\\uD2B8\\uB97C \\uB9E4\\uC8FC \\uC9C4\\uD589\\uD558\\uBA74\\uC11C \\uAC11\\uC790\\uAE30 \\uBC1C\\uC0DD\\uD558\\uB294 \\uC774\\uC288\\uB294 \\uC5B4\\uB5BB\\uAC8C \\uD574\\uACB0\\uD574\\uC57C \\uD560\\uAE4C?\\n\\uC5B4\\uB5A4 \\uC774\\uC288\\uB294 \\uC6B4\\uC601\\uACC4 \\uBC30\\uD3EC\\uD558\\uC9C0 \\uC54A\\uACE0 \\uB2E4\\uC74C\\uC5D0 \\uBC30\\uD3EC\\uD574\\uC57C\\uD558\\uB294\\uB370 \\uC5B4\\uB5BB\\uAC8C \\uAD00\\uB9AC\\uD558\\uC9C0?\\n\\uC2DC\\uB2C8\\uC5B4 \\uAC1C\\uBC1C\\uC790\\uB2D8\\uC758 \\uC870\\uC5B8\\uC740 git flow\\uC5D0 \\uAD00\\uD574\\uC11C \\uACF5\\uBD80\\uD558\\uB77C\\uB294 \\uC870\\uC5B8\\uC744 \\uC5BB\\uC5C8\\uB2E4.\"), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://github.com/nvie/gitflow\"\n  }, \"git flow\"), \" \\uC815\\uC758\"), mdx(\"p\", null, \"\\uC704\\uD0A4\\uC5D0 \\uCC3E\\uC558\\uC744 \\uB54C \\uC815\\uC758\\uAC00 \\uB098\\uC624\\uC9C0 \\uC54A\\uC544\\uC11C \\uC5EC\\uB7EC\\uBC88 \\uAC80\\uC0C9\\uD558\\uB2E4\\uAC00 github\\uC5D0\\uC11C git flow \\uCF54\\uB4DC\\uB97C \\uC54C\\uAC8C\\uB418\\uC5C8\\uB2E4.\\n\\uADF8\\uACF3\\uC5D0\\uB294 \\uC544\\uB798\\uC640 \\uAC19\\uC774 git flow\\uB97C \\uC815\\uC758\\uD558\\uACE0 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"A collection of Git extensions to provide [high-level repository operations](\\uB192\\uC740 \\uC218\\uC900\\uC758 \\uC800\\uC7A5\\uC18C \\uC791\\uC5C5) for Vincent Driessen's branching model\\n\")), mdx(\"p\", null, \"Vincent Driessen\\uC758 branching model\\uC5D0 \\uB300\\uD55C \\uB192\\uC740 \\uC218\\uC900\\uC758 \\uC800\\uC7A5\\uC18C \\uC791\\uC5C5\\uC744 \\uC81C\\uACF5\\uD558\\uAE30 \\uC704\\uD55C Git \\uD655\\uC7A5 \\uBAA8\\uC74C\"), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://ujuc.github.io/2015/12/16/git-flow-github-flow-gitlab-flow/\"\n  }, \"git flow \\uC124\\uBA85\")), mdx(\"p\", null, \"\\uC744 \\uBCF4\\uBA74 \\uAC01\\uAC01\\uC758 branch\\uB97C \\uC6A9\\uB3C4\\uC5D0 \\uB530\\uB77C \\uC774\\uB984\\uC744 \\uC815\\uD558\\uACE0 \\uC0AC\\uC6A9\\uD558\\uACE0 \\uC788\\uB2E4.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"feature > develop > release > hotfix > master \")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"배경 여러명이 한 프로젝트에서 다양한 작업을 하게 되었다.\n스프린트를 매주 진행하면서 갑자기 발생하는 이슈는 어떻게 해결해야 할까?\n어떤 이슈는 운영계 배포하지 않고 다음에 배포해야하는데 어떻게 관리하지?\n시니어 개발자님의 조언은 git flow…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/git/2021-06-19-git-gitflow","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}