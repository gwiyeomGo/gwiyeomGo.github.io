{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-typescript-2024-03-13-typescript-omit-mdx-7600a54b5fe31148d3dc.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,WAAY,aACZC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,MACFC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,UAAW,KAAMU,EAAAA,cAAoBb,EAAYI,WAAY,KAAM,KAAMS,EAAAA,cAAoBb,EAAYK,EAAG,KAAM,8HAA+H,MAAO,KAAMQ,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,KAAMO,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,gBAAiB,KAAMM,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,iCAAkC,MAAO,KAAMM,EAAAA,cAAoBb,EAAYK,EAAG,KAAM,qCAAsC,KAAMQ,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,+IAAgJ,KAAMI,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,sBAAuB,KAAMU,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,KAAMO,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,gBAAiB,KAAMM,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,kCAAmC,MAAO,KAAMM,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,8IAA+I,KAAMI,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,KAAMO,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,iGAAkG,KAAMM,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,qDAAsD,MAAO,KAAMM,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYK,EAAG,KAAMQ,EAAAA,cAAoBb,EAAYU,EAAG,CAC10DI,KAAM,oFACL,oFAAqF,KAAMD,EAAAA,cAAoBb,EAAYU,EAAG,CAC/HI,KAAM,0FACL,2FACL,CAKA,MAJA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWjB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCnBe,SAASkB,EAAiBlB,GACvC,OAAOc,EAAAA,cAAoBK,EAAAA,EAAenB,EAAOc,EAAAA,cAAoBM,EAAqBpB,GAC5F,CAHAmB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/typescript/2024-03-13-typescript-omit.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"언제 사용?\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"In TypeScript, the built-in Omit type is used to create a new type that excludes specific properties from an existing type\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"유틸리티 타입 중 하나\"), \"\\n\", React.createElement(_components.li, null, \"기존 타입에서 특정 속성을 제외한 새로운 타입을 생성\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ex) 'age' 속성 제외한 새 타입 AgelessUser\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"type User = {\\nname: string;\\nage: number;\\n}\\ntype AgelessUser = Omit<User, 'age'>;\\nconst ricky: AgelessMapache = { name: 'gwiyeom' };\\n\")), \"\\n\", React.createElement(_components.h1, null, \"Omit과 정반대의 역할 Pick\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"유틸리티 타입 중 하나\"), \"\\n\", React.createElement(_components.li, null, \"기존 타입에서 특정 속성만 선택하여 새로운 타입을 생성\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"type User = {\\nname: string;\\nage: number;\\n}\\ntype OnlyUserName = Pick<User, 'name'>;\\nconst name: OnlyUserName = { name: 'gwiyeom' };\\n\")), \"\\n\", React.createElement(_components.h1, null, \"주의\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We should avoid using Omit and prefer Pick when we have more properties to omit than to pick.\"), \"\\n\", React.createElement(_components.li, null, \"제외할 프로퍼티가 선택할 프로퍼티 보다 많은 경우 Omit 을 피하고 Pick 을 선호`\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://medium.com/totally-typescript/how-to-use-omit-in-typescript-966eae420e9f\"\n  }, \"https://medium.com/totally-typescript/how-to-use-omit-in-typescript-966eae420e9f\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://refine.dev/blog/typescript-omit-utility-type/#typescript-omittype-keys-example\"\n  }, \"https://refine.dev/blog/typescript-omit-utility-type/#typescript-omittype-keys-example\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/client/typescript/2024-03-13-typescript-omit.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","blockquote","p","ul","li","pre","code","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}