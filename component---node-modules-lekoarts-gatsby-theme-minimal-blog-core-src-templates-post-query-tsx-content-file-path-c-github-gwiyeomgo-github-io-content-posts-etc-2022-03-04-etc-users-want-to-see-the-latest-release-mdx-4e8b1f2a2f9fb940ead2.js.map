{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-etc-2022-03-04-etc-users-want-to-see-the-latest-release-mdx-4e8b1f2a2f9fb940ead2.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,WAAY,eACXC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,MAAO,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,8DAA+D,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,yDAA0D,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAMK,EAAAA,cAAoBT,EAAYK,EAAG,CACzYK,KAAM,gEACL,kCAAmC,mBAAoB,KAAMD,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,+DAAgE,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,qFAAsF,KAAMK,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,uBAAwB,KAAMM,EAAAA,cAAoBT,EAAYM,WAAY,KAAM,KAAMG,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,cAAe,MAAO,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,yHAA0H,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,iEAAkE,KAAMK,EAAAA,cAAoBT,EAAYM,WAAY,KAAM,KAAMG,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,eAAgB,MAAO,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,wIAAyI,KAAMK,EAAAA,cAAoBT,EAAYM,WAAY,KAAM,KAAMG,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,gBAAiB,MAAO,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,yIAA0I,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,8DAA+D,KAAMK,EAAAA,cAAoBT,EAAYM,WAAY,KAAM,KAAMG,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,kBAAmB,MAAO,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,4EAA6E,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,6DACvxD,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCbe,SAASc,EAAiBd,GACvC,OAAOU,EAAAA,cAAoBK,EAAAA,EAAef,EAAOU,EAAAA,cAAoBM,EAAqBhB,GAC5F,CAHAe,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/etc/2022-03-04-etc-Users-want-to-see-the-latest-release.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"3/3일 운영배포때 코드 수정해서 배포했습니다.\\r\\n운영계 테스트 계정으로는 더이상 발생하지 않습니다.\"), \"\\n\", React.createElement(_components.p, null, \"그런데 같은 에러가 발생했고\\r\\n사용자 브라우저 캐시가 남아있어서 발생하는 것으로 예상됩니다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://gwiyeomgo.github.io/etc/2022-03-04-etc-browser-cache\"\n  }, \"브라우저 캐쉬를 관리해 보려고 여러가지 찾아봤는데...\"), \"\\r\\n너무 삽질하고 있었다\"), \"\\n\", React.createElement(_components.p, null, \"문제는 결국\\r\\n사용자가 어드민 화면에 오랜시간 켜둔채 접속했을 때\\r\\n최신 버전을 알고싶다는 욕구이다\"), \"\\n\", React.createElement(_components.p, null, \"그래서 사용자가 최신버전을 알기 위해서\\r\\nversion 을 table로 관리하고 어드민 화면에서 버전을 비교하고 새로고침하도록 진행하기로 했다\"), \"\\n\", React.createElement(_components.h3, null, \"업무하면서 적었던 기록 (진행과정)\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"2022-08-11\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"어드민 어카운트에서 api 는 생성\\r\\n실제로 어드민 화면을 배포 완료했을 때 api 를 call 하는 방법이 궁금\\r\\n어드민 코드에서 배포 버전 조회 api 를 가져와서 저장=> 로그인 시점? 언제 호출?\"), \"\\n\", React.createElement(_components.p, null, \"..아,,버전은 배포하면 내가 수동으로 create 하자\\r\\n화면에서 버전확인하고 새로고침하는 기능을 만들자\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"2022 -07-26\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"현재 운영 배포시에만 tag 를 생성\\r\\nbranch 별 상황을 고려해서 코드 수정 필요\\r\\n=> 피드백 :  gitLab 을 호출하지 않고\\r\\n그냥 version table 에 임의로 작성한 version 을 추가하면 될 거 같다\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"2022 - 07-25\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"오늘 진행\\r\\ngitLab api 로 release 버전을 받고 저장\\r\\nrefreash token 발급 후 api 호출 version 확인\\r\\n질문& 현재 상황\\r\\ncreate 함수를 만들었는데\\r\\n배포했을 때 어떻게 호출하지?\"), \"\\n\", React.createElement(_components.p, null, \"특정 프로젝트의 tags 를 호출했는데 ... 특정 프로젝트의 branch 의 tag 도 호출 가능한가?\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"2022 - 07 - 18\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"version table을 생성하고 API 를 통해서 버전을 확인하고 프론트에서 버전이 다를 때 새로고침하도록 변경하려고 합니다.\"), \"\\n\", React.createElement(_components.p, null, \"완료기준 : 어드민 화면을 켜 놓고 staging 에서 배포 후\\r\\n화면이 자동 새로고침 된다면 완료\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/etc/2022-03-04-etc-Users-want-to-see-the-latest-release.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","a","blockquote","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}