{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-server-golang-2021-08-19-go-echo-framework-mdx-dcca8b36b64ad2c76850.js","mappings":"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","sources":["webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://gwiyeom-blog/./content/posts/server/golang/2021-08-19-go-echo-framework.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/seo.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    h1: \"h1\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://echo.labstack.com/\"\n  }, \"ehco프레임워크\"), \" 를 사용하면서 사용했던 내용 기록\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"ctx ? ctx echo.Context\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"     Context represents the context of the current HTTP request. It holds request and response objects, path, path parameters, data and registered handler.\\n\")), \"\\n\", React.createElement(_components.h3, null, \"ctx가 필요한 이유\"), \"\\n\", React.createElement(_components.p, null, \"인터페이스?\\r\\n팩토리를 통해서 의존성주입\\r\\n폴더만들때 복수?사상의차이\\r\\n팩토리난에 스트럭트 이름은 new로시작\\r\\n쉬프투 f6\\r\\n싱글톤\\r\\n리시버\\r\\n목객체?mock\\r\\n덕타이핑\\r\\n의존성을 느슨하게\\r\\nmock을 자동으로 준다\"), \"\\n\", React.createElement(_components.p, null, \"단위테스트\\r\\ns-r2\"), \"\\n\", React.createElement(_components.h3, null, \"omitempty 가 뭐지?\"), \"\\n\", React.createElement(_components.h2, null, \"db를 dev에 만들고\"), \"\\n\", React.createElement(_components.p, null, \"echo 가 하는일이\\r\\nrequest,response 를 할때 중간에 middleware가 잡아주는 역할을 한다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"e.Use\"), \"의 argument로 넣은 함수가 moddleware\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"e.HTTPErrorHandler\"), \" 에러가 발생하면 발동한다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"e.Pre\"), \" 는 url 에 /가 있다면 빼주는 역할\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"middleware.CORS\"), \" 받을 메소드를 지정한다\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"e.Validator\"), \" validator 지정 => registernumber 등등 코드에는 RegisterValidation 함수를 넣어 커스톰 해줬다\"), \"\\n\", React.createElement(_components.p, null, \"main() config ,xormDb(db설정 셋팅) 는 1번만 설정된다\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"e.Use(handel.Create~)\"), \"\\r\\nNewSession =>  트랜젝션 시작 (세션을 열어준다)\"), \"\\n\", React.createElement(_components.p, null, \"echo의 context 는  결국 변수다\"), \"\\n\", React.createElement(_components.p, null, \"request 에는 많은 정보가  잇고 이것을 echo가 담아놓은것\"), \"\\n\", React.createElement(_components.p, null, \"echo 자체에 토큰을 파싱해주는 parsendToken.Claims.~\"), \"\\n\", React.createElement(_components.p, null, \"토큭 파싱한 정보를 우리 코드에 설정\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"CreateTokenWithExpire\"), \"\\r\\n처음 접근할때 memberId있는거 확인하고 토큰을 생성해 프론트로 보낸다\\r\\n서버쪽 코드에서 cookie가 있는지도 확인하는 코드도 있다\"), \"\\n\", React.createElement(_components.p, null, \"routing\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"e.Start\"), \" webserver start\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"Logger\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"middleware.ReauestId\"), \" call마다 유니크한 id 를 생성한다.\"), \"\\n\", React.createElement(_components.p, null, \"JWTWithConfig => jwt 토큰 확인\\r\\nsetSession => echo가 token을 분석해 꺼내서 user consetx로\\r\\nsetXormSession으로 이름 변경\"), \"\\n\", React.createElement(_components.p, null, \"get할때는 session.Begin 을 안한다 sessioin 하면 비용 많이듬\"), \"\\n\", React.createElement(_components.p, null, \"db session 과 log session 같이 만듬\"), \"\\n\", React.createElement(_components.p, null, \"de seesion은 중간 오류시 rollback,commit\\r\\nlog session은 끝까지 간다\"), \"\\n\", React.createElement(_components.p, null, \"context.DB(c) => 이런식으로\"), \"\\n\", React.createElement(_components.p, null, \"exp 등 고정된 key값을 echo가 자동으로 알고 분석\"), \"\\n\", React.createElement(_components.p, null, \"echo\\r\\nContext 안에는\\r\\nUser\\r\\nRequest\\r\\nResponse 가 있는데 자동으로 echo가 넣음\"), \"\\n\", React.createElement(_components.p, null, \"setSession에서 c.Get(\\\"user\\\").(*jwt.Token) 으로 형변환\"), \"\\n\", React.createElement(_components.p, null, \"rawClaims 는 map으로 되어있어서 struct 로 바꿔주는 작업이 MapToStruct 를 만들어 쓰기로힘\"), \"\\n\", React.createElement(_components.p, null, \"request_id => echo기능으로 자동으로 얻음\"), \"\\n\", React.createElement(_components.p, null, \"function에서 function에서 값을 넘기려면 파라미터에 추가해서 넣어야 하는데\\r\\necho가 context에 넣어 줌으로 모든 function으로 이동이 자유롭도록\\r\\n\", React.createElement(_components.code, null, \"getUserClaim\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"serLogger\"), \"\\r\\n\", React.createElement(_components.code, null, \"c.Set\"), \" context에 저장한다는 뜻\"), \"\\n\", React.createElement(_components.p, null, \"기존에 log.infln 으로 했는데\"), \"\\n\", React.createElement(_components.p, null, \"requst _id를 logger에 같이 넣고 싶어서\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"l := logrus.WithFields )\\r\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"사용할때는 context.Log(c).Token(\\\"\\\")\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"e.HideBanner\")), \"\\n\", React.createElement(_components.p, null, \"실행시 echo 메세지 지움\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \".bodyDump\"), \" 를 하면 request ,response 정보모두 한눈에 log가 찍힘 => 이건 더 테스트\"), \"\\n\", React.createElement(_components.p, null, \"이제는 controller 대신 handler 로 이름 바꿔서 쓰다\"), \"\\n\", React.createElement(_components.p, null, \"assets => html 이나 이미지\"), \"\\n\", React.createElement(_components.p, null, \"common은 공통 func 넣을 예정\"), \"\\n\", React.createElement(_components.p, null, \"비즈니스로직은 handler\"), \"\\n\", React.createElement(_components.p, null, \"context.Log log 가져옴\\r\\ncontext.DB\\r\\n등 쉽게 가져오게 하려고 만듬\"), \"\\n\", React.createElement(_components.p, null, \"폴더 이름\\r\\norg\\r\\ngoods\\r\\napplication\\r\\nreports\"), \"\\n\", React.createElement(_components.p, null, \"enum?\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"CRUD 에 썼던 DTO => OrgCUD 에 공통함수\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Query  =>orgQuery => get\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"dto를 만들지 않고 query에서는 *로 찾지 않고 필요한거 컬럼에 넣어서 해야 한다\"), \"\\n\", React.createElement(_components.p, null, \"interface적용\"), \"\\n\", React.createElement(_components.p, null, \"handerInterface\\r\\nRouteDefault\"), \"\\n\", React.createElement(_components.p, null, \"Org\", \".Init() 는 crud\\\\\"), \"\\n\", React.createElement(_components.p, null, \"internal에 entity 들어가 있음\"), \"\\n\", React.createElement(_components.p, null, \"dto service rpository 합친게 service 폴더\"), \"\\n\", React.createElement(_components.p, null, \"private public  handle까지 오픈하고 싶은데.. 그럼 딴데서 사용 x\\r\\ninternal 안에 있는 pulbic 대문자로 쓰더라도\\r\\nmoddleware에서는 부를 수 없다\\r\\nhandle 에서는 부를 수 잇다\\r\\n폴더 구조의 상위에서만 부를 수 있다\"), \"\\n\", React.createElement(_components.p, null, \"service 는 형제는 못부르고 부모handel만 부를 수 있다\\r\\n나머지는 다 안됨\"), \"\\n\", React.createElement(_components.p, null, \"entiyInterface\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"https://echo.labstack.com/guide/binding/\"\n  }, \"echo Struct Tag Binding\")), \"\\n\", React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"2022/11/17\\r\\n그런데 field 의 타입을 json 으로 쓴 경우 request body 를 bind 한다고 생각하기 때문에\\r\\nbody 값이 없어서 required tag 로 에러가 발생했다.\\r\\n\", React.createElement(_components.code, null, \"Key: 'verification.Name' Error:Field validation for 'Name' failed on the 'required' tag\")), \"\\n\", React.createElement(_components.p, null, \"기존에 1.16 버전 사용시 ctx.Bind 를 했을 때 field 의 타입을 json 으로 써도 통과가 되었는데 더 엄격하게 변경된거 같다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Data Sources\\r\\nEcho supports the following tags specifying data sources:\\r\\n\\r\\nquery - query parameter\\r\\nparam - path parameter (also called route)\\r\\nheader - header parameter\\r\\njson - request body. Uses builtin Go json package for unmarshalling.\\r\\nxml - request body. Uses builtin Go xml package for unmarshalling.\\r\\nform - form data. Values are taken from query and request body. Uses Go standard library form parsing.\\n\")), \"\\n\", React.createElement(_components.h3, null, \"json 사용 경험\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"파일 업로드 기능이 필요\"), \"\\n\", React.createElement(_components.li, null, \"파일을 S3 에 저장하고 url을 받고 있음\"), \"\\n\", React.createElement(_components.li, null, \"client 에서 service로 여러개의 파일을 보내야 하는 상황\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"{data:\\\"https://test\\\",data2:\\\"https://test2\\\"}\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"client 에서 service로 json 데이터를 전송\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"{\\r\\n  files:{data:\\\"https://test\\\",data2:\\\"https://test2\\\"}\\r\\n}\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"(echo contex 를 사용할 경우) 서비스 에서는 어떻게 json 형태를 인식할까?\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"go에서는 encoding/json 패키지를 사용해서 JSON 인코딩을 합니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Data struct filed 에 json.RawMessage 타입을 지정합니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"type Data struct {\\r\\n  files             json.RawMessage     `query:\\\"files'\\\"`\\r\\n}\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"echo.Context  \", React.createElement(_components.code, null, \"c.Bind(&Data)\"), \" 를 사용하면 Data struct 에 bind 됩니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"echo PathParamsBinder\"), \"\\n\", React.createElement(_components.p, null, \"4/18\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"var application service.ApplicationRepository\\r\\n\\r\\n\\tvar id int64\\r\\n\\tvar key int64\\r\\n\\tif err := echo.PathParamsBinder(c).Int64(\\\"id\\\", &id).Int64(\\\"key\\\", &key).BindError(); err != nil {\\r\\n\\t\\treturn err\\r\\n\\t}\\n\")), \"\\n\", React.createElement(_components.p, null, \"#참고\\r\\n\", React.createElement(_components.a, {\n    href: \"https://mingrammer.com/translation-go-walkthrough-encoding-json-package/\"\n  }, \"https://mingrammer.com/translation-go-walkthrough-encoding-json-package/\"), \"\\r\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/labstack/echo/blob/master/binder_test.go\"\n  }, \"https://github.com/labstack/echo/blob/master/binder_test.go\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/server/golang/2021-08-19-go-echo-framework.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","Seo","description","excerpt","image","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","styles","_t$styles","to","replaceSlashes","name","_createMdxContent","_components","Object","assign","h3","blockquote","p","pre","code","h2","ol","li","h1","ul","_provideComponents","components","href","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}