{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-git-2021-06-19-git-gui-mdx-aeef0fd0b7a6138a8b77.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,OAAQ,SACRC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,gBAAiB,KAAMU,EAAAA,cAAoBb,EAAYG,GAAI,KAAMU,EAAAA,cAAoBb,EAAYI,OAAQ,KAAM,uCAAwC,KAAMS,EAAAA,cAAoBb,EAAYK,GAAI,KAAMQ,EAAAA,cAAoBb,EAAYM,EAAG,CACnUQ,KAAM,kCACL,kBAAmB,sBAAuB,KAAMD,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,2CAA4C,KAAMU,EAAAA,cAAoBb,EAAYO,IAAK,CAClLQ,IAAK,iBACLC,IAAK,YACH,KAAMH,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,aAAc,KAAMU,EAAAA,cAAoBb,EAAYO,IAAK,CAC3GQ,IAAK,mBACLC,IAAK,cACH,KAAMH,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,+BAAgC,KAAMU,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,KAAMK,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,iCAAkC,MAAO,KAAMI,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,2BAA4B,KAAMU,EAAAA,cAAoBb,EAAYU,EAAG,KAAM,8FAA+FG,EAAAA,cAAoBb,EAAYM,EAAG,CACxdQ,KAAM,mCACL,oCAAqC,KAAMD,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,2CAA4C,KAAMU,EAAAA,cAAoBb,EAAYU,EAAG,KAAMG,EAAAA,cAAoBb,EAAYO,IAAK,CACtNQ,IAAK,mBACLC,IAAK,cACH,6FAA8F,KAAMH,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,iCAAkC,KAAMU,EAAAA,cAAoBb,EAAYU,EAAG,KAAM,6CAA8CG,EAAAA,cAAoBb,EAAYO,IAAK,CACpTQ,IAAK,mBACLC,IAAK,eACF,KAAMH,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,yBAA0B,KAAMU,EAAAA,cAAoBb,EAAYU,EAAG,KAAM,2DAA4D,KAAMG,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,kBAAmB,KAAMU,EAAAA,cAAoBb,EAAYU,EAAG,KAAM,gDAAiDG,EAAAA,cAAoBb,EAAYO,IAAK,CAChYQ,IAAK,mBACLC,IAAK,eAET,CAKA,MAJA,SAAoBjB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWnB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UClCe,SAASoB,EAAiBpB,GACvC,OAAOc,EAAAA,cAAoBO,EAAAA,EAAerB,EAAOc,EAAAA,cAAoBQ,EAAqBtB,GAC5F,CAHAqB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/git/2021-06-19-git-gui.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    strong: \"strong\",\n    h4: \"h4\",\n    a: \"a\",\n    img: \"img\",\n    ol: \"ol\",\n    li: \"li\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"git GUI 사용하기\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.strong, null, \"git gui : 프로젝트 히스토리를 시각화하여 도와주는 도구\")), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.a, {\n    href: \"https://www.sourcetreeapp.com/\"\n  }, \"sourceTree url\"), \" 에서 다운로드 할 수 있습니다.\"), \"\\n\", React.createElement(_components.h3, null, \"★ (커밋,pull,push,패치,브랜티,병합) 만 사용하시면 됩니다.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"../img/img.png\",\n    alt: \"img.png\"\n  }), \"\\n\", React.createElement(_components.h3, null, \"[0] 패치 하기\"), \"\\n\", React.createElement(_components.img, {\n    src: \"../img/img_1.png\",\n    alt: \"img_1.png\"\n  }), \"\\n\", React.createElement(_components.h3, null, \"[1] 기존에 pc에 저장된 코드를 불러오는 방법\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"+버튼을 클릭하고 저장된 위치를 설정하고 추가합니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"[2] 새로 git 코드를 clone 받기\"), \"\\n\", React.createElement(_components.p, null, \"Git 소스코드 Clone할떄는 SSH보다 HTTPS로 진행하시면 더 쉽게 셋팅하실 수 있습니다.\\r\\n아래 블로그 내용을 따라하시면 쉽게 설치 가능합니다.\\r\\n\", React.createElement(_components.a, {\n    href: \"https://gocoder.tistory.com/739\"\n  }, \"https://gocoder.tistory.com/739\")), \"\\n\", React.createElement(_components.h3, null, \"[3]origin의 브런치 develop로 로컬에서 체크아웃 하는 방법\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"../img/img_2.png\",\n    alt: \"img_2.png\"\n  }), \"\\r\\n1.원격에서 origin에서 develop를 클릭 > 마우스 오른쪽 '체크아웃 origin/develop'를 클릭 >브랜치에 develop가 생성됩니다.\"), \"\\n\", React.createElement(_components.h3, null, \"[4]로컬 develop 브런치에서 새 브런치 만들기\"), \"\\n\", React.createElement(_components.p, null, \"develop클릭하고 상단에 '브랜치'를 클릭하고 브런치 생성합니다.\\r\\n\", React.createElement(_components.img, {\n    src: \"../img/img_3.png\",\n    alt: \"img_3.png\"\n  })), \"\\n\", React.createElement(_components.h3, null, \"[5] 생성된 브런치에서 커밋하는 방법\"), \"\\n\", React.createElement(_components.p, null, \"1.스테이지에 올라가지 않은 파일을 스테이지에 올려줍니다.\\r\\n2.메세지 입력 후 커밋 버튼 클릭\"), \"\\n\", React.createElement(_components.h3, null, \"[6] 커밋 이후 푸시하기\"), \"\\n\", React.createElement(_components.p, null, \"ex) 작업 완료한 브런치'38' 를 클릭한 상태에서 push 버튼을 클릭\\r\\n\", React.createElement(_components.img, {\n    src: \"../img/img_5.png\",\n    alt: \"img_5.png\"\n  })));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/etc/gwiyeomgo.github.io/content/posts/git/2021-06-19-git-gui.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","strong","h4","a","img","ol","li","p","_provideComponents","components","React","href","src","alt","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}