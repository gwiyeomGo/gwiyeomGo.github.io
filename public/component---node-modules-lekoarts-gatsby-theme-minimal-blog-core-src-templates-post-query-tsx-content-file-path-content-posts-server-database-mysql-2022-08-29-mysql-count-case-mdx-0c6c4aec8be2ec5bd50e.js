"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[7452],{422:function(e,t,n){n.r(t),n.d(t,{Head:function(){return u.F},default:function(){return E}});var l=n(7294),a=n(1151);function r(e){const t=Object.assign({blockquote:"blockquote",p:"p",h1:"h1",pre:"pre",code:"code",ul:"ul",li:"li",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",a:"a"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"2022-08-29"),"\n"),"\n",l.createElement(t.h1,null,"배경"),"\n",l.createElement(t.p,null,"프론트 화면에서 기부 목록을 가져온다.\r\n이때\r\n전체 기부 횟수\r\n올해 기부 횟수\r\n올해 기부영수증 횟수\r\n신청이 가능한데 아직 신청 하지 않은 횟수(올해)\r\n를 한번에 보고 싶다는 요청이 있었다."),"\n",l.createElement(t.p,null,"기존에는 사용자의 기부 목록 조회 api 를 queryParams 만 다르게 사용하셔서 4번 호출하셨다고한다.."),"\n",l.createElement(t.h1,null,"어떻게 한번만 불러서 4개의 횟수 데이터를 가져올 수 있을까?"),"\n",l.createElement(t.p,null,"사용자의 기부 목록 조회 api 는 여러 테이블이 left,inner join 된 쿼리가 존재한다\r\nif 문에서 queryParams 조건만 다르면 된다"),"\n",l.createElement(t.h1,null,"최초시도.."),"\n",l.createElement(t.p,null,"우선 service 에서 4개의 조건을 map으로 만들어서\r\n4번 db 를 조회하는 코드를 만들었고\r\n실행시간이 4초가 걸렸다."),"\n",l.createElement(t.p,null,"이렇게 여러번 가는 것은 느리며 좋지 않은 코드라고 생각하고\r\n한번에 여러경우를 알 수 있는 case 문 과 count 함수를 사용하기로 했다"),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"SELECT\r\nCOUNT(*) as allDonationsCount,\r\nCOUNT(CASE WHEN e.receipt_available+s.receipt_available = 2 and r.donation_id is null and( mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31' ))then 1 else null END) as notAppliedReceiptsCount,\r\nCOUNT(CASE WHEN ( mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31')) then 1 else null END)  as thisYearDonationsCount,\r\nCOUNT(CASE WHEN (r.donation_id > 0  and mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) >= '2022-01-01' and  (mid(JSON_EXTRACT(donations.created, '$.datetime'), 2, 10) <= '2022-12-31')) then 1 else null END)  as appliedReceiptsCount\r\nFROM donations\r\nINNER JOIN eval_types as e ON donations.eval_type = e.type and e.deleted_at is null\r\nINNER JOIN statuses as s ON donations.status = s.status\r\nLEFT JOIN donors as r ON donations.id = r.donation_id and r.deleted_at is null WHERE (donations.deleted_at is null)\r\nAND (donations.member_id = 1) ORDER BY donations.id DESC;\n")),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"2023-09-14"),"\n"),"\n",l.createElement(t.h1,null,"배경"),"\n",l.createElement(t.p,null,"예약발송 기능이 기존에 있었는데 즉시발송 기능이 추가되었다\r\n각 매장마다 월 5회로 예약건수를 제한했었다\r\n기능 추가로 즉시발송 건수와 예약건수 합계가 5회로 제한되도록 결정했고"),"\n",l.createElement(t.p,null,"하나의 테이블에서 특정 매장에 월 발송건,예약건을 조회하는 방법을 찾아야햇다"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"발송타입이 A인 경우와 예약일이 2023년 7월인 경우를 카운트하고,\r\n발송타입이 B인 경우와 발송일이 2023년 7월인 경우를 카운트하여 발송건수와 예약건수_7월을 계산"),"\n"),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"SELECT\r\n    SUM(CASE WHEN scheduled_type = 'A'  THEN 1 ELSE 0 END) AS 즉시발송건, --(4) scheduled_type 이 즉시발송건인 경우 횟수 합계\r\n    SUM(CASE WHEN scheduled_type = 'B'  THEN 1 ELSE 0 END) AS 예약건  --(4) scheduled_type 이 예약건인 경우 횟수 합계\r\nFROM 테이블이름\r\nWHERE\r\ncode ='123'  -- (1)특정 매장에\r\nAND ((scheduled_type = 'B' AND scheduled_date LIKE '202309%') OR  -- (2)2023년 9월 예약내역\r\n      (scheduled_type = 'A' AND sent_date LIKE '2023-09%')); -- 2023년 (3)9월 즉시발송내역 중에서\n")),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"2023-09-22"),"\n"),"\n",l.createElement(t.p,null,"마이그레이션을 위해서 기존 테이블에 조건에 따라서 상태 컬럼을 추가해야 했다\r\n임의로 select 문으로 가상의 컬럼(status 컬럼)을 생성해서 값을 조회햇다.\r\n상태: 발송없음,발송대기,발송불가,발송실패,발송완료 5가지"),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"조건별 CASE 문"),"\n"),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"(CASE\r\n    WHEN scheduled_type = 'none' THEN 'NoDispatch'\r\n    WHEN (scheduled_type IN ('scheduled', 'immediately') AND sent = 0) THEN\r\n        CASE\r\n            WHEN scheduled_date <> '' AND STR_TO_DATE(scheduled_date, '%Y%m%d') >= CURDATE() and closed = 0 THEN 'PendingDispatch'\r\n            WHEN scheduled_date <> '' AND STR_TO_DATE(scheduled_date, '%Y%m%d') < CURDATE() THEN 'DispatchFailed'\r\n            ELSE 'UnableToDispatch'\r\n        END\r\n    WHEN sent = 1 THEN 'Dispatched'\r\nEND)\n")),"\n",l.createElement(t.p,null,l.createElement(t.code,null," * scheduled_date <> '' 조건을 사용하여 scheduled_date가 비어있지 않은 경우만 조회되도록")),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"해당 조건으로 status 포함된 값 조회"),"\n"),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"select *, (조건별 CASE 문) as status from 테이블;\n")),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,null,"id"),l.createElement(t.th,null,"status"),l.createElement(t.th,null,"..."))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,null,"1"),l.createElement(t.td,null,"NoDispatch"),l.createElement(t.td,null,"...")),l.createElement(t.tr,null,l.createElement(t.td,null,"2"),l.createElement(t.td,null,"Dispatched"),l.createElement(t.td,null,"...")),l.createElement(t.tr,null,l.createElement(t.td,null,"3"),l.createElement(t.td,null,"Dispatched"),l.createElement(t.td,null,"...")),l.createElement(t.tr,null,l.createElement(t.td,null,"4"),l.createElement(t.td,null,"PendingDispatch"),l.createElement(t.td,null,"...")),l.createElement(t.tr,null,l.createElement(t.td,null,"5"),l.createElement(t.td,null,"Dispatched"),l.createElement(t.td,null,"...")),l.createElement(t.tr,null,l.createElement(t.td,null,"6"),l.createElement(t.td,null,"PendingDispatch"),l.createElement(t.td,null,"...")),l.createElement(t.tr,null,l.createElement(t.td,null,"7"),l.createElement(t.td,null,"Dispatched"),l.createElement(t.td,null,"...")))),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"테이블에 업데이트를"),"\n"),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"UPDATE store_news SET sent_status = ( 조건별 CASE 문)\n")),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"* tip\r\n\r\nError Code: 1175. You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column.\r\nTo disable safe mode, toggle the option in Preferences -> SQL Editor and reconnect.\t0.0064 sec\n")),"\n",l.createElement(t.p,null,"-> 해당 에러 발생시 마지막줄에 where id > 0 과 같은 조건을 추가해야 한다"),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"각 조건별 갯수가 궁금할때 (상태별 : 횟수)"),"\n"),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"SELECT status, COUNT(*) as record_count\r\nFROM (\r\nSELECT *,\r\n(조건별 CASE 문) as status\r\nFROM 테이블\r\n) AS subquery\r\nGROUP BY status;\n")),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,null,"status"),l.createElement(t.th,null,"record_count"))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,null,"NoDispatch"),l.createElement(t.td,null,"1")),l.createElement(t.tr,null,l.createElement(t.td,null,"PendingDispatch"),l.createElement(t.td,null,"2")),l.createElement(t.tr,null,l.createElement(t.td,null,"Dispatched"),l.createElement(t.td,null,"4")))),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"20231206"),"\n"),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"SELECT\r\n\td.name as 매장,\r\n\tCOUNT(*) as 접수건,\r\n\tSUM(CASE WHEN d.status in('A','B','C','D')  THEN 1 ELSE 0 END) AS 기부건\r\nFROM donations as d\r\ninner join\r\n\tstandbys as s on  d.id = s.donation_id\r\nwhere d.code in (1,2,3,4,5,6,7)\r\n\tand (mid(JSON_EXTRACT(d.created, '$.datetime'), 2, 10) >= '2023-11-01')\r\n\tand (mid(JSON_EXTRACT(d.created, '$.datetime'), 2, 10) <= '2023-11-30')\r\ngroup by d.code\n")),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,null,"매장"),l.createElement(t.th,null,"접수건"),l.createElement(t.th,null,"기부건"))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,null,"1매장"),l.createElement(t.td,null,"100"),l.createElement(t.td,null,"80")),l.createElement(t.tr,null,l.createElement(t.td,null,"2매장"),l.createElement(t.td,null,"230"),l.createElement(t.td,null,"200")),l.createElement(t.tr,null,l.createElement(t.td,null,"3매장"),l.createElement(t.td,null,"130"),l.createElement(t.td,null,"110")))),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"20240502"),"\n"),"\n",l.createElement(t.p,null,l.createElement(t.a,{href:"https://dba.stackexchange.com/questions/127564/how-to-use-count-with-multiple-columns"},"How to use COUNT with multiple columns")),"\n",l.createElement(t.h1,null,"quantity 수량수 와  a_quantity 수량수 를 한눈에 볼 수 있다"),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"SELECT count(*),count(quantity),count(a_quantity) FROM A where  status = 'AAA' ;\n")),"\n",l.createElement(t.h1,null,"두 값이 일치하는지 결과를 반환하는 쿼리는?"),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"SELECT\r\n    CASE\r\n        WHEN count(quantity) = count(a_quantity) THEN 'O'\r\n        ELSE 'X'\r\n    END AS 결과\r\nFROM A\r\nWHERE status = 'AAA';\n")))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?l.createElement(t,e,l.createElement(r,e)):r(e)},u=n(8804);function E(e){return l.createElement(u.Z,e,l.createElement(c,e))}u.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2022-08-29-mysql-count-case-mdx-0c6c4aec8be2ec5bd50e.js.map