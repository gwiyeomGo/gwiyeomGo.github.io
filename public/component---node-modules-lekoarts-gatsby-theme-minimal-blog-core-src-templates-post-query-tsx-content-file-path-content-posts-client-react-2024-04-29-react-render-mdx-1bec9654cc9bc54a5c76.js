"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[9450],{9269:function(e,l,n){n.r(l),n.d(l,{Head:function(){return u.F},default:function(){return m}});var t=n(7294),a=n(1151);function c(e){const l=Object.assign({h1:"h1",blockquote:"blockquote",p:"p",ul:"ul",li:"li",a:"a",code:"code",pre:"pre"},(0,a.ah)(),e.components);return t.createElement(t.Fragment,null,t.createElement(l.h1,null,"React 는 Javascript 라이브러리"),"\n",t.createElement(l.blockquote,null,"\n",t.createElement(l.p,null,"jsx"),"\n"),"\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"컴포넌트 라는 느슨하게 연결된 유닛으로 ",t.createElement(l.a,{href:"https://en.wikipedia.org/wiki/Separation_of_concerns"},"관심사 분리")),"\n",t.createElement(l.li,null,"React는 JSX 사용이 필수는 아니다. 하지만 시각적으로 더 도움이 된다."),"\n",t.createElement(l.li,null,"camelCase 프로퍼티 명명 규칙을 사용","\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,t.createElement(l.code,null,"JSX에서 class는 className")),"\n"),"\n"),"\n",t.createElement(l.li,null,"어트리뷰트에 JavaScript 표현식을 삽입할 때 중괄호 주변에 따옴표를 입력하지 마세요","\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,t.createElement(l.code,null,'const element = <a href="https://www.reactjs.org"> link </a>;')," X"),"\n",t.createElement(l.li,null,t.createElement(l.code,null,"const element = <img src={user.avatarUrl}></img>;")," O"),"\n"),"\n"),"\n",t.createElement(l.li,null,"JSX는 주입 공격을 방지 ,XSS 공격 방지","\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"React DOM은 JSX에 삽입된 모든 값을 렌더링하기 전에 이스케이프한다","\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"html 에서 몇가지 특별한 문자들을 교체하는 것 ",t.createElement(l.code,null,'<,>,",&')),"\n"),"\n"),"\n",t.createElement(l.li,null,"명시적으로 작성되지 않은 내용은 주입되지 않는다"),"\n"),"\n"),"\n",t.createElement(l.li,null,"Babel은 JSX를 JavaScript로 변환하고 React.createElement() 함수를 호출=","\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"JSX 문법은 브라우저에서는 바로 이해할 수 없다."),"\n",t.createElement(l.li,null,"Babel은 코드를 변환 도구"),"\n",t.createElement(l.li,null,"JSX 문법을 브라우저가 이해할 수 있는 일반적인 JavaScript로 변환하는 과정"),"\n"),"\n"),"\n"),"\n",t.createElement(l.blockquote,null,"\n",t.createElement(l.p,null,"엘리먼트 렌더링"),"\n"),"\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"React 엘리먼트는 React 앱의 가장 작은 단위"),"\n",t.createElement(l.li,null,"React 애플리케이션을 웹 페이지에 렌더링?","\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"DOM 엘리먼트 생성 = React 애플리케이션을 웹 페이지 상의 어떤 위치에 렌더링할지를 결정하는 것","\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"새로운 HTML 엘리먼트를 만드는 것을 의미하거나 기존 엘리먼트를 선택하는 것도 의미"),"\n"),"\n"),"\n",t.createElement(l.li,null,"DOM 엘리먼트를 ReactDOM.createRoot()에 전달 (ReactDOM.createRoot(): React 18에서 추가된 새로운 API)"),"\n",t.createElement(l.li,null,"React 엘리먼트 생성","\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"JSX 문법을 Babel로 JavaScript 코드로 변환"),"\n",t.createElement(l.li,null,"React.createElement() 호출을 통해 React 엘리먼트가 생성"),"\n"),"\n"),"\n",t.createElement(l.li,null,"React 엘리먼트를 root.render() 에 전달하여 실제 DOM에 렌더링"),"\n"),"\n"),"\n"),"\n",t.createElement(l.blockquote,null,"\n",t.createElement(l.p,null,"렌더링 된 엘리먼트 업데이트하기 vs 변경된 부분만 업데이트하기"),"\n"),"\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"새로운 엘리먼트를 생성하고 이를 root.render()로 전달","\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"실제로 대부분의 React 앱은 root.render()를 한 번만 호출"),"\n"),"\n"),"\n",t.createElement(l.li,null,"가상 DOM 은 이전의 엘리먼트와 비교해 실제 DOM 업데이트","\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"React는 실제 DOM과 동일한 구조를 가진 가상 DOM을 메모리에 생성"),"\n",t.createElement(l.li,null,"최소한의 변경만을 반영"),"\n",t.createElement(l.li,null,"React의 가장 큰 장점 -> 성능을 향상"),"\n"),"\n"),"\n"),"\n",t.createElement(l.blockquote,null,"\n",t.createElement(l.p,null,"컴포넌트"),"\n"),"\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"컴포넌트의 이름은 항상 대문자"),"\n",t.createElement(l.li,null,"props 는 읽기 전용, props 를 수정해서는 안 됩니다.","\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,t.createElement(l.a,{href:"https://en.wikipedia.org/wiki/Pure_function"},"순수 함수")," 입력값을 바꾸려 하지 않고 항상 동일한 입력값에 대해 동일한 결과를 반환"),"\n"),"\n",t.createElement(l.pre,null,t.createElement(l.code,null,"      function withdraw(account, amount) {\n      account.total -= amount;\n    }\n    //account 의 값이 변경되면 X => 순수 함수 아님\n")),"\n",t.createElement(l.ul,null,"\n",t.createElement(l.li,null,"모든 React 컴포넌트는 자신의 props 를 다룰 때 반드시 순수 함수처럼 동작"),"\n",t.createElement(l.li,null,"props 받은 값을 state 에 전달하여 컴포넌트 내부에서 state 값을 변경한다"),"\n"),"\n"),"\n"),"\n",t.createElement(l.h1,null,"참고"),"\n",t.createElement(l.p,null,t.createElement(l.a,{href:"https://ko.legacy.reactjs.org/docs/hello-world.html"},"https://ko.legacy.reactjs.org/docs/hello-world.html")))}var r=function(e){void 0===e&&(e={});const{wrapper:l}=Object.assign({},(0,a.ah)(),e.components);return l?t.createElement(l,e,t.createElement(c,e)):c(e)},u=n(8804);function m(e){return t.createElement(u.Z,e,t.createElement(r,e))}u.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-react-2024-04-29-react-render-mdx-1bec9654cc9bc54a5c76.js.map