{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-javascript-2022-04-11-javascript-async-await-mdx-b124e4589f85c9752391.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,gBAAiB,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,KAAMS,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,aAAc,KAAMQ,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,4CAA6C,KAAMQ,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,wCAAyC,MAAO,KAAMQ,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYM,EAAG,KAAM,0CAA2C,KAAMO,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,QAAS,KAAMM,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,KAAMK,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,iDAAkD,KAAMQ,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,gCAAiC,SAAU,mBAAoB,MAAO,KAAMQ,EAAAA,cAAoBb,EAAYS,IAAK,KAAMI,EAAAA,cAAoBb,EAAYU,KAAM,KAAM,2XAA4X,KAAMG,EAAAA,cAAoBb,EAAYM,EAAG,KAAM,4GAA6G,KAAMO,EAAAA,cAAoBb,EAAYM,EAAG,KAAM,oBAAqB,KAAMO,EAAAA,cAAoBb,EAAYM,EAAG,KAAM,kGAAmG,KAAMO,EAAAA,cAAoBb,EAAYS,IAAK,KAAMI,EAAAA,cAAoBb,EAAYU,KAAM,KAAM,4fAA6f,KAAMG,EAAAA,cAAoBb,EAAYM,EAAG,KAAM,iFAC/zE,CAKA,MAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWhB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCfe,SAASiB,EAAiBjB,GACvC,OAAOc,EAAAA,cAAoBI,EAAAA,EAAelB,EAAOc,EAAAA,cAAoBK,EAAqBnB,GAC5F,CAHAkB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/javascript/2022-04-11-javascript-async-await.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\",\n    h1: \"h1\",\n    ol: \"ol\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"async  await\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"es2017 도입\"), \"\\n\", React.createElement(_components.li, null, \"프라미스 기반의 비동기 코드를 동기적 코드처럼 작성 할 수 있게 합니다.\"), \"\\n\", React.createElement(_components.li, null, \"await 키워드는 async 키워드로 선언된 함수 안에서만 사용\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"에러\"), \"\\n\", React.createElement(_components.p, null, \"UnhandledPromiseRejection\\r\\n에러 메세지 확인\"), \"\\n\", React.createElement(_components.h1, null, \"찾아보니\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"asnyc/await을 사용한 함수는 promise를 반환한다는 것을 알게되었다.\"), \"\\n\", React.createElement(_components.li, null, \"async 키워드를 사용한 함수의 경우\\r\\ntry \", \" catch\", \" 로 애러 핸들안해줘서 발생\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"DonationService.getDonation(id).then((response) => {\\r\\n  if (response.data && response.data.evalType !== ONLY_ACCEPT_DONATION){\\r\\n    DonationService.getDonationClassification(id).then((classification) => {\\r\\n       setData({\\r\\n                classification:classification.data,\\r\\n                donation:response.data\\r\\n                });\\r\\n    });\\r\\n  }\\r\\n})\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 코드는 기부 상세 화면에서 처음에 기부 데이텉를 가져오는 코드입니다.\\r\\n기부 데이터의 타입이 접수일경우 setData 를 해주지 않기 때문에 흰 화면이 나오는 문제가 발생했습니다.\"), \"\\n\", React.createElement(_components.p, null, \"어떻게 개선할 수 있을 까요?\"), \"\\n\", React.createElement(_components.p, null, \"3개의 API 를 Call 하는 경우\\r\\n우선 기부 데이터가 있다면 setData 를 써서 data 에 값을 저장해야 합니다. 따라서\\r\\n처음 호출하는 부분만 써보면\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const load =  async () => {\\r\\n  setRoles(MemberContext.memberInformation.roles);\\r\\n  let result = {}\\r\\n  let donation = await DonationService.getDonation(id).then((response) => response.data );\\r\\n  if(donation) result.donation = donation\\r\\n  if (donation && donation.evalType !== ONLY_ACCEPT_DONATION){\\r\\n   let classification = await DonationService.getDonationClassification(id).then((response) => response.data);\\r\\n   result.classification = classification\\r\\n  }\\r\\n  setData(result);\\r\\n};\\n\")), \"\\n\", React.createElement(_components.p, null, \"3개 API 중 1개는 잘못된 키값으로 값을 불러 응답이 null 이었는데\\r\\n웃긴거는 ㅎㅎ 받아온 응답값을 쓰는 곳이 없었따.. ㅎㅎㅎ\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/etc/gwiyeomgo.github.io/content/posts/client/javascript/2022-04-11-javascript-async-await.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","ul","li","p","h1","ol","pre","code","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}