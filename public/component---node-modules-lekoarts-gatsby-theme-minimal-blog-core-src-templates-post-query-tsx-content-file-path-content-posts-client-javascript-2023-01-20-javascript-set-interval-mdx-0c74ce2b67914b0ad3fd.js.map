{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-javascript-2023-01-20-javascript-set-interval-mdx-0c74ce2b67914b0ad3fd.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,0IAA2I,KAAMS,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,QAAS,KAAMU,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,KAAMQ,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,wBAAyB,KAAMO,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,KAAM,KAAMO,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,KAAMM,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,0BAA2B,KAAMO,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,+BAAgC,MAAO,MAAO,MAAO,KAAMO,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,KAAMM,EAAAA,cAAoBb,EAAYM,GAAI,KAAMO,EAAAA,cAAoBb,EAAYQ,EAAG,CAC55BM,KAAM,sDACL,8DAA+D,KAAMD,EAAAA,cAAoBb,EAAYM,GAAI,KAAMO,EAAAA,cAAoBb,EAAYQ,EAAG,CACnJM,KAAM,+EACL,mCAAoC,MAAO,KAAMD,EAAAA,cAAoBb,EAAYG,GAAI,KAAMU,EAAAA,cAAoBb,EAAYQ,EAAG,CAC/HM,KAAM,6DACL,gBAAiB,KAAMD,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,KAAMM,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,oCAAqC,KAAMO,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,qBAAsB,2CAA4C,OAAQ,KAAMO,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,6CAA8C,MAAO,KAAMO,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,KAAMM,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,mBAAoB,KAAMO,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,kBAAmB,MAAO,KAAMO,EAAAA,cAAoBb,EAAYS,IAAK,KAAMI,EAAAA,cAAoBb,EAAYU,KAAM,KAAM,k6CAC5sB,CAKA,MAJA,SAAoBX,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWjB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCrBe,SAASkB,EAAiBlB,GACvC,OAAOc,EAAAA,cAAoBK,EAAAA,EAAenB,EAAOc,EAAAA,cAAoBM,EAAqBpB,GAC5F,CAHAmB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/javascript/2023-01-20-javascript-setInterval.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"관리자는 어드민 사용자의 역할 매칭 요청건수를 확인하고 승인/반려 합니다.\\r\\n그런데 매번 확인하러 목록을 보는 것은 불편합니다.\\r\\n관리자가 바로 요청건이 추가됨을 알 수 있도록\\r\\n어드민 상단에 아바타에 배찌를 추가하기로 했습니다.\"), \"\\n\", React.createElement(_components.h1, null, \"작업내용\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"제출상태인 요청건수를 조회하는 API\"), \"\\n\", React.createElement(_components.li, null, \"배찌\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"새로고침하면 데이터 조회해서 화면에 반영\"), \"\\n\", React.createElement(_components.li, null, \"30분마다 주기적으로 데이터 조회해서 화면에 반영\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"사용\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://rapidapi.com/guides/api-requests-intervals\"\n  }, \"How to send API requests with intervals using setInterval\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/71172632/react-setinterval-and-usestate\"\n  }, \"react-setinterval-and-usestate\")), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/ko/docs/Web/API/setInterval\"\n  }, \"setinterval\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"intervalId :타이머를 식별하는 0이 아닌 숫자 값\"), \"\\n\", React.createElement(_components.li, null, \"setinterval(() => \", \", HALF_AN_HOUR) : HALF_AN_HOUR 마다 () => \", \" 실행\"), \"\\n\", React.createElement(_components.li, null, \"clearInterval : intervalId 로 interval을 취소\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"사용\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"카운트다운에서 1초마다 실행\"), \"\\n\", React.createElement(_components.li, null, \"배찌 숫자 30분마다 조회\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import React, {useEffect, useState} from \\\"react\\\";\\r\\nimport {Badge, Avatar} from 'antd';\\r\\nimport {MatchingService} from \\\"./matching.service\\\";\\r\\nimport {UserOutlined} from \\\"@ant-design/icons\\\";\\r\\nimport {MemberContext} from \\\"../../../auth/member.context\\\";\\r\\nimport {SUBMITTED_STATUS} from \\\"./function\\\";\\r\\n\\r\\nlet intervalId = null;\\r\\nconst HALF_AN_HOUR = 1800000;\\r\\n\\r\\nconst RequestCount = () => {\\r\\n    const [count, setCount] = useState(0);\\r\\n    useEffect(() => {\\r\\n        if (intervalId) {\\r\\n            clearInterval(intervalId);\\r\\n            intervalId = null;\\r\\n        }\\r\\n        let params = {status: SUBMITTED_STATUS}\\r\\n        MatchingService.getRequestCount(params).then(response => {\\r\\n            setCount(response.data.totalCount);\\r\\n        });\\r\\n\\r\\n        intervalId = setInterval(() => {\\r\\n            MatchingService.getRequestCount(params).then(response => {\\r\\n                setCount(response.data.totalCount);\\r\\n            });\\r\\n        }, HALF_AN_HOUR);\\r\\n        return function cleanup() {\\r\\n            if (intervalId) {\\r\\n                clearInterval(intervalId);\\r\\n                intervalId = null;\\r\\n            }\\r\\n        };\\r\\n    }, []);\\r\\n\\r\\n    return (\\r\\n        <Badge count={count}>\\r\\n            <Avatar icon={<UserOutlined/>} src={MemberContext.memberInformation.picture}/>\\r\\n        </Badge>\\r\\n    )\\r\\n};\\r\\n\\r\\n\\r\\nexport default RequestCount;\\r\\n\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/etc/gwiyeomgo.github.io/content/posts/client/javascript/2023-01-20-javascript-setInterval.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","ol","li","ul","a","pre","code","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}