{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-infra-2021-07-29-infra-docker-install-mdx-553fcb2f7dc4ef043254.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/infra/2021-07-29-infra-docker-install.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h1: \"h1\",\n    img: \"img\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"최근 관리자가 보는 admin을 개선하기 위해\\n오픈 소스로 만든 admin을 checkout 받아서 진행했다.\\n그 오픈 소스는 docker를 사용하는데 docker를 어떻게 쓰는건지 하나도 모르겠다.\\ndocker에 관해서 조사하고 알게된 사실을 기록하려고 한다.\"), \"\\n\", React.createElement(_components.h3, null, \"docker란?\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Docker is a set of platform as a service (PaaS) products that use OS-level virtualization to deliver software in packages called containers.\\n\")), \"\\n\", React.createElement(_components.p, null, \"도커는 플렛폼의 세트다\\n서비스로써\\n가상화를 사용하는\\n소프트웨어를 제공하기 위해\\n컨테이너라고 불리는 패키지로\"), \"\\n\", React.createElement(_components.h3, null, \"Containers?\"), \"\\n\", React.createElement(_components.h3, null, \"docker로 뭐하지?\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Use containers to Build, Share and Run your applications\\n\")), \"\\n\", React.createElement(_components.p, null, \"containers를 사용한다\\n당신의 applications를 build,share,run 하기에\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Software build\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"In software development, a build is the process of converting source code files into standalone software artifact(s) that can be run on a computer, or the result of doing so.\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Share\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Run\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"필자는 도커에 대해 알지 못했고\\n우선 오픈소스를 체크아웃 받아서 실행(run)시키는 것이 목표였다.\\n데이터베이스에 연결하지 않은 상황에서도 실행되었다.\\n코드를 작성하지 않은 필자에게도 쉽게 공유가 가능하다고 느꼈다.\"), \"\\n\", React.createElement(_components.h3, null, \"docker에 db설정은 어떻게 하지?\"), \"\\n\", React.createElement(_components.h3, null, \"왜 docker 써야해? Why use Docker\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"why use Docker rather than VMware or Oracle’s VirtualBox?\\n\")), \"\\n\", React.createElement(_components.p, null, \"아 docker가 VMare나 Oracle에 VirualBox랑 비슷한가?\"), \"\\n\", React.createElement(_components.p, null, \"쿠버네티스는 도커를 관리하는\"), \"\\n\", React.createElement(_components.p, null, \"virtual os 까지 가상화 에 대안이 컨테이너 ,같은 os 위에서 여러 컨테이너에서 사용하고 이 서비스가 도커,쿠버네티스는 도커를 관리하는\"), \"\\n\", React.createElement(_components.p, null, \"프로젝트마다 언어 버전 달라도 배포 관리가 줄어든다.\"), \"\\n\", React.createElement(_components.p, null, \"도커배포방법\"), \"\\n\", React.createElement(_components.p, null, \"1.이미지 만듬\\n이미지는 도커내에서 받음 ( mysql 등 리소스는 도커가 있음 docker pull 있는지 확인 docker search 이미지)\\n도커에서 실행될 수 있는 형태로 이미지로 변경\"), \"\\n\", React.createElement(_components.p, null, \"소스 => 이미지 만듬\"), \"\\n\", React.createElement(_components.p, null, \"이미지를 도커 run 한다\"), \"\\n\", React.createElement(_components.p, null, \"컨테이너를 띄움\"), \"\\n\", React.createElement(_components.p, null, \"AWS ElasticBeanstaclk  올린다 = 서버 1개\"), \"\\n\", React.createElement(_components.p, null, \"virtual os 까지 가상화 에 대안이 컨테이너 ,같은 os 위에서 여러 컨테이너에서 사용하고 이 서비스가 도커\"), \"\\n\", React.createElement(_components.h1, null, \"Window10 도커 설치\"), \"\\n\", React.createElement(_components.h3, null, \"1.가상화 기술인 Hyper-V를 활성화\"), \"\\n\", React.createElement(_components.p, null, \"(작업 관리자에서 가상화를 사용함으로 설정했는지 확인)\\n키보드의 'Ctrl + Shift + Esc'를 누르면 작업 관리자\"), \"\\n\", React.createElement(_components.img, {\n    src: \"./docker1.JPG\",\n    alt: \"image.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"제어판 > 프로그램 설치 및 제거 > Window 기능 켜기/끄기 클릭 > Hyper-V 체크 확인 후 리부팅\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/content/postsnt/posts/img/docker2.JPG\",\n    alt: \"image.png\"\n  }), \"\\n\", React.createElement(_components.h1, null, \"2. Docker 설치\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://hub.docker.com/editions/community/docker-ce-desktop-windows/\"\n  }, \"설치링크\"), \"를 클릭> Get Docker 버튼 클릭 >\"), \"\\n\", React.createElement(_components.img, {\n    src: \"./docker3.JPG\",\n    alt: \"image.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"WSL은 윈도우에서 경량 가상화 기술을 사용해 리눅스를 구동할 수 있도록 도와주는 기능입니다. \", React.createElement(_components.a, {\n    href: \"https://www.44bits.io/ko/post/wsl2-install-and-basic-usage\"\n  }, \"WSL2\"), \"는 WSL을 대폭 개선해 훨씬 더 뛰어난 성능과 통합된 환경을 이용할 수 있습니다\"), \"\\n\", React.createElement(_components.p, null, \"이 항목은 언제든지 설치 후에도 바꿀 수 있으니 그냥 넘어 간다.\"), \"\\n\", React.createElement(_components.p, null, \">설치중>Close and restart 클릭 >재부팅 후\"), \"\\n\", React.createElement(_components.img, {\n    src: \"./docker4.JPG\",\n    alt: \"image.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"본다면 링크가서 \", React.createElement(_components.code, null, \"x64 머신용 최신 WSL2 Linux 커널 업데이트 패키지\"), \"클릭\\n\", React.createElement(_components.a, {\n    href: \"https://docs.microsoft.com/ko-kr/windows/wsl/install-win10#step-4---download-the-linux-kernel-update-package\"\n  }, \"https://docs.microsoft.com/ko-kr/windows/wsl/install-win10#step-4---download-the-linux-kernel-update-package\")), \"\\n\", React.createElement(_components.h3, null, \"3. Docker Sign in or Sign Up\"), \"\\n\", React.createElement(_components.p, null, \"free 로 가입함\"), \"\\n\", React.createElement(_components.h3, null, \"4. CMD에서 설치 확인 \", React.createElement(_components.code, null, \"docker -v\")), \"\\n\", React.createElement(_components.img, {\n    src: \"./docker5.JPG\",\n    alt: \"image.png\"\n  }), \"\\n\", React.createElement(_components.h1, null, \"20230829\"), \"\\n\", React.createElement(_components.h1, null, \"mac m2 에서 도커 설치\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew update\"), \"\\n\", React.createElement(_components.code, null, \"brew search docker\"), \"\\n\", React.createElement(_components.code, null, \"brew install --cask docker\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"m2 mac 에서는 해당 명령어로 도커 설치시 arm64 로 설치되었다.\\n\", React.createElement(_components.code, null, \"docker -v\")), \"\\n\", React.createElement(_components.li, null, \"버전이 확인되면 내 컴퓨터에 설치가 완료됨\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"도커 실행\"), \"\\n\", React.createElement(_components.p, null, \"mac 에서 다운받았는데\\ndocker desktop 을 어플리케이션으로 실행하고 로그인 했다\\npersonal 은 무료인거 같다.\\n\", React.createElement(_components.a, {\n    href: \"https://www.daleseo.com/docker-run/\"\n  }, \"https://www.daleseo.com/docker-run/\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://www.docker.com/pricing/\"\n  }, \"https://www.docker.com/pricing/\")), \"\\n\", React.createElement(_components.p, null, \"삭제\\n\", React.createElement(_components.code, null, \"brew uninstall docker\"), \"\\n\", React.createElement(_components.code, null, \"brew uninstall docker-compose\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/infra/2021-07-29-infra-docker-install.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","pre","code","ul","li","h1","img","a","_provideComponents","components","React","src","alt","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}