{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-react-2023-11-27-react-prettier-mdx-63fe4f86ad45d1f452d4.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,WAAY,aACZC,EAAG,IACHC,IAAK,QACJC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,MAAO,KAAMQ,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,wUAAyU,KAAMO,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,uCAAwC,KAAMO,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,eAAgB,KAAMQ,EAAAA,cAAoBX,EAAYI,EAAG,KAAMO,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,iDAAkD,KAAMM,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,oBAAqB,KAAMQ,EAAAA,cAAoBX,EAAYI,EAAG,KAAMO,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,0BAA2B,KAAMM,EAAAA,cAAoBX,EAAYM,WAAY,KAAM,KAAMK,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,uBAAwBO,EAAAA,cAAoBX,EAAYO,EAAG,CACzlCK,KAAM,iCACL,kCAAmC,MAAO,KAAMD,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,oBAAqB,KAAMQ,EAAAA,cAAoBX,EAAYI,EAAG,KAAMO,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,4BAA6B,KAAMM,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,aAAc,KAAMQ,EAAAA,cAAoBX,EAAYI,EAAG,KAAMO,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,2BAA4B,iBAAkB,KAAMM,EAAAA,cAAoBX,EAAYQ,IAAK,KAAMG,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,4FAA6F,KAAMM,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,6BAA8B,KAAMQ,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,6DAA8D,KAAMO,EAAAA,cAAoBX,EAAYQ,IAAK,KAAMG,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,0FAAmG,KAAMM,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,wBAAyB,KAAMQ,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,2DAA4DO,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,eAAgB,KAAMM,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,sBAAuBO,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,qBAC10C,CAKA,MAJA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWf,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCfe,SAASgB,EAAiBhB,GACvC,OAAOY,EAAAA,cAAoBK,EAAAA,EAAejB,EAAOY,EAAAA,cAAoBM,EAAqBlB,GAC5F,CAHAiB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/react/2023-11-27-react-prettier.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"react 프론트 코드에서 머지하는 과정에서 충돌이 발생했다\\nstaging 에 cherry pick 해서 하나의 커밋이 존재 (Prettier 적용하지 않았던)\\ndev 에서 이후 Prettier 를 적용하고 전체 코드가 변경되는 문제가 발생\\nPrettier 적용후 코드 라인이 변경되었고\\ndev 에서 staging 으로 머지하는 과정에서 충돌이 발생했다\\n그래서 Prettier plugins 에 대해서 알아보고\\nreact 코드 작성 후 습관적으로 적용하려고 한다\\n문제는 모든 사람이 같이 관리하는 코드에 Prettier 적용했다면 다같이 사용해서 유지해야 하는거 같다\"), \"\\n\", React.createElement(_components.p, null, \"좀 더 체계적이고 공통화된 소스코드로 작업을 위해 적용해 보자!\"), \"\\n\", React.createElement(_components.h1, null, \"Prettier 설치\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"npm install --save-dev --save-exact prettier\")), \"\\n\", React.createElement(_components.h1, null, \"prettierrc.js 설정\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \" touch .prettierrc.js\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \". prettierrc 파일 설정\\n\", React.createElement(_components.a, {\n    href: \"https://adjh54.tistory.com/20\"\n  }, \"https://adjh54.tistory.com/20\")), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"prettierrc.js 실행\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"yarn prettier --write .\")), \"\\n\", React.createElement(_components.h1, null, \"적용되었는지 확인\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"yarn prettier --check .\"), \" 실행시 다음 문구 보임\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Checking formatting...\\nAll matched files use Prettier code style!\\n✨  Done in 1.34s.\\n\")), \"\\n\", React.createElement(_components.h1, null, \". 으로 하면 프로젝트 전체 코드를 바꿔버린다\"), \"\\n\", React.createElement(_components.p, null, \"리액트 프로젝트중 src 폴더만 확인하고 바꾸도록 아래 코드를 package.json 에 추가해서 사용\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"    \\\"format:fix\\\": \\\"prettier --write ./src\\\",\\n    \\\"format\\\": \\\"prettier --check ./src\\\"\\n\")), \"\\n\", React.createElement(_components.h1, null, \"IntelliJ Prettier 설치\"), \"\\n\", React.createElement(_components.p, null, \"Preferences > Plugins > Prettier를 검색해서 설치\\nPlugins 실행 : \", React.createElement(_components.code, null, \"Ctrl+Alt+S\")), \"\\n\", React.createElement(_components.p, null, \"Windows and Linux :\", React.createElement(_components.code, null, \"Alt-Shift-Ctrl-P\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/client/react/2023-11-27-react-prettier.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","code","blockquote","a","pre","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}