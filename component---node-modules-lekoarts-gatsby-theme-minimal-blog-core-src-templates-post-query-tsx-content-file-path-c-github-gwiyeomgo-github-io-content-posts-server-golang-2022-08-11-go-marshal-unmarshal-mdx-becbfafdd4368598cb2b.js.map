{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-server-golang-2022-08-11-go-marshal-unmarshal-mdx-becbfafdd4368598cb2b.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,kKAAmK,KAAMS,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,MAAO,KAAMS,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,OAAQ,KAAMQ,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,KAAMO,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,iCAAkC,MAAO,KAAMM,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,kIAAmI,KAAMI,EAAAA,cAAoBb,EAAYM,GAAI,CACnzBQ,MAAO,KACN,KAAMD,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,QAASM,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,kBAAmB,UAAW,MAAO,KAAMI,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,0PAAmQ,KAAMI,EAAAA,cAAoBb,EAAYM,GAAI,CACrhBQ,MAAO,KACN,KAAMD,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,mCAAoC,MAAO,KAAMM,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,kBAAmB,KAAMU,EAAAA,cAAoBb,EAAYU,GAAI,KAAM,KAAMG,EAAAA,cAAoBb,EAAYO,GAAI,KAAMM,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,+CAAgD,MAAO,KAAMI,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,kBAAmB,KAAMU,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,IAAKS,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,gDACzgB,CAKA,MAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWjB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCnBe,SAASkB,EAAiBlB,GACvC,OAAOc,EAAAA,cAAoBK,EAAAA,EAAenB,EAAOc,EAAAA,cAAoBM,EAAqBpB,GAC5F,CAHAmB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/golang/2022-08-11-go-Marshal-Unmarshal.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"golang 코드를 짜면서 데이터의 형태를 변환하는 경우가 많다..\\r\\n요청값의 데이터를 바인드 할 때\\r\\n혹은 내부 로직에서 데이터 타입을 바꿀 때\\r\\n또는 응닶값의 데이터의 타입을 수정할때 등... 여러번 찾아서 코드를 수정한다.\\r\\n한번쯤 정리하는것도 필요하다고 느낀다.\"), \"\\n\", React.createElement(_components.p, null, \"자주\"), \"\\n\", React.createElement(_components.h3, null, \"내상황\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"items 의 map 값을 string 으로 받았다.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"var items []map[string]string\\r\\nif err := builder.Find(&items); err != nil {\\r\\n\\tcontext.Log(c).Errorln(err.Error())\\r\\n}\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"응답값은 \", React.createElement(_components.code, null, \" []interface{}\"), \" 형태이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"id, _ := strconv.ParseInt(item[\\\"id\\\"], 10, 64)\\r\\nvar confirmed map[string]interface{}\\r\\njson.Unmarshal([]byte(item[\\\"confirmed\\\"]), &confirmed)\\r\\nresult := map[string]interface{}{\\r\\n\\\"ID\\\":              id,\\r\\n\\\"confirmed\\\":       confirmed,\\r\\n}\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"결국 응답값을 만들때 string 으로 넣어주고 있었다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"[]byte to json\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"func Unmarshal(data []byte, v interface{})\")), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"json to []byte\"), \"\\n\", React.createElement(_components.p, null, \"*\", React.createElement(_components.code, null, \"func Marshal(v interface{}) ([]byte, error)\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/server/golang/2022-08-11-go-Marshal-Unmarshal.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h3","ol","li","pre","code","ul","_provideComponents","components","React","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}