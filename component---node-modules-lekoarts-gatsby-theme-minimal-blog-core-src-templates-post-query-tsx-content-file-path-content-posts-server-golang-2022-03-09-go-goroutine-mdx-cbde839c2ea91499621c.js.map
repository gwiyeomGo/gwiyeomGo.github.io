{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-golang-2022-03-09-go-goroutine-mdx-cbde839c2ea91499621c.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/golang/2022-03-09-go-goroutine.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Go 언어는 동시성(병행성) 지원한다.\"), \"\\n\", React.createElement(_components.h1, null, \"Go Goroutine\"), \"\\n\", React.createElement(_components.p, null, \"go 루틴은 function 인데\\r\\n함수를 동시에 실행시킨다\"), \"\\n\", React.createElement(_components.h1, null, \"어떻게 사용?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"go\"), \" 키워드를 사용해 \", React.createElement(_components.code, null, \"gorutine\"), \"을 생성\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"package main\\r\\n\\r\\nimport (\\r\\n\\t\\\"fmt\\\"\\r\\n)\\r\\n\\r\\nfunc Call(name string) {\\r\\n\\tfor i, _ := range name {\\r\\n\\t\\tfmt.Printf(\\\"%s-%v\\\", name, i)\\r\\n\\t}\\r\\n}\\r\\nfunc main() {\\r\\n\\tfmt.Println(\\\"--start--\\\")\\r\\n\\tgo Call(\\\"tom\\\")\\r\\n\\tgo Call(\\\"coco\\\")\\r\\n\\tfmt.Println(\\\"--end--\\\")\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"main 함수가 끝나면\\r\\n모든 goroutine 도 끝난다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"//5초 후 main 함수 기다림\\r\\ntime.Sleep(time.Second * 5)\\n\")), \"\\n\", React.createElement(_components.p, null, \"main 함수에서 5초간 지여니켰을때 결과를 확인해 보자\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"--start--\\r\\ncoco-0\\r\\ncoco-1\\r\\ncoco-2\\r\\ncoco-3\\r\\ntom-0\\r\\ntom-1\\r\\ntom-2\\r\\n--end--\\n\")), \"\\n\", React.createElement(_components.p, null, \"이떄 호출 결과는 매번 같지 않다\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://replit.com/@gwiyeomgo/goroutine#zc79n4vs60yqfz5rkps9-go-1.17.3/share/go/src/fmt/print.go:273:5\"\n  }, \"예제코드\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"time.Sleep\"), \"을 써서 코드를 실행을 지연시키는 방법 대신\\r\\n다른 방법은 없을까?\"), \"\\n\", React.createElement(_components.h1, null, \"고루틴을 제어하는 방식\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"WaitGroup 을 사용해 고루틴 종료 알림\"), \"\\n\", React.createElement(_components.li, null, \"Chanel 사용\\r\\n\", React.createElement(_components.a, {\n    href: \"https://jbhs7014.tistory.com/179\"\n  }, \"고루틴을 제어하는 방식에 대해 정리한 글이 있어서 공유\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Chanel (=파이프)\"), \"\\n\", React.createElement(_components.p, null, \"Chanel 은 gorutine 이랑 main 함수 사이에서 정보를 전달해줄때\\r\\n사용할 수있다.\\r\\n연결 통로가 되어 메세지를 전달하거나 받는 역할을 한다.\"), \"\\n\", React.createElement(_components.h3, null, \"어떻게 사용?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"메세지를 보낸다 (매개변수로 전달)\\r\\n\", React.createElement(_components.code, null, \"c := make(chan string)\"), \"\\r\\n\", React.createElement(_components.code, null, \"go Call(\\\"tom\\\",c)\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Call 함수는 메세지만 받음\\r\\n\", React.createElement(_components.code, null, \"func hitUrl(url string ,c chan string)\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"[이름] chan [메세지 타입]\\r\\n이때 메세지 타입은 struct 도 가능\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Call 함수는 메세지도 받고 c 사용해 메세지도 보낼 수 있다.\\r\\n\", React.createElement(_components.code, null, \"func hitUrl(url string ,c chan<- string)\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"main 함수로 메세지를 보낸다.\\r\\n\", React.createElement(_components.code, null, \" c <- fmt.Sprintf(\\\"%s say yes\\\",name)\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"main 함수는 메세지를 받을때까지 기다린다.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"https://go.dev/ref/spec#Channel_types\"\n  }, \"Channel types\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"chan T          // can be used to send and receive values of type T\\r\\nchan<- float64  // can only be used to send float64s\\r\\n<-chan int      // can only be used to receive ints\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/31920353/whats-the-difference-between-chan-and-chan-as-a-function-return-type\"\n  }, \"참고\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"package main\\r\\n\\r\\nimport (\\r\\n\\t\\\"fmt\\\"\\r\\n)\\r\\n//매세지를 보낸다\\r\\nfunc Call(name string ,c chan string){\\r\\n\\t//메세지를 받기만함\\r\\n\\t//func Call(name string ,c <-chan string) {\\r\\n\\tfor i, _ := range name {\\r\\n\\t\\tfmt.Printf(\\\"%s-%v\\\\n\\\", name, i)\\r\\n\\t}\\r\\n\\tc <- fmt.Sprintf(\\\"%s say yes\\\",name)\\r\\n}\\r\\nfunc main() {\\r\\n\\tfmt.Println(\\\"--start--\\\")\\r\\n\\tc := make(chan string)\\r\\n\\tgo Call(\\\"tom\\\", c)\\r\\n\\tgo Call(\\\"coco\\\", c)\\r\\n\\tresult:= <-c\\r\\n\\tfmt.Println(result)\\r\\n\\t//time.Sleep(time.Second * 5)\\r\\n\\tfmt.Println(\\\"--end--\\\")\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"실제업무에서 사용\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"우리서비스에서 dooray api 를 호출한다\\r\\n이때 호출을 기다릴 필요가 없으니 go 를 사용해서 호출\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"sqs 로 메세지를 저장한다 sqs 를 호출해 메세지를 가져올때 while 문으로 go 루틴을 사용해 호출한다 이때 언제올지 모르는 결과값을 받기 위해 채널을 사용\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://replit.com/@gwiyeomgo/goroutineAndChanel#0yqfz5rkps9-go-1.17.3/share/go/src/builtin/builtin.go:71:5\"\n  }, \"실행예제\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/react/gwiyeomgo.github.io/content/posts/server/golang/2022-03-09-go-goroutine.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","ul","li","code","pre","a","h2","h3","ol","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}