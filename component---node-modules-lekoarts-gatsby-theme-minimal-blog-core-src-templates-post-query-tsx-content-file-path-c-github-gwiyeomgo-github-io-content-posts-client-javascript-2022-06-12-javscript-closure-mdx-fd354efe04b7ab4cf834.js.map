{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-client-javascript-2022-06-12-javscript-closure-mdx-fd354efe04b7ab4cf834.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/client/javascript/2022-06-12-javscript-closure.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"스코프\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"javascript 에서 스코프는 범위 입니다.\\r\\n즉 변수에 접근할 수 있는 범위\"), \"\\n\", React.createElement(_components.li, null, \"전역 스코프와 로컬 스코프 로 2개 타입이 있습니다.\"), \"\\n\", React.createElement(_components.li, null, \"전역 스코프는 말 그대로 어느 곳에서든 해당 변수에 접근 가능\"), \"\\n\", React.createElement(_components.li, null, \"지역 스코프는 함수 스코프, 블록 스코프 등 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"변수\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"변수는 변하는 수 입니다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"let\"), \"  키워드를 써서 정의합니다.\"), \"\\n\", React.createElement(_components.li, null, \"let 은 block 단위의 스코프를 갖습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let str='hello';\\r\\n{\\r\\n  let str='world';\\r\\n  console.log(str); //(A)\\r\\n}\\r\\nconsole.log(str); //(B)\\n\")), \"\\n\", React.createElement(_components.h3, null, \"상수\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"const\"), \" 키워드를 써서 정의\"), \"\\n\", React.createElement(_components.li, null, \"상수는 한번 선언하면 바꿀 수 없다\"), \"\\n\", React.createElement(_components.li, null, \"함수를 변수에 할당해 선언 할 때는 const 를 써서 쓴다\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const print = (a) => {console.log(a)}\\r\\nprint(a);\\n\")), \"\\n\", React.createElement(_components.h3, null, \"함수\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"함수는 한번 정의되면 여러 번 호출 할 수 있다\"), \"\\n\", React.createElement(_components.li, null, \"함수는 매개변수를 통해 인자를 받는다\"), \"\\n\", React.createElement(_components.li, null, \"함수는 return 사용해서 반환한다\"), \"\\n\", React.createElement(_components.li, null, \"function 키워드를 써서 함수를 정의하지만\\r\\nES6 부터는 화살표함수가 도입되어 키워드 없이 정의 가능하다\"), \"\\n\", React.createElement(_components.li, null, \"함수에 이름은 필수가 아니다\"), \"\\n\", React.createElement(_components.li, null, \"함수를 선언하면 함수를 선언할 때마다 새로운 스코프를 생성하게 됩니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"var a = 1; // 전역 스코프\\r\\nfunction test() { // 지역(함수) 스코프\\r\\n var a = 2;\\r\\n console.log(a);\\r\\n}\\r\\ntest();  //---(A)\\r\\nconsole.log(a); //---(B)\\r\\n\\r\\n//\\r\\n\\r\\nlet number =1;\\r\\nfunction print(){\\r\\n\\tlet number = 10;\\r\\n\\ttest(number);\\r\\n}\\r\\nfunction test(number){\\r\\n\\tconsole.log(number)\\r\\n}\\r\\n\\r\\nprint(); //---> (A)\\r\\ntest(number); //---> (B)\\n\")), \"\\n\", React.createElement(_components.h3, null, \"클로저\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"어휘적(lexcial) 환경(스코프) => 변하지 않는 특정한 어휘적 환경\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let name = \\\"a\\\"\\r\\n\\r\\nfunction outerFn() {\\r\\n  let name = \\\"b\\\"\\r\\n  function innerFn () {\\r\\n    return name;\\r\\n  }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"outerFn 함수 밖에서 name 변수가 새로 선언되어도 변하지 않는다.\\r\\n어휘적(lexcial) 환경은 바로 이것이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"클로저 사용법\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"// 1.중첩함수\\r\\nfunction outerFn() {\\r\\n  let x = 10;\\r\\n  return function innerFn(y) { // innerFn 함수는 클로저다.\\r\\n    return x = x + y;\\r\\n  }\\r\\n}\\r\\nlet a = outerFn(); // 외부함수 호출은 한번만. 이제 a 변수는 innerFn 함수를 참조한다.\\r\\n//a(5);  -(A) 15\\r\\n//a(5);  -(B) 20\\r\\n//a(5);  -(C) 25\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"특징1. 외부함수 실행이 끝나도 외부 함수 내 변수를 사용할 수 있다.\\r\\n(내부함수가 외부함수의 변수에 접근 할 수 있다)\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"// 2. 전역에 선언한 변수를 박스 안에서 함수로 정의하고 전역에서 호출\\r\\nlet globalFunc;\\r\\n{\\r\\n  let x = 10;\\r\\n  globalFunc = function(y) { // globalFunc 함수는 클로저다.\\r\\n    return x = x + y;\\r\\n  }\\r\\n}\\r\\nglobalFunc(5);  - A\\r\\nglobalFunc(5);  - B\\r\\nglobalFunc(5);  - C\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"특징2. 함수 내부 변수에 접근을 제한한다. 객체 내부에 직접 접근 못함 = 캡슐화\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://hanamon.kr/javascript-%ED%81%B4%EB%A1%9C%EC%A0%80/\"\n  }, \"클로저 출처\"), React.createElement(_components.a, {\n    href: \"https://velog.io/@taero30/Closure-%ED%81%B4%EB%A1%9C%EC%A0%80-%EA%B0%9C%EB%85%90\"\n  }, \"클로저2 출처\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/github/gwiyeomgo.github.io/content/posts/client/javascript/2022-06-12-javscript-closure.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","ul","li","code","pre","p","a","_provideComponents","components","React","className","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}