{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-etc-2023-08-02-etc-network-mdx-ce3d6e02862de452314a.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/etc/2023-08-02-etc-network.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.pre, null, React.createElement(_components.code, null, \"tcp ip\\n\\n2층 이더넷\\nmac 어드레스는 램카드\\n램카드 3개 있음 => mac 어드레스 3개\\n\\n3층 인터넷 프로토콜 ip 주소 -> host 식별\\n\\n\\n4층 tcp,udp -> 식별자 port 번호  => 프로세스 네트워크서비스 인터페이스 등등..식별\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"dod\"), \"\\n\", React.createElement(_components.p, null, \"app\\nhost to host\\ninterntet\\nnetwork acess\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"host ? 네트쿼크에 연결된 컴퓨터\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"end point    네트워크 이용 주체 (단말) =>  client,server,peer(p2p통)\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"switch : 네트워크 그 자체를 이루는 host (인프라스트럭처) => router,ips,tab agreation switch\"), \"\\n\", React.createElement(_components.p, null, \"컴퓨터인데 네트워크에 연결된 컴퓨터 = host\\n호스트 인네 네트워크 자체 호스트(인프라)= 스위치\\n(그 인프라) 이용주체 = 엔드포인트(단말기)\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"스위치가 하는 일\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"네트워크 => 고속도로\\n교차로 선택의 근거 => 이정표\"), \"\\n\", React.createElement(_components.p, null, \"교차로 자체가 스위치!\\n인터페이스를 선택하는 것 = 스위칭 = 경로선택\\n이떄 ip 주소로 스위칭을 했다면 l3 스위칭\"), \"\\n\", React.createElement(_components.p, null, \"자동차 = 단위 = 패킷 (인터넷을 돌아다니다 스위치를 만나는데 이때 l3 스위치 가 라우터 = 교차)\\n라우터마다 이정표가 있는데 이것이 ₩라우팅 테이블₩\"), \"\\n\", React.createElement(_components.p, null, \"멕주소로 스위치하면 l2 스위칭\\n포트번호로 스위치하면 l4 스위칭\"), \"\\n\", React.createElement(_components.p, null, \"매트릭 값 = 비용\\n비용이 낮은 쪽으로 이동을 함\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"nic + l2 frame + lan card + mac\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"nic = 네트워크 인터페이스 카드  = lan 카드\\nnic 은 하드웨어이며 mac 주소를 갖음\"), \"\\n\", React.createElement(_components.p, null, \"컴퓨터하나가 여러개를 갖을 수 있다\"), \"\\n\", React.createElement(_components.p, null, \"l2 유통 단위(데이터) frame\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"l2 Access switch\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"|\\npc --|\\n|___ ...distribution스위치( Access switch 위한 스위치) _____ [R(라우터)]\\n|\\npc --|\\n\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"LAN 과 WAN 의 경계 그리고 Broadcast (방송)(효율 떨어뜨) , unicast\\n브로드케스트 최소로 해야햐\\n브로드케스트 = 범위\\n브로드케스트 주소가 존재한다\\nmac 어드레스가 49비트가 모두 1 로 된 경우 브로드케스트\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"lan 에서 보내는 데이터의 단위는 frame\\nframe 에 해더에 주소가 있음 =>\"), \"\\n\", React.createElement(_components.p, null, \"l2 까지는 물리적\\n로지컬 네트워크는 => 논리적 (실체 없음) vitual 가상..\"), \"\\n\", React.createElement(_components.p, null, \"cpu 를 소프트웨어로 machine\\n소프트웨어 가상이니 virtual  machine\"), \"\\n\", React.createElement(_components.p, null, \"네트워크 가장 작은 범위 lan\\n인터넷 = wan => 논리적인 네트워크\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"ipv4\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ip 는 호스트의 식별자\"), \"\\n\", React.createElement(_components.p, null, \"ipconfig = 네트워크 id + host id\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"l3 ip packet 으로 외워\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"패킷 = 단위 데이터\"), \"\\n\", React.createElement(_components.p, null, \"header 와 payload 로 나뉜다\"), \"\\n\", React.createElement(_components.p, null, \"(중요)최대크기 MTU  => 1500 bytes\"), \"\\n\", React.createElement(_components.p, null, \"패킷 등 와이어샤크로 볼 수 있음\"), \"\\n\", React.createElement(_components.p, null, \"네트워크에 돌아다니는 패킷을 분석할 수 있고 망의 효율을 개선 할 때 쓴다 (와이어샤크)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"encapsulation vs decapsulation\\n러시아 전통 목각 인형인 마트료시카 인형...\\n패킷하면 이 단어가 따라다님..\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"l2 frame \", React.createElement(_components.code, null, \"[l2 header|payload[l3 header|payload[l4 | payload ]]]\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"패킷의 생성, 전달,소멸\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/etc/2023-08-02-etc-network.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","pre","code","p","ul","li","ol","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}