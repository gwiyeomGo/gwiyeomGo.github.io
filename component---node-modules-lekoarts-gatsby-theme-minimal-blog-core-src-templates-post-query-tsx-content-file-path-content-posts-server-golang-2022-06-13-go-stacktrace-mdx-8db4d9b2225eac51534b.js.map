{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-golang-2022-06-13-go-stacktrace-mdx-8db4d9b2225eac51534b.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/golang/2022-06-13-go-stacktrace.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    img: \"img\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"고사이렌을 통해서 장애가 발생하면\\n개발자들이 볼 수 있도록 업무가 생성된다\\n이때 stacktrace 를 보여주려고 했지만 실패햇었다\\n현재 err 를 쌓을 때 현재 코드에 문제가 있어서 못함\"), \"\\n\", React.createElement(_components.h3, null, \"작업내용\"), \"\\n\", React.createElement(_components.p, null, \"github 의 라이브러리를 받아서 사용\\n=>api 의 에러 발생 시 stack 에 쌓이도록 수정\"), \"\\n\", React.createElement(_components.p, null, \"에러 발생시 stack 을 고사이렌에 보내도록 수정\"), \"\\n\", React.createElement(_components.h3, null, \"20220725\"), \"\\n\", React.createElement(_components.p, null, \"stacktrace 가 남겨지도록 log 를 사용했다.\\n\", React.createElement(_components.a, {\n    href: \"https://www.popit.kr/golang-error-stack-trace%EC%99%80-%EB%A1%9C%EA%B9%85/\"\n  }, \"https://www.popit.kr/golang-error-stack-trace와-로깅/\"), \" 글을 보고 새 방식 도입\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"고사인렌 : Dooray API 를 통해 장애 알림 시스템\\n작업에서 고사이렌 코드에사 stacktrace 를 같이 출력되도록 수정하고\"), \"\\n\", React.createElement(_components.li, null, \"API 에서 라이브러리를 사용해서 log 를 쌓도록 수정했다\\n=>  전체 변경은 시간이 많이 걸리기 때문에 기부 관련 API 만 수정 =>  500 장애 발생시 stack trace\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"stacktrace 를 알 수 있도록 다른 errors 패키지를 사용하자\"), \"\\n\", React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.popit.kr/golang-error-stack-trace%EC%99%80-%EB%A1%9C%EA%B9%85/\"\n  }, \"https://www.popit.kr/golang-error-stack-trace와-로깅/\"), \" 글을 읽고\\n\", React.createElement(_components.code, null, \"DevOps/242 고사이렌에 에러 stack 을 출력한다\"), \"에서 고사이렌에 stacktrace 가 출력되도록 수정했습니다.\"), \"\\n\", React.createElement(_components.p, null, \"위 글에서도 언급된것 처럼\\n\", React.createElement(_components.code, null, \"github.com/pkg/errors\"), \" 를 사용해서 errors 처리를 해야\\n자동으로 에러 발생지점을 알 수 있습니다.\"), \"\\n\", React.createElement(_components.h3, null, \"문제\"), \"\\n\", React.createElement(_components.p, null, \"sharing service 는 HandleErrorResponse 를 통해서 에러 코드와 메세지를 생성합니다. (직접 커스텀 에러 헨들러를 만들어서 사용)\\n해당 방식으로는 에러 발생지점을 추적할 수 없어서\\n수동으로 \", React.createElement(_components.code, null, \" log.Traceln(\\\"\\\")\"), \" 를 모든 함수 코드에 넣어서 log 관리를 하고 있습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"func (CourierAdminController) GetCourier(ctx echo.Context) error {\\n\\tlog.Traceln(\\\"\\\")\\n        ...\\n\\treturn ctx.JSON(http.StatusOK, courierSummary)\\n}\\n\")), \"\\n\", React.createElement(_components.h3, null, \"변경내용\"), \"\\n\", React.createElement(_components.p, null, \"오류보고/753 기부 API 500번 에러의 stacktrace 기록되도록 코드 수정 에서\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"DonationAdminController\"), \"\\n\", React.createElement(_components.li, null, \"DonationController 만 수정\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"아래 이미치 처럼 500 에러 발생시 발생 함수를 알 수 있습니다.\\n\", React.createElement(_components.img, {\n    src: \"../img/stacktrace.jpg\",\n    alt: \"img_1.png\"\n  })), \"\\n\", React.createElement(_components.p, null, \"모든 함수에\", React.createElement(_components.code, null, \"log.Traceln(\\\"\\\")\"), \" 써준 코드를 지우고\\n500 번 에러가 발생할 때만 \", React.createElement(_components.code, null, \" errors.Wrap(err, \\\"\\\")\"), \" \", React.createElement(_components.code, null, \"errors.New(msg)\"), \" 를 사용하고\\n나머지 400 , 404 의 경우 기존 \", React.createElement(_components.code, null, \"customErrors.ValidationError(\\\"매장코드를 확인하여주세요\\\")\"), \" 처럼 그대로 사용\"), \"\\n\", React.createElement(_components.h3, null, \"사용법\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"2개 errors 패키지를 import 해야합니다. 그래서\\n기존 errors 는 customErrors 로 변경해서 import 합니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import (\\n\\tcustomErrors \\\"sharing-platform-service/common/errors\\\"\\n    \\\"github.com/pkg/errors\\\"\\n)\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Controller -> Service -> Repository 를 호출하는 구조에서는\\n가장 마지막 발생하는 error 에 \", React.createElement(_components.code, null, \"errors.Wrap(err, \\\"\\\")\"), \" 를 사용합니다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"repository 이나 entity 파일에 적용\"), \"\\n\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/golang/2022-06-13-go-stacktrace.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","a","ul","li","code","pre","img","ol","_provideComponents","components","React","href","src","alt","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}