"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[7908],{3391:function(e,n,t){t.r(n),t.d(n,{Head:function(){return o.F},default:function(){return u}});var l=t(7294),r=t(1151);function c(e){const n=Object.assign({h3:"h3",blockquote:"blockquote",p:"p",ul:"ul",li:"li",code:"code",h5:"h5",a:"a"},(0,r.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.h3,null,"strings package"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"strings.Replace"),"\n"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.code,null,'strings.Replace("2022-06-17"","-", "")'),'를 통해 "-" 를 제거함'),"\n",l.createElement(n.li,null,"어드민 화면에서 서비스로 조회 데이터를 요청합니다.이떄 프론트에서 ",l.createElement(n.code,null,"Query Parameter"),' 으로 기간 데이터 "2022-06-17" 를 보냅니다.\r\n',l.createElement(n.code,null,'/users?queryFrom="2022-06-01"&&queryTo="2022-06-17"'),"이렇게 보내진 내용은 서비스코드에서 ",l.createElement(n.code,null,"ctx.Bind"),'를 통해 값을 받고\r\nmysql 로 조회할 때 "-" 때문에 조회되지 않는 문제가 있어서 ',l.createElement(n.code,null,"strings.Replace "),"를 통해 변경했다."),"\n"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"strings.Trim"),"\n"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.code,null,'strings.Trim("test test", " ")')),"\n",l.createElement(n.li,null,"공백을 제거할 떄 사용"),"\n"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"strings.Fields()"),"\n"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.code,null,'s := strings.Fields("a b")')," ",l.createElement(n.code,null,"s[1]")," 은 a"),"\n",l.createElement(n.li,null,"공백을 기준으로 문자열을 문자열 슬라이스로 저장"),"\n"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,'strings.Join(roles, ",")'),"\n"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"roles 은 []string 인데 ,를 통해 배열을 , 로 구분하는 string 으로 만들어 준다"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"func Join(element []string, sep string) string ")),"\n"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"strings.NewReader(requestBody)"),"\n"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"테스트케이스에서 requestBody := ",l.createElement(n.code,null,'{"code": "1"}')," 를 NewRequest 의 매개변수 로 쓸  수 있도록  *Reader 로  변경해준다."),"\n",l.createElement(n.li,null,l.createElement(n.code,null,'req := httptest.NewRequest(echo.POST, "/api/test", strings.NewReader(requestBody))')),"\n"),"\n",l.createElement(n.h5,null,"참고"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://www.socketloop.com/tutorials/golang-remove-dashes-or-any-character-from-string"},"https://www.socketloop.com/tutorials/golang-remove-dashes-or-any-character-from-string"),"\r\n",l.createElement(n.a,{href:"http://pyrasis.com/book/GoForTheReallyImpatient/Unit46/02"},"http://pyrasis.com/book/GoForTheReallyImpatient/Unit46/02")))}var a=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?l.createElement(n,e,l.createElement(c,e)):c(e)},o=t(8804);function u(e){return l.createElement(o.Z,e,l.createElement(a,e))}o.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-c-github-gwiyeomgo-github-io-content-posts-server-golang-2021-08-05-go-strings-pkg-mdx-9cbddd1c04f561f6f648.js.map