{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2021-04-28-mysql-convert-d-bcolumn-mdx-de77484172462f3825a0.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,IACHC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,KAAMS,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,2CAA4C,KAAMQ,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,iCAAkC,MAAO,KAAMQ,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,KAAMS,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,sBAAuB,KAAMQ,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,6DAA8D,KAAMQ,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,KAAMS,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,uCAAwC,KAAMQ,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,2CAA4C,MAAO,MAAO,MAAO,KAAMQ,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,6BAA8B,KAAMU,EAAAA,cAAoBb,EAAYM,IAAK,KAAMO,EAAAA,cAAoBb,EAAYO,KAAM,KAAM,kUAAmU,KAAMM,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,yCAA0C,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,KAAMS,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,uCAAwC,KAAMQ,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,2CAA4C,MAAO,KAAMQ,EAAAA,cAAoBb,EAAYQ,EAAG,KAAM,yDAA0D,KAAMK,EAAAA,cAAoBb,EAAYM,IAAK,KAAMO,EAAAA,cAAoBb,EAAYO,KAAM,KAAM,2EAA4E,KAAMM,EAAAA,cAAoBb,EAAYQ,EAAG,KAAM,uBAAwB,KAAMK,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,yCAA0C,KAAMI,EAAAA,cAAoBb,EAAYM,IAAK,KAAMO,EAAAA,cAAoBb,EAAYO,KAAM,KAAM,+EAAgF,KAAMM,EAAAA,cAAoBb,EAAYM,IAAK,KAAMO,EAAAA,cAAoBb,EAAYO,KAAM,KAAM,oOAA+Q,KAAMM,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,cAAe,KAAMU,EAAAA,cAAoBb,EAAYQ,EAAG,KAAM,2DAA4D,KAAMK,EAAAA,cAAoBb,EAAYM,IAAK,KAAMO,EAAAA,cAAoBb,EAAYO,KAAM,KAAM,8EAA+E,KAAMM,EAAAA,cAAoBb,EAAYQ,EAAG,KAAM,OAAQK,EAAAA,cAAoBb,EAAYU,EAAG,CACzgGI,KAAM,iFACL,kFAAmF,KAAMD,EAAAA,cAAoBb,EAAYM,IAAK,KAAMO,EAAAA,cAAoBb,EAAYO,KAAM,KAAM,0cAAqf,KAAMM,EAAAA,cAAoBb,EAAYQ,EAAG,KAAM,gEACztB,CAKA,MAJA,SAAoBT,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWjB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCjBe,SAASkB,EAAiBlB,GACvC,OAAOc,EAAAA,cAAoBK,EAAAA,EAAenB,EAAOc,EAAAA,cAAoBM,EAAqBpB,GAC5F,CAHAmB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2021-04-28-mysql-convertDBcolumn.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    h1: \"h1\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"배경\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"처음 개발을 시작할때 새로운 기능을 만들때 table을 새로 만들었다,\"), \"\\n\", React.createElement(_components.li, null, \"시스템에 기능이 추가되면서 사업지역의 사용이 늘어났음\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"문제\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"사업지역명의 데이터를 한글로 받음\"), \"\\n\", React.createElement(_components.li, null, \"같은 사업지역명 데이터를 sharings 와 companies 테이블에서 다른 컬럼명으로 사용하고 있다.\", \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"sharings 는 business_area로 지역데이터를 보관\"), \"\\n\", React.createElement(_components.li, null, \"companies 는 business_region로 지역 데이터를 보관\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"1 business_region table생성\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"\\nCREATE TABLE IF NOT EXISTS `business_region` (\\n\\n `id` INT NOT NULL AUTO_INCREMENT,\\n\\n `type` VARCHAR(50) NOT NULL COMMENT '기관 id',\\n\\n `key` VARCHAR(50) NOT NULL COMMENT '지역 key',\\n\\n `value` VARCHAR(50) NOT NULL COMMENT '지역명',\\n\\n PRIMARY KEY (`id`),\\n\\n KEY `idx_compaies_business_region_key` (`key`)\\n\\n);\\n\\n\")), \"\\n\", React.createElement(_components.h3, null, \"2 sharings 와 companies 테이블에서 사업지역명 통일\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"sharings 는 business_area로 지역데이터를 보관\"), \"\\n\", React.createElement(_components.li, null, \"companies 는 business_region로 지역 데이터를 보관\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이슈 sharings 의 컬럼을 business_area로 변경하고 사용하는 데이터를 찾아 변경\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"ALTER TABLE sharings RENAME COLUMN business_area TO business_region;\\n\")), \"\\n\", React.createElement(_components.p, null, \"신청 내역에서 사용되는 부분을 변경\"), \"\\n\", React.createElement(_components.h1, null, \"3 business_region 테이블에서 사업지역명 key값 정의\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"A01 전국\\nA02 서울특별시\\nA03 부산광역시\\nA04 인천광역시\\nA05 대구광역시\\nA06 광주광역시\\nA07 대전광역시\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"insert into (`type`,`key`,`value`)\\nvalues\\n(\\\"area\\\",\\\"A01\\\" ,\\\"전국\\\"),\\n(\\\"area\\\",\\\"A02\\\" ,\\\"서울특별시\\\"),\\n(\\\"area\\\",\\\"A03\\\" ,\\\"부산광역시\\\"),\\n(\\\"area\\\",\\\"A04\\\" ,\\\"인천광역시\\\"),\\n(\\\"area\\\",\\\"A05\\\" ,\\\"대구광역시\\\"),\\n(\\\"area\\\",\\\"A06\\\" ,\\\"광주광역시\\\"),\\n(\\\"area\\\",\\\"A07\\\" ,\\\"대전광역시\\\");\\n\")), \"\\n\", React.createElement(_components.h3, null, \"4.기존데이터 변경\"), \"\\n\", React.createElement(_components.p, null, \"sharings 의 business_region 값이 전국인 경우를 찾아서 값을 A01으로 변경한다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"UPDATE sharings SET business_region = '전국' WHERE business_region = A01;\\n\")), \"\\n\", React.createElement(_components.p, null, \"그룹으로\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/12754470/mysql-update-case-when-then-else\"\n  }, \"https://stackoverflow.com/questions/12754470/mysql-update-case-when-then-else\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"\\nUPDATE sharings SET business_region = CASE\\n\\tWHEN business_region =\\\"전국\\\" THEN \\\"A01\\\"\\n\\tWHEN business_region =\\\"서울특별시\\\" THEN \\\"A02\\\"\\n\\tWHEN business_region =\\\"부산광역시\\\" THEN \\\"A03\\\"\\n\\tWHEN business_region =\\\"인천광역시\\\" THEN \\\"A04\\\"\\n\\tWHEN business_region =\\\"대구광역시\\\" THEN \\\"A05\\\"\\n\\tWHEN business_region =\\\"광주광역시\\\" THEN \\\"A06\\\"\\n\\tWHEN business_region =\\\"대전광역시\\\" THEN \\\"A07\\\"\\n    END\\nWHERE business_region  in \\n(\\\"전국\\\" ,\\\"서울특별시\\\" ,\\\"부산광역시\\\" ,\\\"인천광역시\\\" ,\\\"대구광역시\\\" ,\\\"광주광역시\\\" ,\\\"대전광역시\\\" )\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"companies 의 business_region 값이 서울특별시 인 경우를 찾아서 값을 A01으로 변경한다\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/database/mysql/2021-04-28-mysql-convertDBcolumn.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","ol","li","pre","code","p","h1","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}