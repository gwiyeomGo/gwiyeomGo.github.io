"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[1757],{8006:function(e,t,n){n.r(t),n.d(t,{Head:function(){return p.F},default:function(){return s}});var l=n(7294),r=n(1151);function a(e,t){return a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},a(e,t)}var o=function(e){var t,n;function r(){return e.apply(this,arguments)||this}n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,a(t,n);var o=r.prototype;return o.componentDidMount=function(){this._updateIframeContent()},o.componentDidUpdate=function(e,t){this._updateIframeContent()},o._defineUrl=function(){var e=this.props,t=e.id,n=e.file;return"https://gist.github.com/"+t+".js"+(n?"?file="+n:"")},o._updateIframeContent=function(){var e=this.props,t=e.id,n=e.file,l=this.iframeNode,r=l.document;l.contentDocument?r=l.contentDocument:l.contentWindow&&(r=l.contentWindow.document);var a='<html><head><base target="_parent"><style>*{font-size:12px;}</style></head><body '+("onload=\"parent.document.getElementById('"+(n?"gist-"+t+"-"+n:"gist-"+t)+"').style.height=document.body.scrollHeight + 'px'\"")+">"+('<script type="text/javascript" src="'+this._defineUrl()+'"><\/script>')+"</body></html>";r.open(),r.writeln(a),r.close()},o.render=function(){var e=this,t=this.props,n=t.id,r=t.file;return l.createElement("iframe",{ref:function(t){e.iframeNode=t},width:"100%",frameBorder:0,id:r?"gist-"+n+"-"+r:"gist-"+n})},r}(l.PureComponent),c=o;var m=function(e){let{id:t,file:n}=e;return l.createElement(c,{id:t,file:n})};function i(e){const t=Object.assign({hr:"hr",h3:"h3",p:"p",blockquote:"blockquote",a:"a",ol:"ol",li:"li",ul:"ul"},(0,r.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(m,{id:"8eedf70a6d3844788ee8bbc200f6a3b8",file:"GangofFourDesignPattern.md"}),"\n",l.createElement(t.hr),"\n",l.createElement(t.h3,null,"Factory 메서드(팩토리 메스드 패턴)"),"\n",l.createElement(t.p,null,"개체에 채워야 할 속성이 많은 경우\n즉 개체 생성이 복잡해질 때 사용하는 곳에서 사용"),"\n",l.createElement(t.p,null,"확장에 열려있고 변경에 닫혀있는 객체 지향 원칙 =>\n기존 코드를 변경하지 않고 새기능을 얼마든지 확장 가능"),"\n",l.createElement(t.p,null,"기존 인스턴스 만드는 로직을 건드리지 않고 새 인스턴스를 다른 방법으로 확장 가능\n루즐리 커플드 (느슨한 결합) create 와 facotry 관계를 느슨하게\n코드는 간결해지고 기존 코드가 복잡해 지지 않는다\n하지만\n단점은 각자의 역할을 나눠서 클레스가 늘어난다."),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"How can we implement a Factory pattern?  ",l.createElement(t.a,{href:"https://devcharmander.medium.com/design-patterns-in-golang-factory-6164c4e0b43f"},"출처")),"\n"),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"Factory function"),"\n",l.createElement(t.li,null,"Interface Factory 추상화된 팩토리를 만든다"),"\n",l.createElement(t.li,null,"Factory Generator","\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Factory methods"),"\n",l.createElement(t.li,null,"Factory functions"),"\n"),"\n"),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://devcharmander.medium.com/design-pattern-in-golang-prototype-e864522e4eeb"},"Prototype Factory")),"\n"),"\n",l.createElement(t.p,null,l.createElement(t.a,{href:"https://www.sohamkamani.com/golang/2018-06-20-golang-factory-patterns/#multiple-implementations"},"https://www.sohamkamani.com/golang/2018-06-20-golang-factory-patterns/#multiple-implementations"),"\n",l.createElement(t.a,{href:"https://www.udemy.com/course/design-patterns-go/"},"https://www.udemy.com/course/design-patterns-go/"),"\n",l.createElement(t.a,{href:"https://haluan.medium.com/go-factory-design-pattern-e5301e0f3283"},"https://haluan.medium.com/go-factory-design-pattern-e5301e0f3283")),"\n",l.createElement(t.hr),"\n",l.createElement(t.h3,null,"Singleton 패턴"),"\n",l.createElement(t.p,null,"Singleton 을 사용한다면\n특정 변수를 어떻게 초기화 할 지 정할 수 있다"),"\n",l.createElement(t.p,null,"목적 : 어떠한 클레스의 인스턴스를 오직 한개만 만들어 글로벌하게 접근할 수 있도록 하는 방법\n특정 설정을 할 때 딱 하나의 인스턴스 에서만 할 수 있도록 해야 한다"),"\n",l.createElement(t.p,null,"new 를 사용해서 여러개의 인스턴스를 생성했을 때\n만든 인스턴스들은 같은 인스턴스가 아닙니다\nnew 를 사용하지 않고 클레스 내부에서 인스턴스를 1번만 생성하게 하고 그것을 클레스 외부에서 사용하도록 합니다."),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"프로세스(process):단순히 실행 중인 프로그램(program)"),"\n",l.createElement(t.li,null,"스레드(thread):프로세스(process) 내에서 실제로 작업을 수행하는 주체,모든 프로세스에는 한 개 이상의 스레드가 존재"),"\n",l.createElement(t.li,null,"멀티스레드 프로세스(multi-threaded process) :  두 개 이상의 스레드를 가지는 프로세스"),"\n"),"\n",l.createElement(t.h3,null,"추상 팩토리 메서드"),"\n",l.createElement(t.h3,null,"빌더패턴"),"\n",l.createElement(t.p,null,"인스턴스를 만들 때 그 다양한 인스턴스를 동일한 프로세스를 통해서 만들 수 있게 해주는 패턴"),"\n",l.createElement(t.h3,null,"트랜잭션 스크립트 패턴 (Transaction Script Pattern)"),"\n",l.createElement(t.p,null,"비즈니스로직울 서비스에넣는\n트랜젝션스크립트 패턴\n장점은 만들기 쉽다 직괸적\n단점은 업무에 복잡도가 많아지면 테스트하기 아렵거 유지보수 힘듬\n코드중복 발생 (서비스 복잡)\n즉 단순한업무에 적합\n비즈니스로직은 엔터테에 넣음"),"\n",l.createElement(t.h3,null,"domain model Pattern"),"\n",l.createElement(t.p,null,"인캡슐레이션 가능\n장점 중복이 사라지고\n서비스가 단순해 진다\n단점 엔터티 복잡"),"\n",l.createElement(t.p,null,l.createElement(t.a,{href:"https://javacan.tistory.com/entry/94"},"참조"),"\n",l.createElement(t.a,{href:"https:/.naver.com/PostView.nhn?blogId=good_ray&logNo=222267722516"},"참조1")),"\n",l.createElement(t.h3,null,"서킷 브레이커 패턴(Circuit Breaker Pattern)"),"\n",l.createElement(t.p,null,"서킷: 서비스와 상호 교류하는 함수\n브레이커 : 서킷과 동일한 함수 시그니처를 갖고 있는 클로저"),"\n",l.createElement(t.p,null,"서킷을 브레이커가 감싼 특화된 어댑터 패턴?\n브레이커는 내부적으로 서킷이 반환한 에러를 추적\n서킷이 사전에 정의된 기준을 넘어서는 수준의 에러 응답을 하면 브레이커는 요청을 차단하고\n상태를 open 으로 전환"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"백오프로직 :"),"\n"),"\n",l.createElement(t.p,null,l.createElement(t.a,{href:"https://mangkyu.tistory.com/261"},"https://mangkyu.tistory.com/261")),"\n",l.createElement(t.h3,null,"디바운스 vs 쓰로틀링"),"\n",l.createElement(t.p,null,"가령 부하가 높을 때 일시적으로 요청을 거부해 스로틀링을 하거나"),"\n",l.createElement(t.p,null,l.createElement(t.a,{href:"https://jake-seo-dev.tistory.com/651#Debounce%25---%EB%25--%25--%EB%25B-%25--%EC%25-A%25B-%EC%25-A%25A--%25--%EC%25--%25--%25--Throttling%25---%EC%25--%25B-%EB%25A-%25-C%ED%25-B%25--%EB%25A-%25---%25--%EC%25-D%25B-%EB%25-E%25--%25-F"},"https://jake-seo-dev.tistory.com/651#Debounce%---%EB%--%--%EB%B-%--%EC%-A%B-%EC%-A%A--%--%EC%--%--%--Throttling%---%EC%--%B-%EB%A-%-C%ED%-B%--%EB%A-%---%--%EC%-D%B-%EB%-E%--%-F")))}var u=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?l.createElement(t,e,l.createElement(i,e)):i(e)},p=n(8804);function s(e){return l.createElement(p.Z,e,l.createElement(u,e))}p.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-golang-2022-12-12-go-design-pattern-mdx-d4edb42acb33438a43f5.js.map